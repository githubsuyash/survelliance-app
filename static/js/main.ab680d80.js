/*! For license information please see main.ab680d80.js.LICENSE.txt */
(()=>{var e={3915:function(e,t,n){!function(e,t,n){"use strict";const a={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class r{constructor(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/".concat(this.getPrefix(e),"/model.json")}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd".concat(e):"ssd_".concat(e)}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),a=await this.model.executeAsync(e);await Promise.all(a.map((e=>e.data()))),a.map((e=>e.dispose())),e.dispose()}async infer(e,t,a){const r=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=r.shape[1],o=r.shape[2],i=await this.model.executeAsync(r),c=i[0].dataSync(),l=i[1].dataSync();r.dispose(),n.dispose(i);const[u,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),p=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const h=n.tidy((()=>{const e=n.tensor2d(l,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,u,t,a,a)})),f=h.dataSync();return h.dispose(),p!==n.getBackend()&&n.setBackend(p),this.buildDetectedObjects(o,s,l,u,f,d)}buildDetectedObjects(e,t,n,r,s,o){const i=s.length,c=[];for(let l=0;l<i;l++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[l]+e];const u=i[0]*t,d=i[1]*e,p=i[2]*t,h=i[3]*e;i[0]=d,i[1]=u,i[2]=h-d,i[3]=p-u,c.push({bbox:i,class:a[o[s[l]]+1].displayName,score:r[s[l]]})}return c}calculateMaxScores(e,t,n){const a=[],r=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let a=0;a<n;a++)e[s*n+a]>t&&(t=e[s*n+a],o=a);a[s]=t,r[s]=o}return[a,r]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=r,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",a=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model ".concat(t,". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'."));const s=new r(t,a);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(5452),n(5743))},5452:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>Ye,deregisterOp:()=>A,loadGraphModel:()=>Ke,loadGraphModelSync:()=>Xe,registerOp:()=>C,version_converter:()=>Ze});var a={};n.r(a),n.d(a,{json:()=>P});var r={};n.r(r),n.d(r,{json:()=>B});var s={};n.r(s),n.d(s,{json:()=>W});var o={};n.r(o),n.d(o,{json:()=>V});var i={};n.r(i),n.d(i,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>j});var u={};n.r(u),n.d(u,{json:()=>H});var d={};n.r(d),n.d(d,{json:()=>q});var p={};n.r(p),n.d(p,{json:()=>Y});var h={};n.r(h),n.d(h,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>X});var m={};n.r(m),n.d(m,{json:()=>Z});var g={};n.r(g),n.d(g,{json:()=>Q});var y={};n.r(y),n.d(y,{json:()=>J});var b={};n.r(b),n.d(b,{json:()=>$});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.BTT,abs:()=>ve.tnl,acos:()=>ve.HQu,acosh:()=>ve.FqL,add:()=>ve.WQq,addN:()=>ve.QiD,all:()=>ve.Q7R,any:()=>ve.bzn,argMax:()=>ve.FLi,argMin:()=>ve.XRg,asin:()=>ve.qRo,asinh:()=>ve.yHs,atan:()=>ve.rYl,atan2:()=>ve.FPz,atanh:()=>ve.rfv,avgPool:()=>ve.$jT,avgPool3d:()=>ve.sub,basicLSTMCell:()=>ve.lZX,batchNorm:()=>ve.$v7,batchNorm2d:()=>ve.BFc,batchNorm3d:()=>ve.kSi,batchNorm4d:()=>ve.T5N,batchToSpaceND:()=>ve.GTe,bincount:()=>ve.HbZ,bitwiseAnd:()=>ve.vjT,booleanMaskAsync:()=>ve.ftb,broadcastArgs:()=>ve.ROE,broadcastTo:()=>ve.hOW,buffer:()=>ve.ra8,cast:()=>ve.wgE,ceil:()=>ve.mkO,clipByValue:()=>ve.zQh,clone:()=>ve.o8B,complex:()=>ve.faB,concat:()=>ve.xWs,concat1d:()=>ve.I1m,concat2d:()=>ve.RPU,concat3d:()=>ve.O5O,concat4d:()=>ve.P1l,conv1d:()=>ve.kA9,conv2d:()=>ve.Xtf,conv2dTranspose:()=>ve.wX9,conv3d:()=>ve.IPL,conv3dTranspose:()=>ve.jIJ,cos:()=>ve.gnS,cosh:()=>ve.yIG,cosineWindow:()=>ve._jP,cumprod:()=>ve.Lp0,cumsum:()=>ve.rCv,denseBincount:()=>ve.aOp,depthToSpace:()=>ve.Rj8,depthwiseConv2d:()=>ve.Gl3,diag:()=>ve.smy,dilation2d:()=>ve.X7t,div:()=>ve.y4m,divNoNan:()=>ve.ek5,dot:()=>ve.Omf,dropout:()=>ve.EZY,einsum:()=>ve._3C,elu:()=>ve.Pqc,enclosingPowerOfTwo:()=>ve.FJY,ensureShape:()=>ve.QP2,equal:()=>ve.LCg,erf:()=>ve.Y12,euclideanNorm:()=>ve.p4S,exp:()=>ve.oNF,expandDims:()=>ve.UG6,expm1:()=>ve.IYd,eye:()=>ve.y5U,fft:()=>ve.hVP,fill:()=>ve.GSj,floor:()=>ve.RIf,floorDiv:()=>ve.wh_,fused:()=>ve.cZk,gather:()=>ve.kgh,gatherND:()=>ve.SY9,greater:()=>ve.rhj,greaterEqual:()=>ve.DQN,ifft:()=>ve.KGM,imag:()=>ve.ngS,image:()=>ve.Slp,inTopKAsync:()=>ve.U4u,irfft:()=>ve.ggX,isFinite:()=>ve.MIs,isInf:()=>ve.EN4,isNaN:()=>ve.yrW,leakyRelu:()=>ve.H8d,less:()=>ve.M7h,lessEqual:()=>ve.InN,linalg:()=>ve.mPL,linspace:()=>ve.mT8,localResponseNormalization:()=>ve.Kgs,log:()=>ve.Rm2,log1p:()=>ve.Kko,logSigmoid:()=>ve.nqI,logSoftmax:()=>ve.HPB,logSumExp:()=>ve.VZ,logicalAnd:()=>ve.n76,logicalNot:()=>ve.NSZ,logicalOr:()=>ve.ztW,logicalXor:()=>ve.rxB,losses:()=>ve.YYh,lowerBound:()=>ve.yzS,matMul:()=>ve.NoW,max:()=>ve.T9B,maxPool:()=>ve.jgi,maxPool3d:()=>ve.NYV,maxPoolWithArgmax:()=>ve.RO,maximum:()=>ve.PhQ,mean:()=>ve.i2o,meshgrid:()=>ve.OYQ,min:()=>ve.jkA,minimum:()=>ve.BpO,mirrorPad:()=>ve.FFZ,mod:()=>ve.ziu,moments:()=>ve.Clk,movingAverage:()=>ve.CRk,mul:()=>ve.lKK,multiRNNCell:()=>ve.YDF,multinomial:()=>ve.OjQ,neg:()=>ve.HZy,norm:()=>ve.xbf,notEqual:()=>ve.Ec,oneHot:()=>ve.Mw0,ones:()=>ve.SaS,onesLike:()=>ve.P61,op:()=>ve.op,outerProduct:()=>ve.X4o,pad:()=>ve.eVF,pad1d:()=>ve.BZs,pad2d:()=>ve.grY,pad3d:()=>ve.XHu,pad4d:()=>ve.WLX,pool:()=>ve.dzn,pow:()=>ve.n7C,prelu:()=>ve.NsG,print:()=>ve.yyV,prod:()=>ve._eU,raggedGather:()=>ve.whe,raggedRange:()=>ve.iyU,raggedTensorToTensor:()=>ve.Q0_,rand:()=>ve._9M,randomGamma:()=>ve.pR9,randomNormal:()=>ve.FE$,randomStandardNormal:()=>ve.m0H,randomUniform:()=>ve.YeY,randomUniformInt:()=>ve.HYA,range:()=>ve.y17,real:()=>ve.xav,reciprocal:()=>ve.VOZ,relu:()=>ve.VVh,relu6:()=>ve.j__,reshape:()=>ve.tQQ,reverse:()=>ve.BEg,reverse1d:()=>ve.QD2,reverse2d:()=>ve.LMr,reverse3d:()=>ve.I2l,reverse4d:()=>ve.JYU,rfft:()=>ve.z8$,round:()=>ve.LIG,rsqrt:()=>ve.Z$r,scalar:()=>ve.d_2,scatterND:()=>ve.NFr,searchSorted:()=>ve.sZg,selu:()=>ve.WfX,separableConv2d:()=>ve.wdz,setdiff1dAsync:()=>ve.F12,sigmoid:()=>ve.ry7,sign:()=>ve._SZ,signal:()=>ve.vPA,sin:()=>ve.F8e,sinh:()=>ve.L0l,slice:()=>ve.dik,slice1d:()=>ve.Q$M,slice2d:()=>ve.zAd,slice3d:()=>ve.wck,slice4d:()=>ve.R0O,softmax:()=>ve.Vs9,softplus:()=>ve.lw0,spaceToBatchND:()=>ve.eDJ,sparse:()=>ve.lMo,sparseToDense:()=>ve.Zhr,spectral:()=>ve.lOn,split:()=>ve.lDo,sqrt:()=>ve.RZD,square:()=>ve.EwI,squaredDifference:()=>ve.Pbu,squeeze:()=>ve.r2V,stack:()=>ve.t$z,step:()=>ve.PMw,stridedSlice:()=>ve.Ym9,string:()=>ve.YjP,sub:()=>ve.jbE,sum:()=>ve.czq,tan:()=>ve.Mlm,tanh:()=>ve.ymU,tensor:()=>ve.OEK,tensor1d:()=>ve.tGX,tensor2d:()=>ve.KtR,tensor3d:()=>ve.$_$,tensor4d:()=>ve.g9W,tensor5d:()=>ve.Lpo,tensor6d:()=>ve.yxw,tensorScatterUpdate:()=>ve.NNh,tile:()=>ve.Vsq,topk:()=>ve.rfw,transpose:()=>ve.mgz,truncatedNormal:()=>ve.efE,unique:()=>ve.AmM,unsortedSegmentSum:()=>ve.zAU,unstack:()=>ve.K$i,upperBound:()=>ve.rni,variable:()=>ve.bvq,where:()=>ve._M9,whereAsync:()=>ve.YJN,zeros:()=>ve.Ul9,zerosLike:()=>ve.POl});var S=n(5743);var T,N;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(T||(T={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(N||(N={}));const I={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function E(e){return I[e]}function A(e){delete I[e]}function R(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return _(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>_(e,n,a,r)))}const c=_(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:S.util.toNestedArray(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function _(e,t,n,a){const[r,s]=M(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(r,e)]));return void 0!==o?t[O(r,o)][s]:void 0}function F(e,t,n){return t[O(e,n.currentContextId)]}function D(e,t){const[n,a,r]=M(e,t);return[O(n,t&&t.currentContextId),a,r]}function O(e,t){return t?"".concat(e,"-").concat(t):e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function z(e,t,n){let a=R("pad",e,t,n);if("explicit"===a){a=R("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function L(e){return e.kept?e:(0,S.clone)(e)}const P=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],V=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],G=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],H=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Y=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],X=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Z=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],J=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ae{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,s,o,i,c,l,u,d,p,h,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=D(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?d.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=D(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=D(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ie(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ye(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=he(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ge(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ce(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=D(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=D(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?re(r.s,a):n}function oe(e,t,n){const a=e[t];return a?a.b:n}function ie(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function ce(e){switch("string"===typeof e&&(e=T[e]),e){case T.DT_FLOAT:case T.DT_HALF:return"float32";case T.DT_INT32:case T.DT_INT64:case T.DT_INT8:case T.DT_UINT8:return"int32";case T.DT_BOOL:return"bool";case T.DT_DOUBLE:return"float32";case T.DT_STRING:return"string";case T.DT_COMPLEX64:case T.DT_COMPLEX128:return"complex64";default:return null}}function le(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ue(e,t,n){const a=e[t];return a&&a.type?ce(a.type):n}function de(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>ce(e))):n}function pe(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function he(e,t,n){const a=e[t];return a&&a.shape?pe(a.shape):n}function fe(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>re(e,a))):n}function ge(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>pe(e))):n}function ye(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return _(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return _(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return oe(this.node.rawAttrs,e,t);if(null!=n.shape)return he(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9249);function xe(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];S.util.assert(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function we(e){return"number"!==typeof e&&!e.some((e=>e<0))}function ke(e,t,n){let a=Se(e,n);const r=!we(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=Se(e.shape,a)})),!we(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function Se(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class Te{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),xe(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return xe(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=(0,S.reshape)((0,S.slice)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Ne{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));xe(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=a,(0,S.keep)(this.idTensor)}copy(){return new Ne([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));xe(e,this.elementShape,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,a)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=ke(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,xe(a.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(xe(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Ne([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));xe(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=ke(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));xe(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));xe(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=ke(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(a)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],a)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));xe(this.elementShape,t,"TensorList shape mismatch: ");const n=ke(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Ie=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=R("thenBranch",e,t,n),r=R("elseBranch",e,t,n),s=R("cond",e,t,n),o=R("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=R("body",e,t,n),r=R("cond",e,t,n),s=R("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[L(R("pred",e,t,n))];case"Switch":{const a=R("pred",e,t,n);let r=R("data",e,t,n);return r.kept||(r=L(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==_(e,t,n)));if(a){return[L(_(a,t,n))]}return}case"Enter":{const a=R("frameName",e,t,n),r=R("tensor",e,t,n);return n.enterFrame(a),[L(r)]}case"Exit":{const a=R("tensor",e,t,n);return n.exitFrame(),[L(a)]}case"NextIteration":{const a=R("tensor",e,t,n);return n.nextIteration(),[L(a)]}case"TensorArrayV3":{const a=R("size",e,t,n),r=R("dtype",e,t,n),s=R("elementShape",e,t,n),o=R("dynamicSize",e,t,n),i=R("clearAfterRead",e,t,n),c=R("identicalElementShapes",e,t,n),l=R("name",e,t,n),u=new Te(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const a=R("tensorArrayId",e,t,n),r=R("index",e,t,n),s=R("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=R("tensorArrayId",e,t,n),r=R("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=R("tensorArrayId",e,t,n),r=R("indices",e,t,n),s=R("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=R("tensorArrayId",e,t,n),r=R("indices",e,t,n),s=R("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=R("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=R("tensorArrayId",e,t,n),r=R("tensor",e,t,n),s=R("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=R("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=R("tensorListId",e,t,n),r=R("index",e,t,n),s=R("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=R("tensorListId",e,t,n),r=R("index",e,t,n),s=R("elementShape",e,t,n),o=R("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=R("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Ne([],n,e.dtype,a),o=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(R("tensor",e,t,n),a,R("elementShape",e,t,n),R("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=R("elementShape",e,t,n),r=R("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=R(s,e,t,n),i=function(e,t,n,a){return new Ne([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=R("tensorListId",e,t,n),r=R("indices",e,t,n),s=R("elementShape",e,t,n),o=R("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=R("tensorListId",e,t,n),r=R("elementShape",e,t,n),s=R("elementDType",e,t,n),o=R("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));xe(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.unstack)(e);return new Ne(r,t,a)}(R("tensor",e,t,n),R("elementShape",e,t,n),R("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=R("tensorListId",e,t,n),r=n.getTensorList(a.id),s=R("dtype",e,t,n),o=R("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=R("tensorListId",e,t,n),r=R("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=R("tensorListId",e,t,n),r=R("elementShape",e,t,n),s=R("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=R("tensor",e,t,n),r=R("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=Se(e.shape.slice(1),n),o=0===a?0:e.size/a,i=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=(0,S.reshape)((0,S.slice)(e,i,c),s)}return e.dispose(),n})),c=new Ne([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,R("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=R("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorListResize":{const a=R("tensorListId",e,t,n),r=R("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ce(e,t,n){const[a,r]=R("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=R("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=R("strides",e,t,n),d=z(e,t,n),p=R("dataFormat",e,t,n).toUpperCase(),h=R("dilations",e,t,n);let[f,m]=R("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:R("leakyreluAlpha",e,t,n)}}function Ee(e,t,n){return{boxes:R("boxes",e,t,n),scores:R("scores",e,t,n),maxOutputSize:R("maxOutputSize",e,t,n),iouThreshold:R("iouThreshold",e,t,n),scoreThreshold:R("scoreThreshold",e,t,n),softNmsSigma:R("softNmsSigma",e,t,n)}}var Ae=n(1997);class Re{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Ae.d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),a=n.length,r=e.length;S.util.assert(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.keep)(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}function _e(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(R("a",e,t,n),R("b",e,t,n))];case"AddN":return[a.addN(R("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(R("a",e,t,n),R("b",e,t,n))];case"Mul":return[a.mul(R("a",e,t,n),R("b",e,t,n))];case"RealDiv":case"Div":return[a.div(R("a",e,t,n),R("b",e,t,n))];case"DivNoNan":return[a.divNoNan(R("a",e,t,n),R("b",e,t,n))];case"FloorDiv":return[a.floorDiv(R("a",e,t,n),R("b",e,t,n))];case"Sub":return[a.sub(R("a",e,t,n),R("b",e,t,n))];case"Minimum":return[a.minimum(R("a",e,t,n),R("b",e,t,n))];case"Maximum":return[a.maximum(R("a",e,t,n),R("b",e,t,n))];case"Pow":return[a.pow(R("a",e,t,n),R("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(R("a",e,t,n),R("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"basic_math":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(R("x",e,t,n))];case"Acos":return[a.acos(R("x",e,t,n))];case"Acosh":return[a.acosh(R("x",e,t,n))];case"Asin":return[a.asin(R("x",e,t,n))];case"Asinh":return[a.asinh(R("x",e,t,n))];case"Atan":return[a.atan(R("x",e,t,n))];case"Atan2":return[a.atan2(R("x",e,t,n),R("y",e,t,n))];case"Atanh":return[a.atanh(R("x",e,t,n))];case"Ceil":return[a.ceil(R("x",e,t,n))];case"Complex":return[a.complex(R("real",e,t,n),R("imag",e,t,n))];case"Cos":return[a.cos(R("x",e,t,n))];case"Cosh":return[a.cosh(R("x",e,t,n))];case"Elu":return[a.elu(R("x",e,t,n))];case"Erf":return[a.erf(R("x",e,t,n))];case"Exp":return[a.exp(R("x",e,t,n))];case"Expm1":return[a.expm1(R("x",e,t,n))];case"Floor":return[a.floor(R("x",e,t,n))];case"Log":return[a.log(R("x",e,t,n))];case"Log1p":return[a.log1p(R("x",e,t,n))];case"Imag":return[a.imag(R("x",e,t,n))];case"Neg":return[a.neg(R("x",e,t,n))];case"Reciprocal":return[a.reciprocal(R("x",e,t,n))];case"Real":return[a.real(R("x",e,t,n))];case"Relu":return[a.relu(R("x",e,t,n))];case"Round":return[a.round(R("x",e,t,n))];case"Selu":return[a.selu(R("x",e,t,n))];case"Sigmoid":return[a.sigmoid(R("x",e,t,n))];case"Sin":return[a.sin(R("x",e,t,n))];case"Sign":return[a.sign(R("x",e,t,n))];case"Sinh":return[a.sinh(R("x",e,t,n))];case"Softplus":return[a.softplus(R("x",e,t,n))];case"Sqrt":return[a.sqrt(R("x",e,t,n))];case"Square":return[a.square(R("x",e,t,n))];case"Tanh":return[a.tanh(R("x",e,t,n))];case"Tan":return[a.tan(R("x",e,t,n))];case"ClipByValue":return[a.clipByValue(R("x",e,t,n),R("clipValueMin",e,t,n),R("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(R("x",e,t,n))];case"Rsqrt":return[a.rsqrt(_(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(R("x",e,t,n),R("alpha",e,t,n))];case"Prelu":return[a.prelu(R("x",e,t,n),R("alpha",e,t,n))];case"IsNan":return[a.isNaN(_(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(_(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(_(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"control":return Ie(e,t,n);case"convolution":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=R("stride",e,t,n),s=R("pad",e,t,n),o=R("dataFormat",e,t,n).toUpperCase(),i=R("dilation",e,t,n);return[a.conv1d(R("x",e,t,n),R("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=R("strides",e,t,n),s=z(e,t,n),o=R("dataFormat",e,t,n).toUpperCase(),i=R("dilations",e,t,n);return[a.conv2d(R("x",e,t,n),R("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.conv2d({x:R("x",e,t,n),filter:R("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=Ce(e,t,n);return[a.fused.depthwiseConv2d({x:R("x",e,t,n),filter:R("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=R("outputShape",e,t,n),s=R("strides",e,t,n),o=z(e,t,n);return[a.conv2dTranspose(R("x",e,t,n),R("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=R("strides",e,t,n),s=z(e,t,n),o=R("dilations",e,t,n),i=R("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(R("input",e,t,n),R("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("dataFormat",e,t,n).toUpperCase(),i=R("dilations",e,t,n);return[a.conv3d(R("x",e,t,n),R("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("kernelSize",e,t,n);return[a.avgPool(R("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("kernelSize",e,t,n);return[a.maxPool(R("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("kernelSize",e,t,n),i=R("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(R("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("kernelSize",e,t,n);return[a.avgPool3d(R("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("kernelSize",e,t,n);return[a.maxPool3d(R("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=R("strides",e,t,n),s=R("pad",e,t,n),o=R("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(R("x",e,t,n),R("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"creation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=R("shape",e,t,n),s=R("dtype",e,t,n),o=R("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=R("start",e,t,n),s=R("stop",e,t,n),o=R("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=R("logits",e,t,n),s=R("numSamples",e,t,n),o=R("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=R("indices",e,t,n),s=R("depth",e,t,n),o=R("onValue",e,t,n),i=R("offValue",e,t,n),c=R("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(R("shape",e,t,n),R("dtype",e,t,n))];case"OnesLike":return[a.onesLike(R("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(R("shape",e,t,n),R("dtype",e,t,n),R("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(R("shape",e,t,n),R("minval",e,t,n),R("maxval",e,t,n),R("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(R("shape",e,t,n),R("minval",e,t,n),R("maxval",e,t,n),R("seed",e,t,n))];case"Range":{const r=R("start",e,t,n),s=R("stop",e,t,n),o=R("step",e,t,n);return[a.range(r,s,o,R("dtype",e,t,n))]}case"TruncatedNormal":{const r=R("shape",e,t,n),s=R("mean",e,t,n),o=R("stdDev",e,t,n),i=R("seed",e,t,n);return[a.truncatedNormal(r,s,o,R("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(R("shape",e,t,n),R("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Ee(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n),l=R("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Ee(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(R("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(R("x",e,t,n),R("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n);case"evaluation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=R("sortedSequence",e,t,n),s=R("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=R("x",e,t,n),s=R("k",e,t,n),o=R("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=R("sortedSequence",e,t,n),s=R("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=R("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=R("x",e,t,n),s=R("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"image":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=R("images",e,t,n),s=R("size",e,t,n),o=R("alignCorners",e,t,n),i=R("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=R("images",e,t,n),s=R("size",e,t,n),o=R("alignCorners",e,t,n),i=R("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=R("image",e,t,n),s=R("boxes",e,t,n),o=R("boxInd",e,t,n),i=R("cropSize",e,t,n),c=R("method",e,t,n),l=R("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=R("images",e,t,n),s=R("transforms",e,t,n),o=R("outputShape",e,t,n),i=R("fillValue",e,t,n),c=R("interpolation",e,t,n),l=R("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"graph":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=R("default",e,t,n);return[_(e.name,t,n)||r];case"Placeholder":return[_(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[L(R("x",e,t,n))];case"IdentityN":return R("x",e,t,n).map((e=>L(e)));case"Shape":return[a.tensor1d(R("x",e,t,n).shape,"int32")];case"ShapeN":return R("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(R("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(R("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=R("x",e,t,n),o=R("data",e,t,n),i=R("message",e,t,n),c=R("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"logical":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(R("a",e,t,n),R("b",e,t,n))];case"NotEqual":return[a.notEqual(R("a",e,t,n),R("b",e,t,n))];case"Greater":return[a.greater(R("a",e,t,n),R("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(R("a",e,t,n),R("b",e,t,n))];case"Less":return[a.less(R("a",e,t,n),R("b",e,t,n))];case"LessEqual":return[a.lessEqual(R("a",e,t,n),R("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(R("a",e,t,n),R("b",e,t,n))];case"LogicalNot":return[a.logicalNot(R("a",e,t,n))];case"LogicalOr":return[a.logicalOr(R("a",e,t,n),R("b",e,t,n))];case"Select":case"SelectV2":return[a.where(R("condition",e,t,n),R("a",e,t,n),R("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(R("a",e,t,n),R("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"matrices":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(R("a",e,t,n),R("b",e,t,n),R("transposeA",e,t,n),R("transposeB",e,t,n))];case"Einsum":return[a.einsum(R("equation",e,t,n),...R("tensors",e,t,n))];case"Transpose":return[a.transpose(R("x",e,t,n),R("perm",e,t,n))];case"_FusedMatMul":const[r,s]=R("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=R("numArgs",e,t,n),l=R("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=R("args",e,t,n);return[a.fused.matMul({a:R("a",e,t,n),b:R("b",e,t,n),transposeA:R("transposeA",e,t,n),transposeB:R("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(R("a",e,t,n),R("numLower",e,t,n),R("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"normalization":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(R("x",e,t,n),R("axis",e,t,n),R("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(R("x",e,t,n),R("mean",e,t,n),R("variance",e,t,n),R("offset",e,t,n),R("scale",e,t,n),R("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(R("x",e,t,n),R("radius",e,t,n),R("bias",e,t,n),R("alpha",e,t,n),R("beta",e,t,n))];case"Softmax":return[a.softmax(R("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"ragged":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(R("paramsNestedSplits",e,t,n),R("paramsDenseValues",e,t,n),R("indices",e,t,n),R("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(R("starts",e,t,n),R("limits",e,t,n),R("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(R("shape",e,t,n),R("values",e,t,n),R("defaultValue",e,t,n),R("rowPartitionTensors",e,t,n),R("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"reduction":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.max(R("x",e,t,n),r,s)]}case"Mean":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.mean(R("x",e,t,n),r,s)]}case"Min":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.min(R("x",e,t,n),r,s)]}case"Sum":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.sum(R("x",e,t,n),r,s)]}case"All":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.all(R("x",e,t,n),r,s)]}case"Any":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.any(R("x",e,t,n),r,s)]}case"ArgMax":{const r=R("axis",e,t,n);return[a.argMax(R("x",e,t,n),r)]}case"ArgMin":{const r=R("axis",e,t,n);return[a.argMin(R("x",e,t,n),r)]}case"Prod":{const r=R("axis",e,t,n),s=R("keepDims",e,t,n);return[a.prod(R("x",e,t,n),r,s)]}case"Cumprod":{const r=R("axis",e,t,n),s=R("exclusive",e,t,n),o=R("reverse",e,t,n);return[a.cumprod(R("x",e,t,n),r,s,o)]}case"Cumsum":{const r=R("axis",e,t,n),s=R("exclusive",e,t,n),o=R("reverse",e,t,n);return[a.cumsum(R("x",e,t,n),r,s,o)]}case"Bincount":const r=R("x",e,t,n),s=R("weights",e,t,n),o=R("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=R("x",e,t,n),s=R("weights",e,t,n),o=R("size",e,t,n),i=R("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"slice_join":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=R("n",e,t,n),s=R("axis",e,t,n);let o=R("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=R("x",e,t,n),s=R("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=R("axis",e,t,n),s=R("batchDims",e,t,n),o=R("x",e,t,n),i=R("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=R("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=R("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=R("axis",e,t,n),s=R("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=R("begin",e,t,n),s=R("size",e,t,n);return[a.slice(R("x",e,t,n),r,s)]}case"StridedSlice":{const r=R("begin",e,t,n),s=R("end",e,t,n),o=R("strides",e,t,n),i=R("beginMask",e,t,n),c=R("endMask",e,t,n),l=R("ellipsisMask",e,t,n),u=R("newAxisMask",e,t,n),d=R("shrinkAxisMask",e,t,n),p=R("x",e,t,n);return[a.stridedSlice(p,r,s,o,i,c,l,u,d)]}case"Pack":return(0,S.tidy)((()=>{const r=R("axis",e,t,n),s=R("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=S.util.arraysEqual(e.shape,o);if(!t&&!S.util.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=R("axis",e,t,n),s=R("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=R("reps",e,t,n);return[a.tile(R("x",e,t,n),r)]}case"Split":case"SplitV":{const r=R("axis",e,t,n),s=R("numOrSizeSplits",e,t,n),o=R("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=R("indices",e,t,n),s=R("values",e,t,n),o=R("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=R("x",e,t,n),s=R("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=R("sparseIndices",e,t,n),s=R("outputShape",e,t,n),o=R("sparseValues",e,t,n),i=R("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=R("indices",e,t,n),s=R("values",e,t,n),o=R("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"sparse":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(R("indices",e,t,n),R("values",e,t,n),R("denseShape",e,t,n),R("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(R("inputIndices",e,t,n),R("inputShape",e,t,n),R("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(R("data",e,t,n),R("indices",e,t,n),R("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(R("data",e,t,n),R("indices",e,t,n),R("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"spectral":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(R("x",e,t,n))];case"IFFT":return[a.ifft(R("x",e,t,n))];case"RFFT":return[a.rfft(R("x",e,t,n))];case"IRFFT":return[a.irfft(R("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"string":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(R("input",e,t,n),R("pattern",e,t,n),R("rewrite",e,t,n),R("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(R("data",e,t,n),R("dataSplits",e,t,n),R("separator",e,t,n),R("nGramWidths",e,t,n),R("leftPad",e,t,n),R("rightPad",e,t,n),R("padWidth",e,t,n),R("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(R("input",e,t,n),R("delimiter",e,t,n),R("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(R("input",e,t,n),R("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"transformation":return r((()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(R("x",e,t,n),R("dtype",e,t,n))];case"ExpandDims":{const r=R("axis",e,t,n);return[a.expandDims(R("x",e,t,n),r)]}case"Squeeze":{const r=R("axis",e,t,n);return[a.squeeze(R("x",e,t,n),r)]}case"Reshape":return[a.reshape(R("x",e,t,n),R("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(R("x",e,t,n),R("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(R("x",e,t,n),R("padding",e,t,n),R("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(R("x",e,t,n),R("padding",e,t,n),R("constantValue",e,t,n))];case"SpaceToBatchND":{const r=R("blockShape",e,t,n),s=R("paddings",e,t,n);return[a.spaceToBatchND(R("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=R("blockShape",e,t,n),s=R("crops",e,t,n);return[a.batchToSpaceND(R("x",e,t,n),r,s)]}case"DepthToSpace":{const r=R("blockSize",e,t,n),s=R("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(R("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(R("x",e,t,n),R("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(R("s0",e,t,n),R("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}}(e,t,n)));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=R("keyDType",e,t,n),s=R("valueDType",e,t,n),o=new Re(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=R("tableHandle",e,t,n,a),s=R("keys",e,t,n),o=R("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=R("tableHandle",e,t,n,a),s=R("keys",e,t,n),o=R("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=R("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}})(e,t,n,a);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.util.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Fe{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function De(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>M(e)[0])));a=a||[];const u=new Set(a.map((e=>M(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(Be(e)||We(e)||Ve(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function Oe(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>M(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const p=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),h=[...p];for(;p.length>0;){const e=p.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(h.push(n.name),p.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}const s=e.filter((e=>r.has(e.name)));return s}(h.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new Me("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new Me("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new Me("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new Me("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class Me extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const ze=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Le=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Pe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Be(e){return ze.has(e.op)}function We(e){return Le.has(e.op)}function Ve(e){return Pe.has(e.op)}class Ue{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Ue(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=De(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=Oe(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>Be(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[M(e)[0]])),r=t.map((e=>M(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.tidy)((()=>{const n=new Fe(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=M(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=_e(e,a,n,this._resourceManager);if(S.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>_(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!Be(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(Be(e))continue;const t=F(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return Be(e)||r.has(e.name)}if(!Be(e)&&null!=s)for(const i of s){if(o(i))continue;const e=F(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Fe(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>_(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[M(e)[0]])),o=n.map((e=>M(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:p}=De(e,c,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=M(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;h.length>0;){const e=this.processStack(s,h,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!Be(e)&&!_(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(p,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&R("isConstant",e.node,a,n)&&([u]=D(e.node.name,n)),null==a[e.node.name]){const d=_e(e.node,a,n,this._resourceManager);u||([u]=D(e.node.name,n));const p=n.currentContext;S.util.isPromise(d)?l.push(d.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=p,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=D(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!_(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!_(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=M(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.util.assert(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=M(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class Ge{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var je=n(285);const He="?tfjs-format=file",qe="model.json";class Ye{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Ge}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,je.s5)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new Ue(ae.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ae.Instance.transformGraph(e.modelInitializer);this.initializer=new Ue(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ke(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return"".concat(e).concat(qe).concat(He)}(e));const a=new Ye(e,t,n);return await a.load(),a}function Xe(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,r,a);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new Ye(t);return n.load(),n}const Ze="4.19.0"},6790:(e,t,n)=>{"use strict";n.d(t,{GJ:()=>a,uI:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,a,r){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},6692:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||r)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,a,r){return c(e,t,n,a,r,0)}function o(e,t,n,a,r,s){return c(e,t,n,a,r,0,!1,s,!0)}function i(e,t,n,a,r,s){return c(e,t,n,a,r,s,!0)}function c(e,t,n,r,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],p=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const h=[];for(let a=0;a<t.length;a++)t[a]>s&&h.push({score:t[a],boxIndex:a,suppressBeginIndex:0});h.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,o,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&a(h,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),p&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(i-s)*(c-o),f=(d-l)*(p-u);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,d),b=Math.min(c,p),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(h+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{c7:()=>s,ZS:()=>o,ut:()=>i})},9286:(e,t,n)=>{"use strict";n.d(t,{Y:()=>r});var a=n(259);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.r)(e,"int32"),s=(0,a.r)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}},2164:(e,t,n)=>{"use strict";n.d(t,{T2:()=>x,Ye:()=>v});var a=n(6790),r=n(5399),s=n(7926),o=n(9554),i=n(843),c=n(4124),l=n(8977),u=n(1426);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,r._K)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then((n=>{p(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class h{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?u.av("".concat(a,"ms"),9):a.error,i=u.av(e,25),c=t.rank,l=t.size,d=u.av(t.shape.toString(),14);let p="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;p+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(p,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(9494),m=n(8804);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.i("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.Op)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.Op)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.uI||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.i("Initialization of backend ".concat(e," failed")),c.i(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.lzr,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.KXH,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i._5)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i._5)(t,this.backendName);u.vA(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:p}=e,h=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),a&&this.addTapeNode(l,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.vQ)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(u.vA(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.Kg(e[0])&&(r=e.map((e=>l.encodeString(e))));const s=a.write(r,t,n),o=new f.qY(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.SL)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new f.qY(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f.rT(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.jv(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f.rT||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.jv(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.vQ)(e);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.Ty(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.vA(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.vA(r instanceof f.qY,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.FZ)((0,u.Ze)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!u.r1(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return u.vA(u.Tn(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;u.vA(a.every((e=>e instanceof f.qY)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));return t.runKernelFunc({forwardFunc:(t,n)=>(s=e(...a,n),u.vA(s.value instanceof f.qY,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.vA(u.Tn(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),backwardsFunc:(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.vA(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.vA(r.every((e=>e instanceof f.qY)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.L)();if(null==e._tfengine){const t=new r.OH(e);e._tfengine=new b(t)}return(0,r.tj)(e._tfengine.ENV),(0,f.qP)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.OMN,n)}},5399:(e,t,n)=>{"use strict";n.d(t,{Km:()=>c,OH:()=>s,_K:()=>i,tj:()=>l});var a=n(1426);const r="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.yL)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e[r].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")})),t}function i(){return c}let c=null;function l(e){c=e}},7926:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{L:()=>r,m:()=>s})},8046:(e,t,n)=>{"use strict";n.d(t,{AS:()=>g,DZ:()=>m,Gc:()=>x,Hi:()=>p,Hs:()=>I,IS:()=>l,ME:()=>f,Ok:()=>C,Sm:()=>i,W4:()=>T,aC:()=>y,fL:()=>u,gJ:()=>N,gY:()=>c,go:()=>S,jh:()=>v,jz:()=>w,kB:()=>b,m1:()=>h,rE:()=>k,rm:()=>d});var a=n(2164),r=n(5399),s=n(9494),o=n(8804);function i(){(0,r._K)().set("PROD",!0)}function c(){(0,r._K)().set("DEBUG",!0)}function l(){(0,r._K)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,r._K)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.T2.disposeVariables()}function p(){return a.T2}function h(){return a.T2.memory()}function f(e){return a.T2.profile(e)}function m(e,t){return a.T2.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return a.T2.keep(e)}function b(e){return a.T2.time(e)}function v(e){return a.T2.setBackend(e)}function x(){return a.T2.ready()}function w(){return a.T2.backendName}function k(e){a.T2.removeBackend(e)}function S(e){return a.T2.findBackend(e)}function T(e){return a.T2.findBackendFactory(e)}function N(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.T2.registerBackend(e,t,n)}function I(){return a.T2.backend}function C(e,t){(0,r._K)().setPlatform(e,t)}(0,s.B4)(u)},1839:(e,t,n)=>{"use strict";n.d(t,{Dv:()=>i,_X:()=>p,jY:()=>l,mu:()=>u,ok:()=>c,y7:()=>d});var a=n(2164),r=n(9494),s=n(4148),o=n(1426);function i(e){return o.vA(o.Tn(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,s.YT)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grad"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(r)),[r],i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function c(e){return o.vA(o.Tn(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.vA(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,s.j1)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s.YT)(n,"dy","tf.grads"):null;return a.T2.tidy((()=>{const{value:t,grads:n}=a.T2.gradients((()=>e(...r)),r,i);return null!=i&&o.O3(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function l(e){return o.vA(o.Tn(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.vA(t instanceof r.qY,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.vA(null==n||n instanceof r.qY,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:i}=a.T2.gradients((()=>e(t)),[t],n);return h(s),{grad:s[0],value:i}}}function u(e){return o.vA(o.Tn(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.vA(Array.isArray(t)&&t.every((e=>e instanceof r.qY)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.vA(null==n||n instanceof r.qY,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=a.T2.gradients((()=>e(...t)),t,n);return null!=n&&o.O3(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(e,t){o.vA(o.Tn(e),(()=>"The f passed in variableGrads(f) must be a function")),o.vA(null==t||Array.isArray(t)&&t.every((e=>e instanceof r.rT)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.T2.registeredVariables)t.push(a.T2.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.vA(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.T2.gradients(e,t,null,!0);o.vA(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.vA(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=s&&s.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function p(e){return a.T2.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},5743:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.ljI,Acos:()=>yt.Vvy,Acosh:()=>yt.PH8,AdadeltaOptimizer:()=>Re,AdagradOptimizer:()=>Fe,AdamOptimizer:()=>Me,AdamaxOptimizer:()=>Pe,Add:()=>yt.OMN,AddN:()=>yt.EkD,All:()=>yt.u8Z,Any:()=>yt.FSt,ArgMax:()=>yt.Jp_,ArgMin:()=>yt.p_m,Asin:()=>yt.QKF,Asinh:()=>yt.epO,Atan:()=>yt.TyE,Atan2:()=>yt.lxb,Atanh:()=>yt.zP9,AvgPool:()=>yt.ho8,AvgPool3D:()=>yt.cS,AvgPool3DGrad:()=>yt.wwC,AvgPoolGrad:()=>yt.VCH,BatchMatMul:()=>yt.jAQ,BatchToSpaceND:()=>yt.Ik2,Bincount:()=>yt.N4F,BitwiseAnd:()=>yt.HNs,BroadcastArgs:()=>yt.vj7,BroadcastTo:()=>yt.LB5,Cast:()=>yt.KXH,Ceil:()=>yt.QDP,ClipByValue:()=>yt.vaV,Complex:()=>yt.pr3,ComplexAbs:()=>yt.$zE,Concat:()=>yt.$dB,Conv2D:()=>yt.p2J,Conv2DBackpropFilter:()=>yt.rFm,Conv2DBackpropInput:()=>yt.jfg,Conv3D:()=>yt.A1h,Conv3DBackpropFilterV2:()=>yt.iGz,Conv3DBackpropInputV2:()=>yt.gC7,Cos:()=>yt.Mn0,Cosh:()=>yt.MnK,CropAndResize:()=>yt.MRQ,Cumprod:()=>yt.jj_,Cumsum:()=>yt.nY8,DataStorage:()=>ha.GJ,DenseBincount:()=>yt.wNW,DepthToSpace:()=>yt.TMz,DepthwiseConv2dNative:()=>yt.tGH,DepthwiseConv2dNativeBackpropFilter:()=>yt.X$8,DepthwiseConv2dNativeBackpropInput:()=>yt.nVu,Diag:()=>yt.ORI,Dilation2D:()=>yt.jxD,Dilation2DBackpropFilter:()=>yt.pk0,Dilation2DBackpropInput:()=>yt.bP9,Draw:()=>yt.XmO,ENV:()=>b.Km,Einsum:()=>yt.Qgm,Elu:()=>yt.Pah,EluGrad:()=>yt.rsH,Environment:()=>b.OH,Equal:()=>yt.BRl,Erf:()=>yt._s9,Exp:()=>yt.ox3,ExpandDims:()=>yt.ybN,Expm1:()=>yt.ybj,FFT:()=>yt.rGP,Fill:()=>yt.SQl,FlipLeftRight:()=>yt.BxF,Floor:()=>yt.ZgB,FloorDiv:()=>yt.ElG,FromPixels:()=>yt.awo,FusedBatchNorm:()=>yt.i5R,FusedConv2D:()=>yt.aAr,FusedDepthwiseConv2D:()=>yt.T7M,GatherNd:()=>yt.O4G,GatherV2:()=>yt.mxL,Greater:()=>yt.XhZ,GreaterEqual:()=>yt.lLS,IFFT:()=>yt.OAQ,Identity:()=>yt.lzr,Imag:()=>yt.dv8,IsFinite:()=>yt.gIW,IsInf:()=>yt.E3$,IsNan:()=>yt.iPs,KernelBackend:()=>ha.uI,LRN:()=>yt.jM4,LRNGrad:()=>yt.ToN,LeakyRelu:()=>yt.X0$,Less:()=>yt.mIA,LessEqual:()=>yt.CwD,LinSpace:()=>yt.mnI,Log:()=>yt.tG8,Log1p:()=>yt.Cg$,LogSoftmax:()=>yt.zfU,LogicalAnd:()=>yt.RUm,LogicalNot:()=>yt.nZd,LogicalOr:()=>yt.LXA,LogicalXor:()=>yt.RW8,LowerBound:()=>yt.yPW,MatrixBandPart:()=>yt.WRv,Max:()=>yt.VAI,MaxPool:()=>yt.t3d,MaxPool3D:()=>yt.ySp,MaxPool3DGrad:()=>yt.cHb,MaxPoolGrad:()=>yt.RXX,MaxPoolWithArgmax:()=>yt.TL8,Maximum:()=>yt.LDN,Mean:()=>yt.g5A,Min:()=>yt.lNG,Minimum:()=>yt.LG0,MirrorPad:()=>yt.x7F,Mod:()=>yt.BLA,MomentumOptimizer:()=>We,Multinomial:()=>yt.WT3,Multiply:()=>yt.xu7,Neg:()=>yt.l0G,NonMaxSuppressionV3:()=>yt.SDM,NonMaxSuppressionV4:()=>yt.Zl4,NonMaxSuppressionV5:()=>yt.e0f,NotEqual:()=>yt.ylV,OP_SCOPE_SUFFIX:()=>Qt.BTT,OneHot:()=>yt.urI,OnesLike:()=>yt.LWX,Optimizer:()=>Ae,OptimizerConstructors:()=>Xt,Pack:()=>yt.mM$,PadV2:()=>yt.ODT,Pool:()=>yt.bCz,Pow:()=>yt.pyJ,Prelu:()=>yt.Ncv,Prod:()=>yt.kdj,RMSPropOptimizer:()=>Ve,RaggedGather:()=>yt.oJ2,RaggedRange:()=>yt.CQC,RaggedTensorToTensor:()=>yt.mH5,Range:()=>yt.Q6t,Rank:()=>Zt.rg,Real:()=>yt.LRy,RealDiv:()=>yt.sDr,Reciprocal:()=>yt.huO,Reduction:()=>Jt.i,Relu:()=>yt.fUj,Relu6:()=>yt.P_L,Reshape:()=>yt.R23,ResizeBilinear:()=>yt.hgw,ResizeBilinearGrad:()=>yt.FCQ,ResizeNearestNeighbor:()=>yt.jOE,ResizeNearestNeighborGrad:()=>yt.XQy,Reverse:()=>yt.D7i,RotateWithOffset:()=>yt.BK4,Round:()=>yt.hVg,Rsqrt:()=>yt.TOR,SGDOptimizer:()=>Be,ScatterNd:()=>yt.pJc,SearchSorted:()=>yt.uWl,Select:()=>yt.l6P,Selu:()=>yt.u$b,Sigmoid:()=>yt.vI1,Sign:()=>yt.YVe,Sin:()=>yt.hql,Sinh:()=>yt.J3C,Slice:()=>yt.JiE,Softmax:()=>yt.rFG,Softplus:()=>yt.Fin,SpaceToBatchND:()=>yt.A8B,SparseFillEmptyRows:()=>yt.C8s,SparseReshape:()=>yt.BoJ,SparseSegmentMean:()=>yt.L6G,SparseSegmentSum:()=>yt.DvZ,SparseToDense:()=>yt.jgd,SplitV:()=>yt.Blb,Sqrt:()=>yt.dFH,Square:()=>yt.M6A,SquaredDifference:()=>yt.Ddj,StaticRegexReplace:()=>yt.GZp,Step:()=>yt.pnw,StridedSlice:()=>yt.UcO,StringNGrams:()=>yt.YAb,StringSplit:()=>yt.iW0,StringToHashBucketFast:()=>yt.$jE,Sub:()=>yt.PbM,Sum:()=>yt.WuN,Tan:()=>yt.oFs,Tanh:()=>yt.iuW,Tensor:()=>pe.qY,TensorBuffer:()=>pe.yl,TensorScatterUpdate:()=>yt.X4r,Tile:()=>yt.FAs,TopK:()=>yt.TBb,Transform:()=>yt.dLy,Transpose:()=>yt.wx0,Unique:()=>yt.EwU,Unpack:()=>yt.dXR,UnsortedSegmentSum:()=>yt.pPe,UpperBound:()=>yt.RMm,Variable:()=>pe.rT,ZerosLike:()=>yt.xJ3,_FusedMatMul:()=>yt.Dr,abs:()=>Qt.tnl,acos:()=>Qt.HQu,acosh:()=>Qt.FqL,add:()=>Qt.WQq,addN:()=>Qt.QiD,all:()=>Qt.Q7R,any:()=>Qt.bzn,argMax:()=>Qt.FLi,argMin:()=>Qt.XRg,asin:()=>Qt.qRo,asinh:()=>Qt.yHs,atan:()=>Qt.rYl,atan2:()=>Qt.FPz,atanh:()=>Qt.rfv,avgPool:()=>Qt.$jT,avgPool3d:()=>Qt.sub,backend:()=>fe.Hs,backend_util:()=>d,basicLSTMCell:()=>Qt.lZX,batchNorm:()=>Qt.$v7,batchNorm2d:()=>Qt.BFc,batchNorm3d:()=>Qt.kSi,batchNorm4d:()=>Qt.T5N,batchToSpaceND:()=>Qt.GTe,bincount:()=>Qt.HbZ,bitwiseAnd:()=>Qt.vjT,booleanMaskAsync:()=>Qt.ftb,broadcastArgs:()=>Qt.ROE,broadcastTo:()=>Qt.hOW,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Qt.ra8,cast:()=>Qt.wgE,ceil:()=>Qt.mkO,clipByValue:()=>Qt.zQh,clone:()=>Qt.o8B,complex:()=>Qt.faB,concat:()=>Qt.xWs,concat1d:()=>Qt.I1m,concat2d:()=>Qt.RPU,concat3d:()=>Qt.O5O,concat4d:()=>Qt.P1l,conv1d:()=>Qt.kA9,conv2d:()=>Qt.Xtf,conv2dTranspose:()=>Qt.wX9,conv3d:()=>Qt.IPL,conv3dTranspose:()=>Qt.jIJ,copyRegisteredKernels:()=>bt.Cf,cos:()=>Qt.gnS,cosh:()=>Qt.yIG,cosineWindow:()=>Qt._jP,cumprod:()=>Qt.Lp0,cumsum:()=>Qt.rCv,customGrad:()=>we._X,denseBincount:()=>Qt.aOp,deprecationWarn:()=>fe.fL,depthToSpace:()=>Qt.Rj8,depthwiseConv2d:()=>Qt.Gl3,device_util:()=>a,diag:()=>Qt.smy,dilation2d:()=>Qt.X7t,disableDeprecationWarnings:()=>fe.IS,dispose:()=>fe.AS,disposeVariables:()=>fe.rm,div:()=>Qt.y4m,divNoNan:()=>Qt.ek5,dot:()=>Qt.Omf,dropout:()=>Qt.EZY,einsum:()=>Qt._3C,elu:()=>Qt.Pqc,enableDebugMode:()=>fe.gY,enableProdMode:()=>fe.Sm,enclosingPowerOfTwo:()=>Qt.FJY,engine:()=>fe.Hi,ensureShape:()=>Qt.QP2,env:()=>b._K,equal:()=>Qt.LCg,erf:()=>Qt.Y12,euclideanNorm:()=>Qt.p4S,exp:()=>Qt.oNF,expandDims:()=>Qt.UG6,expm1:()=>Qt.IYd,eye:()=>Qt.y5U,fft:()=>Qt.hVP,fill:()=>Qt.GSj,findBackend:()=>fe.go,findBackendFactory:()=>fe.W4,floor:()=>Qt.RIf,floorDiv:()=>Qt.wh_,fused:()=>Qt.cZk,gather:()=>Qt.kgh,gatherND:()=>Qt.SY9,gather_util:()=>c,getBackend:()=>fe.jz,getGradient:()=>bt.vQ,getKernel:()=>bt._5,getKernelsForBackend:()=>bt.Op,grad:()=>we.Dv,grads:()=>we.ok,greater:()=>Qt.rhj,greaterEqual:()=>Qt.DQN,ifft:()=>Qt.KGM,imag:()=>Qt.ngS,image:()=>Qt.Slp,inTopKAsync:()=>Qt.U4u,io:()=>s,irfft:()=>Qt.ggX,isFinite:()=>Qt.MIs,isInf:()=>Qt.EN4,isNaN:()=>Qt.yrW,keep:()=>fe.aC,kernel_impls:()=>p,leakyRelu:()=>Qt.H8d,less:()=>Qt.M7h,lessEqual:()=>Qt.InN,linalg:()=>Qt.mPL,linspace:()=>Qt.mT8,localResponseNormalization:()=>Qt.Kgs,log:()=>Qt.Rm2,log1p:()=>Qt.Kko,logSigmoid:()=>Qt.nqI,logSoftmax:()=>Qt.HPB,logSumExp:()=>Qt.VZ,logicalAnd:()=>Qt.n76,logicalNot:()=>Qt.NSZ,logicalOr:()=>Qt.ztW,logicalXor:()=>Qt.rxB,losses:()=>Qt.YYh,lowerBound:()=>Qt.yzS,matMul:()=>Qt.NoW,math:()=>o,max:()=>Qt.T9B,maxPool:()=>Qt.jgi,maxPool3d:()=>Qt.NYV,maxPoolWithArgmax:()=>Qt.RO,maximum:()=>Qt.PhQ,mean:()=>Qt.i2o,memory:()=>fe.m1,meshgrid:()=>Qt.OYQ,min:()=>Qt.jkA,minimum:()=>Qt.BpO,mirrorPad:()=>Qt.FFZ,mod:()=>Qt.ziu,moments:()=>Qt.Clk,movingAverage:()=>Qt.CRk,mul:()=>Qt.lKK,multiRNNCell:()=>Qt.YDF,multinomial:()=>Qt.OjQ,neg:()=>Qt.HZy,nextFrame:()=>tn,norm:()=>Qt.xbf,notEqual:()=>Qt.Ec,oneHot:()=>Qt.Mw0,ones:()=>Qt.SaS,onesLike:()=>Qt.P61,op:()=>Qt.op,outerProduct:()=>Qt.X4o,pad:()=>Qt.eVF,pad1d:()=>Qt.BZs,pad2d:()=>Qt.grY,pad3d:()=>Qt.XHu,pad4d:()=>Qt.WLX,pool:()=>Qt.dzn,pow:()=>Qt.n7C,prelu:()=>Qt.NsG,print:()=>Qt.yyV,prod:()=>Qt._eU,profile:()=>fe.ME,raggedGather:()=>Qt.whe,raggedRange:()=>Qt.iyU,raggedTensorToTensor:()=>Qt.Q0_,rand:()=>Qt._9M,randomGamma:()=>Qt.pR9,randomNormal:()=>Qt.FE$,randomStandardNormal:()=>Qt.m0H,randomUniform:()=>Qt.YeY,randomUniformInt:()=>Qt.HYA,range:()=>Qt.y17,ready:()=>fe.Gc,real:()=>Qt.xav,reciprocal:()=>Qt.VOZ,registerBackend:()=>fe.gJ,registerGradient:()=>bt.kr,registerKernel:()=>bt.tA,relu:()=>Qt.VVh,relu6:()=>Qt.j__,removeBackend:()=>fe.rE,reshape:()=>Qt.tQQ,reverse:()=>Qt.BEg,reverse1d:()=>Qt.QD2,reverse2d:()=>Qt.LMr,reverse3d:()=>Qt.I2l,reverse4d:()=>Qt.JYU,rfft:()=>Qt.z8$,round:()=>Qt.LIG,rsqrt:()=>Qt.Z$r,scalar:()=>Qt.d_2,scatterND:()=>Qt.NFr,scatter_util:()=>Rt,searchSorted:()=>Qt.sZg,selu:()=>Qt.WfX,separableConv2d:()=>Qt.wdz,serialization:()=>r,setBackend:()=>fe.jh,setPlatform:()=>fe.Ok,setdiff1dAsync:()=>Qt.F12,sigmoid:()=>Qt.ry7,sign:()=>Qt._SZ,signal:()=>Qt.vPA,sin:()=>Qt.F8e,sinh:()=>Qt.L0l,slice:()=>Qt.dik,slice1d:()=>Qt.Q$M,slice2d:()=>Qt.zAd,slice3d:()=>Qt.wck,slice4d:()=>Qt.R0O,slice_util:()=>_t,softmax:()=>Qt.Vs9,softplus:()=>Qt.lw0,spaceToBatchND:()=>Qt.eDJ,sparse:()=>Qt.lMo,sparseToDense:()=>Qt.Zhr,spectral:()=>Qt.lOn,split:()=>Qt.lDo,sqrt:()=>Qt.RZD,square:()=>Qt.EwI,squaredDifference:()=>Qt.Pbu,squeeze:()=>Qt.r2V,stack:()=>Qt.t$z,step:()=>Qt.PMw,stridedSlice:()=>Qt.Ym9,string:()=>Qt.YjP,sub:()=>Qt.jbE,sum:()=>Qt.czq,sumOutType:()=>Zt.ch,tan:()=>Qt.Mlm,tanh:()=>Qt.ymU,tensor:()=>Qt.OEK,tensor1d:()=>Qt.tGX,tensor2d:()=>Qt.KtR,tensor3d:()=>Qt.$_$,tensor4d:()=>Qt.g9W,tensor5d:()=>Qt.Lpo,tensor6d:()=>Qt.yxw,tensorScatterUpdate:()=>Qt.NNh,tensor_util:()=>Ft,test_util:()=>l,tidy:()=>fe.DZ,tile:()=>Qt.Vsq,time:()=>fe.kB,topk:()=>Qt.rfw,train:()=>$t,transpose:()=>Qt.mgz,truncatedNormal:()=>Qt.efE,unique:()=>Qt.AmM,unregisterGradient:()=>bt.rY,unregisterKernel:()=>bt.iP,unsortedSegmentSum:()=>Qt.zAU,unstack:()=>Qt.K$i,upcastType:()=>Zt.Tu,upperBound:()=>Qt.rni,util:()=>Dt,valueAndGrad:()=>we.jY,valueAndGrads:()=>we.mu,variable:()=>Qt.bvq,variableGrads:()=>we.y7,version_core:()=>Kt,where:()=>Qt._M9,whereAsync:()=>Qt.YJN,zeros:()=>Qt.Ul9,zerosLike:()=>Qt.POl});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Ne,SerializationMap:()=>Ie,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>I.D,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.AQ,copyModel:()=>te,decodeWeights:()=>x.CY,decodeWeightsStream:()=>x.s5,encodeWeights:()=>x.aG,fromMemory:()=>ot,fromMemorySync:()=>it,getLoadHandlers:()=>N,getModelArtifactsForJSON:()=>x.Ej,getModelArtifactsForJSONSync:()=>x.Rl,getModelArtifactsInfoForJSON:()=>x.oR,getSaveHandlers:()=>T,getWeightSpecs:()=>x.Xf,http:()=>tt,isHTTPScheme:()=>$e,listModels:()=>$,loadWeights:()=>Ze,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Qe,withSaveHandler:()=>ct,withSaveHandlerSync:()=>lt});var o={};n.r(o),n.d(o,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>Tt,toPixels:()=>It});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>At});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Mt,createVideoElement:()=>qt,encodeStrings:()=>Ht,expectArrayBuffersEqual:()=>jt,expectArraysClose:()=>zt,expectArraysEqual:()=>Wt,expectNumbersClose:()=>Vt,expectPromiseToFail:()=>Bt,expectValuesInRange:()=>Gt,play:()=>Yt,testEpsilon:()=>Lt});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>ca,computeOutShape:()=>ia,segOpComputeOptimalWindowSize:()=>oa});var d={};n.r(d),n.d(d,{ERF_A1:()=>Sn,ERF_A2:()=>Tn,ERF_A3:()=>Nn,ERF_A4:()=>In,ERF_A5:()=>Cn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>hn,RowPartitionType:()=>sn,SELU_SCALE:()=>wn.X,SELU_SCALEALPHA:()=>wn.j,applyActivation:()=>cn.f2,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>nn.WC,assertParamsConsistent:()=>an,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>nn.WH,calculateShapes:()=>Rt.calculateShapes,checkEinsumDimSizes:()=>Gn,checkPadOnDimRoundingMode:()=>on.s_,combineLocations:()=>nn.aF,combineRaggedTensorToTensorShapes:()=>ln,complexWithEvenIndex:()=>_n,complexWithOddIndex:()=>Fn,computeConv2DInfo:()=>on.uf,computeConv3DInfo:()=>on.p$,computeDefaultPad:()=>on.G8,computeDilation2DInfo:()=>on.YQ,computeOptimalWindowSize:()=>fn,computeOutAndReduceShapes:()=>nn.lb,computeOutShape:()=>rn,computePool2DInfo:()=>on.E6,computePool3DInfo:()=>on.l5,convertConv2DDataFormat:()=>on.$Q,decodeEinsumEquation:()=>Vn,eitherStridesOrDilationsAreOne:()=>on.G0,expandShapeToKeepDim:()=>nn.SM,exponent:()=>zn,exponents:()=>Mn,fromStringArrayToUint8:()=>ua,fromUint8ToStringArray:()=>la,getAxesPermutation:()=>nn.Em,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Dn,getEinsumComputePath:()=>jn,getEinsumPermutation:()=>Un,getFusedBiasGradient:()=>cn.Do,getFusedDyActivation:()=>cn.XB,getImageCenter:()=>mn,getInnerMostAxes:()=>nn.fK,getPermuted:()=>yn,getRaggedRank:()=>dn,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>gn,getReshapedPermuted:()=>bn,getRowPartitionTypesHelper:()=>un,getSliceBeginCoords:()=>vn,getSliceSize:()=>xn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Kn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Zn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>$n,getSparseReshapeInputOutputMismatchErrorMessage:()=>ta,getSparseReshapeInputOutputMultipleErrorMessage:()=>ea,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Qn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Jn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>sa,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>na,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>aa,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ra,getUndoAxesPermutation:()=>nn.gx,isIdentityPermutation:()=>Hn,log:()=>En.R,mergeRealAndImagArrays:()=>An,prepareAndValidate:()=>At,prepareSplitSize:()=>Yn,segment_util:()=>u,shouldFuse:()=>cn.zE,slice_util:()=>_t,splitRealAndImagArrays:()=>Rn,stridesOrDilationsArePositive:()=>on.qk,tupleValuesAreOne:()=>on.Dh,upcastType:()=>Zt.Tu,validateDefaultValueShape:()=>pn,validateInput:()=>Rt.validateInput,validateUpdateShape:()=>Rt.validateUpdateShape,warn:()=>En.i});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>da.c7,nonMaxSuppressionV4Impl:()=>da.ZS,nonMaxSuppressionV5Impl:()=>da.ut,whereImpl:()=>pa.Y});var h=n(2164);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5399);const v=(0,b._K)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(285);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),T=e=>w.getSaveHandlers(e),N=(e,t)=>w.getLoadHandlers(e,t);var I=n(7131);const C="tensorflowjs",E="models_store",A="model_info_store";function R(){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore(A,{keyPath:"modelPath"})}class F{constructor(e){if(this.indexedDB=R(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>_(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(E,"readonly"),a=t.objectStore(E).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=I.D.join(t.weightData);const a=(0,x.oR)(t),o=r.transaction(A,"readwrite");let i,c,l=o.objectStore(A);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(E,"readwrite");const i=c.objectStore(E);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(A);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}F.URL_SCHEME="indexeddb://";const D=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};w.registerSaveRouter(D),w.registerLoadRouter(D);class O{constructor(){this.indexedDB=R()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>_(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(A,"readonly"),s=r.objectStore(A).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>_(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(A,"readwrite"),o=s.objectStore(A),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(E,"readwrite");const a=c.objectStore(E).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}var M=n(1426);const z="/",L="tensorflowjs_models",P="info",B="model_topology",W="weight_specs",V="weight_data",U="model_metadata";function G(e){return{info:[L,e,P].join(z),topology:[L,e,B].join(z),weightSpecs:[L,e,W].join(z),weightData:[L,e,V].join(z),modelMetadata:[L,e,U].join(z)}}function j(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function H(e){const t=e.split(z);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(z)}class q{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,x.oR)(e),s=I.D.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x.l3)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw j(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,x.jf)(s),t}}q.URL_SCHEME="localstorage://";const Y=e=>{return(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};w.registerSaveRouter(Y),w.registerLoadRouter(Y);class K{constructor(){(0,M.vA)((0,b._K)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,M.vA)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=L+z,n=z+P;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[H(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return j(n),a}}const X="://";class Z{constructor(){this.managers={}}static getInstance(){return null==Z.instance&&(Z.instance=new Z),Z.instance}static registerManager(e,t){(0,M.vA)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(X)&&(e=e.slice(0,e.indexOf(X))),(0,M.vA)(e.length>0,(()=>"scheme must not be an empty string."));const n=Z.getInstance();(0,M.vA)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Z.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Z.getInstance().managers)}}function Q(e){if(-1===e.indexOf(X))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Z.getSchemes().join(",")));return{scheme:e.split(X)[0],path:e.split(X)[1]}}async function J(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,M.vA)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=w.getLoadHandlers(e);(0,M.vA)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,M.vA)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=w.getSaveHandlers(t);(0,M.vA)(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,M.vA)(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=Q(e).scheme,c=Q(e).path,l=i===Q(e).scheme,u=await r.load();n&&l&&await Z.getManager(i).removeModel(c);const d=await o.save(u);return n&&!l&&await Z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function $(){const e=Z.getSchemes(),t={};for(const n of e){const e=await Z.getManager(n).listModels();for(const a in e){t[n+X+a]=e[a]}}return t}async function ee(e){const t=Q(e);return Z.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return J(e,t,!1)}async function ne(e,t){return J(e,t,!0)}var ae=n(5767);class re{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b._K)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ae.Y)(e)}}if((0,b._K)().get("IS_BROWSER")){(0,b._K)().setPlatform("browser",new re);try{Z.registerManager(q.URL_SCHEME,new K)}catch(fa){}try{Z.registerManager(F.URL_SCHEME,new O)}catch(fa){}}const se=()=>n(5817);let oe;class ie{constructor(){this.util=n(8590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b._K)().global.fetch?(0,b._K)().global.fetch(e,t):(null==oe&&(oe=se()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b._K)().get("IS_NODE")&&!(0,b._K)().get("IS_BROWSER")&&(0,b._K)().setPlatform("node",new ie);var ce=n(259),le=n(7794),ue=n(9820),de=n(6574),pe=n(9494);(0,h.Ye)();const he={buffer:ce.r,cast:le.w,clone:ue.o,print:de.y};(0,pe.Q5)(he);var fe=n(8046),me=n(7242),ge=n(4974),ye=n(803),be=n(191),ve=n(7738),xe=n(3290),we=n(1839),ke=n(1997);const Se=new Map,Te=new Map;class Ne{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ie{constructor(){this.classNameMap={}}static getMap(){return null==Ie.instance&&(Ie.instance=new Ie),Ie.instance}static register(e){Ie.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,M.vA)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,M.vA)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,M.vA)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Ie.register(e),Se.set(a,e),Te.set(e,a),e}function Ee(e){return Te.has(e)?Te.get(e):e.className}class Ae extends Ne{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,fe.AS)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.y7)(e,t)}dispose(){null!=this.iterations_&&(0,fe.AS)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.d)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ae,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Re extends Ae{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=h.T2.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(o,this.rho),(0,ye.l)((0,ve.E)(s),1-this.rho)),t=(0,ye.l)((0,ge.y)((0,be.R)((0,me.W)(i,this.epsilon)),(0,be.R)((0,me.W)(o,this.epsilon))),s),n=(0,me.W)((0,ye.l)(i,this.rho),(0,ye.l)((0,ve.E)(t),1-this.rho));o.assign(e),i.assign(n);const r=(0,me.W)((0,ye.l)(t,-this.learningRate),a);a.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.AS)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.AS)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var _e=n(4660);class Fe extends Ae{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=h.T2.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,fe.DZ)((()=>(0,_e.G)(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)(s,(0,ve.E)(r));s.assign(e);const t=(0,me.W)((0,ye.l)((0,ge.y)(r,(0,be.R)((0,me.W)(e,h.T2.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.AS)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var De=n(7587),Oe=n(7951);class Me extends Ae{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.DZ)((()=>{this.accBeta1=(0,ke.d)(t).variable(),this.accBeta2=(0,ke.d)(n).variable()})),null==a&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,Oe.j)(1,this.accBeta2);t.forEach(((t,r)=>{const s=h.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(o)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,fe.DZ)((()=>(0,xe.P)(s).variable(o)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,me.W)((0,ye.l)(l,this.beta2),(0,ye.l)((0,ve.E)(i),1-this.beta2)),p=(0,ge.y)(u,n),f=(0,ge.y)(d,a);c.assign(u),l.assign(d);const m=(0,me.W)((0,ye.l)((0,ge.y)(p,(0,me.W)((0,be.R)(f),this.epsilon)),-this.learningRate),s);s.assign(m)})),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.l)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.AS)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.DZ)((()=>{this.accBeta1.assign((0,De.n)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,De.n)(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var ze=n(3753),Le=n(2131);class Pe extends Ae{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.DZ)((()=>{this.iteration=(0,ke.d)(0).variable(),this.accBeta1=(0,ke.d)(t).variable()})),null==a&&(this.epsilon=h.T2.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.DZ)((()=>{const n=(0,Oe.j)(1,this.accBeta1),a=(0,ge.y)(-this.learningRate,(0,me.W)((0,ye.l)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=h.T2.registeredVariables[t],o=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,xe.P)(s).variable(o)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,xe.P)(s).variable(o)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const c=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=(0,me.W)((0,ye.l)(c,this.beta1),(0,ye.l)(i,1-this.beta1)),d=(0,ye.l)(l,this.beta2),p=(0,ze.t)(i),f=(0,Le.P)(d,p);c.assign(u),l.assign(f);const m=(0,me.W)((0,ye.l)((0,ge.y)(a,n),(0,ge.y)(u,(0,me.W)(f,this.epsilon))),s);s.assign(m)})),this.iteration.assign((0,me.W)(this.iteration,1)),this.accBeta1.assign((0,ye.l)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.AS)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.AS)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Be extends Ae{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=h.T2.registeredVariables[t];(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.aC)((0,ke.d)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class We extends Be{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.d)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=h.T2.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.DZ)((()=>{let e;const t=(0,me.W)((0,ye.l)(this.m,r),s);e=this.useNesterov?(0,me.W)((0,ye.l)(this.c,(0,me.W)(s,(0,ye.l)(t,this.m))),a):(0,me.W)((0,ye.l)(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.AS)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ve extends Ae{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=h.T2.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=h.T2.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,fe.DZ)((()=>(0,xe.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.DZ)((()=>{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,me.W)((0,ye.l)(t,this.decay),(0,ye.l)(s,1-this.decay)),c=(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,Oe.j)(e,(0,me.W)((0,ve.E)(r),this.epsilon)))),l=(0,me.W)((0,ye.l)(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=(0,Oe.j)(a,l);a.assign(u)}else{const e=(0,me.W)((0,ye.l)(o,this.decay),(0,ye.l)((0,ve.E)(s),1-this.decay)),t=(0,me.W)((0,ye.l)(i,this.momentum),(0,ge.y)((0,ye.l)(s,this.learningRate),(0,be.R)((0,me.W)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Oe.j)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.AS)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.AS)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.AS)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ue=[Re,Fe,Me,Pe,We,Ve,Be];function Ge(e){return new Promise((e=>setTimeout(e))).then(e)}class je{constructor(e){if(!(0,b._K)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(je.URL_SCHEME)&&(e=e.slice(je.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=I.D.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,x.zV)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ge((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.oR)(e)}}}}je.URL_SCHEME="downloads://";class He{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=(0,x.Ej)(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.P8)(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=(0,x.P8)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new He(e)}function Ye(e,t,n,a){!function(e){(0,M.vA)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,M.vA)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,M.vA)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,M.vA)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}w.registerSaveRouter((e=>(0,b._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(je.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new je(e)}(e.slice(je.URL_SCHEME.length)):null));var Ke=n(1042);async function Xe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Ye(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ye(r,t.onProgress,.5,1)}async function Ze(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Qe((e=>Xe(e,{requestInit:a})))(e,t,n)}function Qe(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ke.i[c]*M.Ze(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let p=0;return c.forEach((e=>{const n=t[e].paths.length,a=new I.D(u.slice(p,p+n));s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.CY)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),p+=n})),d}}class Je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,M.vA)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b._K)().platform.fetch,(0,M.vA)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,M.vA)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,x.zV)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=I.D.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,x.oR)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.Ej)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.Xf)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,b._K)().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.Xf)(e),await Xe(t,this.loadOptions)]}}function $e(e){return null!=e.match(Je.URL_SCHEME_REGEX)}Je.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$e(e))):$e(e),n)return tt(e,t)}return null};function tt(e,t){return new Je(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class at{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,a){return new st(it(...arguments))}function it(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new at(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ct(e){return new rt(e)}function lt(e){return new rt(e)}var ut=n(4148),dt=n(5162),pt=n(6865),ht=n(7892),ft=n(2154);const mt=(0,ht.op)({confusionMatrix_:function(e,t,n){const a=(0,ut.YT)(e,"labels","confusionMatrix"),r=(0,ut.YT)(t,"predictions","confusionMatrix");M.vA(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n))),M.vA(1===a.rank,(()=>"Expected the rank of labels to be 1, but got ".concat(a.rank))),M.vA(1===r.rank,(()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank))),M.vA(a.shape[0]===r.shape[0],(()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements.")),M.vA(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+"".concat(n)));const s=(0,pt.M)((0,le.w)(a,"int32"),n),o=(0,pt.M)((0,le.w)(r,"int32"),n),i=(0,ft.m)(s),c=(0,dt.N)(i,o);return(0,le.w)(c,"int32")}});var gt=n(8805),yt=n(9554),bt=n(843),vt=n(5395);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}if(null!=(0,bt._5)(yt.awo,h.T2.backendName)){const n={pixels:e},a={numChannels:t};return h.T2.runKernel(yt.awo,n,a)}const[c,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let u,d;if(o)u=e.getContext("2d").getImageData(0,0,c,l).data;else if(a||n)u=e.data;else if(s||r||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=c,xt.canvas.height=l,xt.drawImage(e,0,0,c,l),u=xt.getImageData(0,0,c,l).data}if(4===t)d=new Int32Array(u);else{const e=c*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=u[4*n+e]}const p=[l,c,t];return(0,vt.$)(d,p,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Tt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b._K)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function Nt(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function It(e,t){let n=(0,ut.YT)(e,"img","toPixels");if(!(e instanceof pe.qY)){const e=n;n=(0,le.w)(e,"int32"),e.dispose()}Nt(n);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=o[l*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt._5)(yt.XmO,h.T2.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Ct(e,t,n){let a=(0,ut.YT)(e,"img","draw");if(!(e instanceof pe.qY)){const e=a;a=(0,le.w)(e,"int32"),e.dispose()}Nt(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},s={canvas:t,options:n};h.T2.runKernel(yt.XmO,r,s)}const Et=(0,ht.op)({fromPixels_:kt});function At(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,M.Ze)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,M.Ur)(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}var Rt=n(4083),_t=n(4642),Ft=n(8804),Dt=n(8977);const Ot=.001,Mt=.1;function zt(e,t,n){return null==n&&(n=Lt()),Pt(e,t,((e,t)=>Ut(e,t,n)))}function Lt(){return 32===h.T2.backend.floatPrecision()?Ot:Mt}function Pt(e,t,n){let a=!0;if(((0,Dt.isTypedArray)(e)||(0,Dt.isTypedArray)(t))&&(a=!1),(0,Dt.isTypedArray)(e)&&(0,Dt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ut.MZ)(e),a=(0,ut.MZ)(t);if(!(0,M.r1)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const r=(0,Dt.isTypedArray)(e)?e:(0,Dt.flatten)(e),s=(0,Dt.isTypedArray)(t)?t:(0,Dt.flatten)(t);if(r.length!==s.length)throw new Error("Arrays have different lengths actual: ".concat(r.length," vs ")+"expected: ".concat(s.length,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."));for(let o=0;o<s.length;++o){const e=r[o],t=s[o];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(o,"] = ").concat(e,", expected[").concat(o,"] = ").concat(t,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."))}"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Wt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,M.Kg)(e)||(0,M.Kg)(e[0])||(0,M.Kg)(t)||(0,M.Kg)(t[0])?Pt(e,n,((e,t)=>e==t)):Pt(e,t,((e,t)=>Ut(e,t,0)))}function Vt(e,t,n){if(null==n&&(n=Lt()),!Ut(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function Ut(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gt(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function jt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error("Expected ArrayBuffer value at ".concat(r," to be ")+"".concat(a[r]," but got ").concat(n[r]," instead"))}function Ht(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ht(n):e[t]=(0,Dt.encodeString)(n)}return e}function qt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function Yt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Kt="4.19.0";class Xt{static sgd(e){return new Be(e)}static momentum(e,t){return new We(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Ve(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Me(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Re(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Pe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Fe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Zt=n(8075),Qt=n(9249),Jt=n(1667);const $t=Xt,en="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function tn(){return new Promise((e=>en((()=>e()))))}var nn=n(9235);function an(e,t){const n=e[0].length;e.forEach(((e,t)=>{M.vA(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),M.vA(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)M.vA(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function rn(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var sn,on=n(7538),cn=n(7905);function ln(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function un(e){const t={FIRST_DIM_SIZE:sn.FIRST_DIM_SIZE,VALUE_ROWIDS:sn.VALUE_ROWIDS,ROW_LENGTHS:sn.ROW_LENGTHS,ROW_SPLITS:sn.ROW_SPLITS,ROW_LIMITS:sn.ROW_LIMITS,ROW_STARTS:sn.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function dn(e){return 0===e.length?0:e[0]===sn.FIRST_DIM_SIZE?e.length-1:e.length}function pn(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(sn||(sn={}));const hn=30;function fn(e){return e<=hn?e:(0,M.lK)(e,Math.floor(Math.sqrt(e)))}function mn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function gn(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function yn(e,t){const n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{const a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function bn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function vn(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function xn(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var wn=n(3765);const kn=.3275911,Sn=.254829592,Tn=-.284496736,Nn=1.421413741,In=-1.453152027,Cn=1.061405429;var En=n(4124);function An(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function Rn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function _n(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Fn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Dn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Mn(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function zn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const Ln="->",Pn=/->/g,Bn=",",Wn="...";function Vn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Pn,"").length)/Ln.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(Ln,'").'));const[a,r]=e.split(Ln);(0,M.vA)(-1===a.indexOf(Wn),(()=>'The ellipsis notation ("'.concat(Wn,'") is not supported yet.')));const s=a.split(Bn),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&e!==Bn&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Un(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Gn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,M.vA)(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function jn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=qn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function Hn(e){return e.every(((e,t)=>e===t))}function qn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Yn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,M.vA)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,M.vA)(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}(0,M.vA)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Kn(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function Xn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Zn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Qn(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Jn(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function $n(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ea(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function ta(e,t){const n=(0,M.Ze)(e),a=(0,M.Ze)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function na(){return"segment ids must be >= 0"}function aa(){return"segment ids are not increasing"}function ra(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function sa(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function oa(e,t){let n,a=!1;for(e<=hn?(n=e,a=!0):n=(0,M.lK)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,M.lK)(e,n+1);return n}function ia(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function ca(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function la(e){try{return e.map((e=>(0,Dt.decodeString)(e)))}catch(fa){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(fa))}}function ua(e){return e.map((e=>(0,Dt.encodeString)(e)))}var da=n(6692),pa=n(9286),ha=n(6790);!function(){for(const e of Ue)Ce(e)}()},7131:(e,t,n)=>{"use strict";n.d(t,{D:()=>r});var a=n(8977);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},285:(e,t,n)=>{"use strict";n.d(t,{AQ:()=>S,CY:()=>p,Ej:()=>C,P8:()=>T,Rl:()=>I,Xf:()=>A,aG:()=>d,jf:()=>k,l3:()=>w,oR:()=>E,s5:()=>y,zV:()=>N});var a=n(6149),r=n(8032),s=n(1426),o=n(1042),i=n(7131),c=n(8046),l=n(5399);const u=4;async function d(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+u*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=u,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:b(await Promise.all(a)),specs:n}}function p(e,t){const n=new i.D(e),a={};let r=0;for(const s of t){const e=h(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=m(s,n.slice(r,r+e)),r+=e}return a}function h(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}async function f(e,t){const n=(0,s.Ze)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.i[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=u+new Uint32Array(await t(e,e+u))[0];return e}a=o.i[e.dtype]}return n*a}function m(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,s.Ze)(c);let d,p=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=o.i[a.dtype],s="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){d=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();d=e(s)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");d=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];d[e]=Math.round(t*a.scale+a.min)}}p+=l*r}else if("string"===i){const n=(0,s.Ze)(e.shape);d=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(p,p+u))[0];p+=u;const n=new Uint8Array(t.slice(p,p+e));d.push(n),p+=e}}else{const e=o.i[i];if("float32"===i)d=new Float32Array(t);else if("int32"===i)d=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){d=new Float32Array(t);const e=new Float32Array(d.length/2),n=new Float32Array(d.length/2);for(let t=0;t<e.length;t++)e[t]=d[2*t],n[t]=d[2*t+1];const s=(0,r.O)(e,c,"float32"),o=(0,r.O)(n,c,"float32"),i=(0,a.f)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}d=new Uint8Array(t)}p+=l*e}return(0,r.O)(d,c,i)}async function g(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function y(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await f(o,(async(e,t)=>(r=await g(a,r,t),r.slice(e,t))));r=await g(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=m(o,t);if(n[o.name]=i,"webgpu"===(0,c.jz)()){const e=(0,c.Hs)();"uploadToGPU"in e&&(0,s.Ze)(i.shape)>=(0,l._K)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function b(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const v="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function x(e){return v?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function w(e){if(v)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function k(e){if(v){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function S(e){return i.D.join(e)}function T(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function C(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),I(e,n,a)}function E(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:x(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:x(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.D(e.weightData).byteLength}}function A(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1042:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9554:(e,t,n)=>{"use strict";n.d(t,{$dB:()=>F,$jE:()=>nn,$zE:()=>_,A1h:()=>z,A8B:()=>Ut,BK4:()=>bn,BLA:()=>Qe,BRl:()=>se,Blb:()=>Gt,BoJ:()=>qt,BxF:()=>de,C8s:()=>Ht,CQC:()=>ft,Cg$:()=>Re,CwD:()=>Ce,D7i:()=>It,Ddj:()=>Zt,Dr:()=>vn,DvZ:()=>Kt,E3$:()=>Se,EkD:()=>i,ElG:()=>he,EwU:()=>dn,FAs:()=>on,FCQ:()=>Tt,FSt:()=>l,Fin:()=>Bt,GZp:()=>Jt,HNs:()=>T,Ik2:()=>k,J3C:()=>zt,JiE:()=>Ot,Jp_:()=>u,KXH:()=>C,L6G:()=>Yt,LB5:()=>N,LDN:()=>Ve,LG0:()=>Xe,LRy:()=>yt,LWX:()=>st,LXA:()=>De,M6A:()=>Qt,MRQ:()=>G,Mn0:()=>B,MnK:()=>W,N4F:()=>S,Ncv:()=>dt,O4G:()=>ge,OAQ:()=>xe,ODT:()=>ct,OMN:()=>o,ORI:()=>X,PH8:()=>s,P_L:()=>Nt,Pah:()=>ne,PbM:()=>an,Q6t:()=>gt,QDP:()=>E,QKF:()=>p,Qgm:()=>te,R23:()=>xt,RMm:()=>fn,RUm:()=>_e,RW8:()=>Oe,RXX:()=>Ge,SDM:()=>nt,SQl:()=>ue,T7M:()=>wn,TBb:()=>cn,TL8:()=>qe,TMz:()=>H,TOR:()=>Et,ToN:()=>Pe,TyE:()=>f,UcO:()=>$t,VAI:()=>We,VCH:()=>b,Vvy:()=>r,WRv:()=>Be,WT3:()=>Je,WuN:()=>Vt,X$8:()=>Y,X0$:()=>Ne,X4r:()=>Rt,XQy:()=>kt,XhZ:()=>ye,XmO:()=>$,YAb:()=>en,YVe:()=>Lt,ZgB:()=>pe,Zl4:()=>at,_s9:()=>re,aAr:()=>xn,awo:()=>yn,bCz:()=>lt,bP9:()=>Q,cHb:()=>He,cS:()=>v,dFH:()=>Wt,dLy:()=>ln,dXR:()=>pn,dv8:()=>we,e0f:()=>rt,epO:()=>h,fUj:()=>vt,g5A:()=>Ye,gC7:()=>P,gIW:()=>ke,hVg:()=>Ct,hgw:()=>St,ho8:()=>y,hql:()=>Mt,huO:()=>bt,i5R:()=>fe,iGz:()=>L,iPs:()=>Te,iW0:()=>tn,iuW:()=>sn,jAQ:()=>w,jM4:()=>Le,jOE:()=>wt,jfg:()=>M,jgd:()=>Xt,jj_:()=>V,jxD:()=>Z,kdj:()=>pt,l0G:()=>et,l6P:()=>Ft,lLS:()=>be,lNG:()=>Ke,ljI:()=>a,lxb:()=>g,lzr:()=>ve,mH5:()=>mt,mIA:()=>Ie,mM$:()=>it,mnI:()=>Ee,mxL:()=>me,nVu:()=>K,nY8:()=>U,nZd:()=>Fe,oFs:()=>rn,oJ2:()=>ht,ox3:()=>oe,p2J:()=>D,pJc:()=>At,pPe:()=>hn,p_m:()=>d,pk0:()=>J,pnw:()=>gn,pr3:()=>R,pyJ:()=>ut,rFG:()=>jt,rFm:()=>O,rGP:()=>le,rsH:()=>ae,sDr:()=>ee,t3d:()=>Ue,tG8:()=>Ae,tGH:()=>q,u$b:()=>Dt,u8Z:()=>c,uWl:()=>_t,urI:()=>ot,vI1:()=>Pt,vaV:()=>A,vj7:()=>I,wNW:()=>j,wwC:()=>x,wx0:()=>un,x7F:()=>Ze,xJ3:()=>mn,xu7:()=>$e,yPW:()=>ze,ySp:()=>je,ybN:()=>ie,ybj:()=>ce,ylV:()=>tt,zP9:()=>m,zfU:()=>Me});const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BitwiseAnd",N="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",R="Complex",_="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",M="Conv2DBackpropInput",z="Conv3D",L="Conv3DBackpropFilterV2",P="Conv3DBackpropInputV2",B="Cos",W="Cosh",V="Cumprod",U="Cumsum",G="CropAndResize",j="DenseBincount",H="DepthToSpace",q="DepthwiseConv2dNative",Y="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Z="Dilation2D",Q="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",pe="Floor",he="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Te="IsNan",Ne="LeakyRelu",Ie="Less",Ce="LessEqual",Ee="LinSpace",Ae="Log",Re="Log1p",_e="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Me="LogSoftmax",ze="LowerBound",Le="LRN",Pe="LRNGrad",Be="MatrixBandPart",We="Max",Ve="Maximum",Ue="MaxPool",Ge="MaxPoolGrad",je="MaxPool3D",He="MaxPool3DGrad",qe="MaxPoolWithArgmax",Ye="Mean",Ke="Min",Xe="Minimum",Ze="MirrorPad",Qe="Mod",Je="Multinomial",$e="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",st="OnesLike",ot="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",pt="Prod",ht="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",Tt="ResizeBilinearGrad",Nt="Relu6",It="Reverse",Ct="Round",Et="Rsqrt",At="ScatterNd",Rt="TensorScatterUpdate",_t="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Mt="Sin",zt="Sinh",Lt="Sign",Pt="Sigmoid",Bt="Softplus",Wt="Sqrt",Vt="Sum",Ut="SpaceToBatchND",Gt="SplitV",jt="Softmax",Ht="SparseFillEmptyRows",qt="SparseReshape",Yt="SparseSegmentMean",Kt="SparseSegmentSum",Xt="SparseToDense",Zt="SquaredDifference",Qt="Square",Jt="StaticRegexReplace",$t="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",rn="Tan",sn="Tanh",on="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",pn="Unpack",hn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},843:(e,t,n)=>{"use strict";n.d(t,{Cf:()=>m,Op:()=>u,_5:()=>c,iP:()=>h,kr:()=>p,rY:()=>f,tA:()=>d,vQ:()=>l});var a=n(5399),r=n(7926),s=n(4124);const o=(0,r.m)("kernelRegistry",(()=>new Map)),i=(0,r.m)("gradRegistry",(()=>new Map));function c(e,t){const n=g(e,t);return o.get(n)}function l(e){return i.get(e)}function u(e){const t=o.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=g(t,n);o.has(a)&&s.i("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,e)}function p(e){const{kernelName:t}=e;i.has(t)&&(0,a._K)().getBool("DEBUG")&&s.i("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function h(e,t){const n=g(e,t);if(!o.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));o.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function m(e,t){u(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return"".concat(t,"_").concat(e)}},4124:(e,t,n)=>{"use strict";n.d(t,{R:()=>s,i:()=>r});var a=n(5399);function r(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.warn(...arguments)}function s(){(0,a._K)().getBool("IS_TEST")||(0,a._K)().getBool("PROD")||console.log(...arguments)}},3753:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({abs_:function(e){const t=(0,s.YT)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.T2.runKernel(r.$zE,e)}{const e={x:t};return a.T2.runKernel(r.ljI,e)}}})},4759:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acos_:function(e){const t={x:(0,s.YT)(e,"x","acos")};return a.T2.runKernel(r.Vvy,t)}})},983:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({acosh_:function(e){const t={x:(0,s.YT)(e,"x","acosh")};return a.T2.runKernel(r.PH8,t)}})},7242:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({add_:function(e,t){let n=(0,o.YT)(e,"a","add"),i=(0,o.YT)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.OMN,c)}})},1802:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","all","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.u8Z,o,i)}})},1819:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","any","bool")},i={axis:t,keepDims:n};return a.T2.runKernel(r.FSt,o,i)}})},3068:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMax")},o={axis:t};return a.T2.runKernel(r.Jp_,n,o)}})},8482:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","argMin")},o={axis:t};return a.T2.runKernel(r.p_m,n,o)}})},3010:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asin_:function(e){const t={x:(0,s.YT)(e,"x","asin")};return a.T2.runKernel(r.QKF,t)}})},6464:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({asinh_:function(e){const t={x:(0,s.YT)(e,"x","asinh")};return a.T2.runKernel(r.epO,t)}})},7803:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atan_:function(e){const t={x:(0,s.YT)(e,"x","atan")};return a.T2.runKernel(r.TyE,t)}})},6349:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({atan2_:function(e,t){let n=(0,o.YT)(e,"a","atan2"),i=(0,o.YT)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.lxb,c)}})},8147:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({atanh_:function(e){const t={x:(0,s.YT)(e,"x","atanh")};return a.T2.runKernel(r.zP9,t)}})},8650:(e,t,n)=>{"use strict";n.d(t,{$:()=>d});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794),c=n(7538),l=n(7892),u=n(5583);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const p=(0,s.YT)(e,"x","avgPool","float32");o.vA(c.G0(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let h=p,f=!1;3===p.rank&&(f=!0,h=(0,u.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.vA(4===h.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(h.rank,"."))),c.s_("avgPool",l,d);const m={x:h},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.T2.runKernel(r.ho8,m,g);return y=(0,i.w)(y,p.dtype),f?(0,u.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},9235:(e,t,n)=>{"use strict";n.d(t,{Em:()=>l,SM:()=>i,WC:()=>c,WH:()=>r,aF:()=>s,fK:()=>d,gx:()=>u,lb:()=>o});var a=n(1426);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function o(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function c(e,t,n){a.vA(r(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},2557:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({batchToSpaceND_:function(e,t,n){const i=(0,s.YT)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));o.vA(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),o.vA(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),o.vA(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.T2.runKernel(r.Ik2,l,u)}})},7237:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(5583);const c=(0,n(7892).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,s.YT)(e,"x","batchNorm"),p=(0,s.YT)(t,"mean","batchNorm"),h=(0,s.YT)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s.YT)(l,"scale","batchNorm")),null!=c&&(m=(0,s.YT)(c,"offset","batchNorm")),o.vA(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.vA(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.vA(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,i.t)(e,[1,1,1,e.size]):2===e.rank?(0,i.t)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},y={varianceEpsilon:u},b=a.T2.runKernel(r.i5R,g,y);return(0,i.t)(b,d.shape)}})},4920:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820),c=n(7892),l=n(5583);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,s.YT)(e,"broadcastTo","x");const c=n.shape;if((0,o.SA)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.t)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.o)(n);const p={x:n},h={reps:d};return a.T2.runKernel(r.FAs,p,h)}})},8805:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>a,getReductionAxes:()=>r})},259:(e,t,n)=>{"use strict";n.d(t,{r:()=>s});var a=n(9494),r=n(1426);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.SA(e),new a.yl(e,t,n)}},7794:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({cast_:function(e,t){const n=(0,s.YT)(e,"x","cast");if(!o.xn(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.T2.runKernel(r.KXH,i,c)}})},5396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({ceil_:function(e){const t={x:(0,s.YT)(e,"x","ceil","float32")};return a.T2.runKernel(r.QDP,t)}})},3829:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(4660);const c=(0,n(7892).op)({clipByValue_:function(e,t,n){const c=(0,s.YT)(e,"x","clipByValue");if(o.vA(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.G)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.T2.runKernel(r.vaV,l,u)}})},9820:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({clone_:function(e){const t={x:(0,s.YT)(e,"x","clone","string_or_numeric")};return a.T2.runKernel(r.lzr,t)}})},6149:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({complex_:function(e,t){const n=(0,s.YT)(e,"real","complex"),i=(0,s.YT)(t,"imag","complex");o.O3(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.T2.runKernel(r.pr3,c)}})},4429:(e,t,n)=>{"use strict";n.d(t,{x:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(9820);const c=(0,n(7892).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.vA)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.j1)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.o)(n[0]);const c=n,l={axis:t};return a.T2.runKernel(r.$dB,c,l)}})},9870:(e,t,n)=>{"use strict";n.d(t,{k:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const p=(0,a.YT)(e,"x","conv1d"),h=(0,a.YT)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,c.t)(p,[1,p.shape[0],p.shape[1]])),r.vA(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),r.vA(3===h.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),o.s_("conv1d",i,d),r.vA(f.shape[2]===h.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(h.shape[1],"."))),r.vA(o.G0(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),r.vA(o.qk(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.vA(o.qk(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.vA("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,c.t)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x=(0,s.X)(y,g,b,i,"NHWC",v,d);return m?(0,c.t)(x,[x.shape[2],x.shape[3]]):(0,c.t)(x,[x.shape[0],x.shape[2],x.shape[3]])}})},4969:(e,t,n)=>{"use strict";n.d(t,{X:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],p=arguments.length>6?arguments[6]:void 0;const h=(0,s.YT)(e,"x","conv2d","float32"),f=(0,s.YT)(t,"filter","conv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),o.vA(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.s_("conv2d",c,p);const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.vA(i.G0(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),o.vA(i.qk(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.vA(i.qk(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p},x=a.T2.runKernel(r.p2J,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},6927:(e,t,n)=>{"use strict";n.d(t,{H:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,p=e;3===e.rank&&(p=(0,c.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.vA(4===p.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(p.shape,"."))),s.vA(4===h.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(h.shape,"."))),s.vA(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?p.shape[3]:p.shape[1],m="NHWC"===u?h.shape[3]:h.shape[1];s.vA(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),s.vA(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),o.s_("conv2dDerFilter",l,d);const g={x:p,dy:h},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.T2.runKernel(r.rFm,g,y)}})},1565:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(1426),o=n(7538),i=n(7892),c=n(5583);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let p=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,c.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),s.vA(4===p.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(p.length,"."))),s.vA(4===h.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(h.rank))),s.vA(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?p[3]:p[1],g="NHWC"===u?h.shape[3]:h.shape[1];s.vA(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),s.vA(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.s_("conv2dDerInput",l,d);const y={dy:h,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:p},v=a.T2.runKernel(r.jfg,y,b);return f?(0,c.t)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1137:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var a=n(4148),r=n(1565);const s=(0,n(7892).op)({conv2dTranspose_:function(e,t,n,s,o,i){const c=(0,a.YT)(e,"x","conv2dTranspose"),l=(0,a.YT)(t,"filter","conv2dTranspose");return(0,r.v)(n,c,l,s,o,"NHWC",i)}})},6410:(e,t,n)=>{"use strict";n.d(t,{c:()=>c});var a=n(2164),r=n(9554),s=n(1426),o=n(7892),i=n(5583);const c=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,c){s.vA(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],h=u.shape[4];s.vA(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),s.vA(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),s.vA(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),s.vA(p===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(p,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),s.vA(h===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(h,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.T2.runKernel(r.gC7,f,m);return d?(0,i.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},7538:(e,t,n)=>{"use strict";n.d(t,{$Q:()=>y,Dh:()=>f,E6:()=>s,G0:()=>m,G8:()=>l,YQ:()=>r,l5:()=>o,p$:()=>c,qk:()=>g,s_:()=>b,uf:()=>i});var a=n(1426);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;return i(e,[...t,e[3]],n,s,a,null,null,y(r))}function s(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===o)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,s,!1,o)}function o(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let p,h;if("NDHWC"===o)h="channelsLast",p=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));h="channelsFirst",p=[i,l,u,e[1],e[1]]}return c(e,p,n,a,r,!1,h,s)}function i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[c,d,f,m]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,m,d,f]=e}const[g,y,,b]=t,[v,x]=u(n),[w,k]=u(a),S=p(g,w),T=p(y,k),{padInfo:N,outHeight:I,outWidth:C}=function(e,t,n,a,r,s,o,i,c){let u,d,p;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const s=e[0],o=e[1],i=h((s-t+2*a)/n+1,r),c=h((o-t+2*a)/n+1,r);return[i,c]}([t,n],s,a,e,i);d=r[0],p=r[1]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+s-t),i=Math.max(0,(p-1)*r+o-n),c=Math.floor(e/2),l=e-c,h=Math.floor(i/2);u={top:c,bottom:l,left:h,right:i-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),p=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=h((t-s+l+f)/a+1,i),p=h((n-o+m+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:p}}(r,d,f,v,x,S,T,s,i),E=o?b*m:b;let A;return"channelsFirst"===i?A=[c,E,I,C]:"channelsLast"===i&&(A=[c,I,C,E]),{batchSize:c,dataFormat:i,inHeight:d,inWidth:f,inChannels:m,outHeight:I,outWidth:C,outChannels:E,padInfo:N,strideHeight:v,strideWidth:x,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function c(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,u,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,g,u,f,m]=e}const[y,b,v,,x]=t,[w,k,S]=d(n),[T,N,I]=d(a),C=p(y,T),E=p(b,N),A=p(v,I),{padInfo:R,outDepth:_,outHeight:F,outWidth:D}=function(e,t,n,a,r,s,o,i,c,u,d){let p,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,s){null==r&&(r=l(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=h((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,u],1,[r,s,o],e,d);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{f=Math.ceil(t/r),m=Math.ceil(n/s),g=Math.ceil(a/o);const e=(f-1)*r+i-t,l=(m-1)*s+c-n,d=(g-1)*o+u-a,h=Math.floor(e/2),y=e-h,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);p={top:b,bottom:v,left:x,right:d-x,front:h,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(r,u,f,m,w,k,S,C,E,A,i),O=s?x*g:x;let M;return"channelsFirst"===o?M=[c,O,_,F,D]:"channelsLast"===o&&(M=[c,_,F,D,O]),{batchSize:c,dataFormat:o,inDepth:u,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:F,outWidth:D,outChannels:O,padInfo:R,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:T,dilationHeight:N,dilationWidth:I,inShape:e,outShape:M,filterShape:t}}function l(e,t,n){const a=p(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function f(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.vA(a.E6(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},5894:(e,t,n)=>{"use strict";n.d(t,{g:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cos_:function(e){const t={x:(0,s.YT)(e,"x","cos","float32")};return a.T2.runKernel(r.Mn0,t)}})},1164:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cosh_:function(e){const t={x:(0,s.YT)(e,"x","cosh","float32")};return a.T2.runKernel(r.MnK,t)}})},3739:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumprod")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.jj_,i,c)}})},7167:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i={x:(0,s.YT)(e,"x","cumsum")},c={axis:t,exclusive:n,reverse:o};return a.T2.runKernel(r.nY8,i,c)}})},1719:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s.YT)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.vA(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),o.vA(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),o.vA(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),o.vA(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},p={blockSize:t,dataFormat:n};return a.T2.runKernel(r.TMz,d,p)}})},9899:(e,t,n)=>{"use strict";n.d(t,{G:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],p=arguments.length>6?arguments[6]:void 0;const h=(0,s.YT)(e,"x","depthwiseConv2d","float32"),f=(0,s.YT)(t,"filter","depthwiseConv2d","float32");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.t)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.vA(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),o.vA(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];o.vA(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.s_("depthwiseConv2d",c,p);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:p},x=a.T2.runKernel(r.tGH,b,v);return g?(0,l.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},7399:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,o.t)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:u,dy:d},h={strides:s,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.T2.runKernel(r.X$8,p,h)}})},261:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(7892),o=n(5583);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,o.t)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:u,filter:n},h={strides:s,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.T2.runKernel(r.nVu,p,h);return d?(0,o.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3789:(e,t,n)=>{"use strict";n.d(t,{X:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s.YT)(e,"x","dilation2d"),p=(0,s.YT)(t,"filter","dilation2d");o.vA(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),o.vA(3===p.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.vA("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let h=d,f=!1;3===d.rank&&(h=(0,c.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.vA(h.shape[3]===p.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(h.shape[3]," vs ").concat(p.shape[2])));const m={x:h,filter:p},g={strides:n,pad:i,dilations:l},y=a.T2.runKernel(r.jxD,m,g);return f?(0,c.t)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},4974:(e,t,n)=>{"use strict";n.d(t,{y:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(3612);const c=(0,n(7892).op)({div_:function(e,t){let n=(0,o.YT)(e,"a","div"),c=(0,o.YT)(t,"b","div");if([n,c]=(0,s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.w)(n,c);const l={a:n,b:c};return a.T2.runKernel(r.sDr,l,{})}})},44:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(8804),r=n(4148),s=n(4974),o=n(7457),i=n(7892),c=n(3986),l=n(3290);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r.YT)(e,"a","div"),i=(0,r.YT)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,s.y)(n,i),d=(0,l.P)(u),p=(0,o.L)(i,d);return(0,c._)(p,d,u)}})},6434:(e,t,n)=>{"use strict";n.d(t,{O:()=>c});var a=n(4148),r=n(1426),s=n(5162),o=n(7892),i=n(5583);const c=(0,o.op)({dot_:function(e,t){const n=(0,a.YT)(e,"t1","dot"),o=(0,a.YT)(t,"t2","dot");r.vA((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(r.vA(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[-1,1]),a=(0,s.N)(e,t);return(0,i.t)(a,[])}if(1===n.rank&&2===o.rank){const e=(0,i.t)(n,[1,-1]),t=(0,i.t)(o,[o.shape[0],o.shape[1]]),a=(0,s.N)(e,t);return(0,i.t)(a,[a.size])}if(2===n.rank&&1===o.rank){const e=(0,i.t)(o,[-1,1]),t=(0,s.N)(n,e);return(0,i.t)(t,[t.size])}{const e=(0,i.t)(o,[o.shape[0],o.shape[1]]);return(0,s.N)(n,e)}}})},3645:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({elu_:function(e){const t={x:(0,s.YT)(e,"x","elu","float32")};return a.T2.runKernel(r.Pah,t)}})},7457:(e,t,n)=>{"use strict";n.d(t,{L:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({equal_:function(e,t){let n=(0,o.YT)(e,"a","equal","string_or_numeric"),c=(0,o.YT)(t,"b","equal","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.BRl,l)}})},8810:(e,t,n)=>{"use strict";n.d(t,{Y:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7794);const c=(0,n(7892).op)({erf_:function(e){let t=(0,s.YT)(e,"x","erf");o.vA("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.w)(t,"float32"));const n={x:t};return a.T2.runKernel(r._s9,n)}})},8826:(e,t,n)=>{"use strict";n.d(t,{p:()=>r});var a=n(2155);const r=(0,n(7892).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.x)(e,"euclidean",t,n)}})},5462:(e,t,n)=>{"use strict";n.d(t,{o:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({exp_:function(e){const t={x:(0,s.YT)(e,"x","exp")};return a.T2.runKernel(r.ox3,t)}})},4023:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","expandDims","string_or_numeric");o.vA(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.T2.runKernel(r.ybN,i,c)}})},2520:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({expm1_:function(e){const t={x:(0,s.YT)(e,"x","expm1")};return a.T2.runKernel(r.ybj,t)}})},4660:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(2164),r=n(9554),s=n(1426);function o(e,t,n){(0,s.SA)(e);const o={shape:e,value:t,dtype:n=n||(0,s.X$)(t)};return a.T2.runKernel(r.SQl,{},o)}},8587:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({floor_:function(e){const t={x:(0,s.YT)(e,"x","floor","float32")};return a.T2.runKernel(r.ZgB,t)}})},3612:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({floorDiv_:function(e,t){let n=(0,o.YT)(e,"a","floorDiv"),i=(0,o.YT)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.ElG,c)}})},7905:(e,t,n)=>{"use strict";n.d(t,{Do:()=>m,XB:()=>f,f2:()=>g,zE:()=>y});var a=n(8805),r=n(3645),s=n(8076),o=n(803),i=n(9855),c=n(5251),l=n(9721),u=n(5583),d=n(4213),p=n(319),h=n(7382);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.l)(e,(0,p.P)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,h.c)(n,r)),(0,u.t)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.V)(e);if("elu"===t)return(0,r.P)(e);if("relu6"===t)return(0,l.j)(e);if("prelu"===t)return(0,i.N)(e,n);if("leakyrelu"===t)return(0,s.H)(e,a);if("sigmoid"===t)return(0,d.r)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},6178:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i={x:(0,s.YT)(e,"x","gather"),indices:(0,s.YT)(t,"indices","gather","int32")},c={axis:n,batchDims:o};return a.T2.runKernel(r.mxL,i,c)}})},2759:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greater_:function(e,t){let n=(0,o.YT)(e,"a","greater","string_or_numeric"),c=(0,o.YT)(t,"b","greater","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.XhZ,l)}})},9996:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({greaterEqual_:function(e,t){let n=(0,o.YT)(e,"a","greaterEqual","string_or_numeric"),c=(0,o.YT)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.lLS,l)}})},1047:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({imag_:function(e){const t={input:(0,s.YT)(e,"input","imag")};return a.T2.runKernel(r.dv8,t)}})},2214:(e,t,n)=>{"use strict";n.d(t,{v:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeBilinear");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),o.vA(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:u},h={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.hgw,p,h);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2823:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s.YT)(e,"images","resizeNearestNeighbor");o.vA(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.vA(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),o.vA("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.vA(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.t)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:u},h={alignCorners:n,halfPixelCenters:i,size:t},f=a.T2.runKernel(r.jOE,p,h);return d?(0,c.t)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},9027:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isFinite_:function(e){const t={x:(0,s.YT)(e,"x","isFinite")};return a.T2.runKernel(r.gIW,t)}})},6005:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isInf_:function(e){const t={x:(0,s.YT)(e,"x","isInf")};return a.T2.runKernel(r.E3$,t)}})},3467:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({isNaN_:function(e){const t={x:(0,s.YT)(e,"x","isNaN")};return a.T2.runKernel(r.iPs,t)}})},8076:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n={x:(0,s.YT)(e,"x","leakyRelu")},o={alpha:t};return a.T2.runKernel(r.X0$,n,o)}})},8320:(e,t,n)=>{"use strict";n.d(t,{M:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({less_:function(e,t){let n=(0,o.YT)(e,"a","less","string_or_numeric"),c=(0,o.YT)(t,"b","less","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.mIA,l)}})},827:(e,t,n)=>{"use strict";n.d(t,{I:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({lessEqual_:function(e,t){let n=(0,o.YT)(e,"a","lessEqual","string_or_numeric"),c=(0,o.YT)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.CwD,l)}})},6584:(e,t,n)=>{"use strict";n.d(t,{K:()=>l});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7892),c=n(5583);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,s.YT)(e,"x","localResponseNormalization");o.vA(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),o.vA(o.E6(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,p=!1;3===u.rank&&(p=!0,d=(0,c.t)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.T2.runKernel(r.jM4,h,f);return p?(0,c.t)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5911:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log_:function(e){const t={x:(0,s.YT)(e,"x","log","float32")};return a.T2.runKernel(r.tG8,t)}})},1386:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({log1p_:function(e){const t={x:(0,s.YT)(e,"x","log1p")};return a.T2.runKernel(r.Cg$,t)}})},4824:(e,t,n)=>{"use strict";n.d(t,{n:()=>u});var a=n(1839),r=n(4148),s=n(803),o=n(1011),i=n(7892),c=n(4213),l=n(9973);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r.YT)(e,"x","logSigmoid");return(0,a._X)((e=>({value:(0,o.H)((0,l.l)((0,o.H)(e))),gradFunc:t=>(0,s.l)(t,(0,c.r)((0,o.H)(e)))})))(t)}})},1194:(e,t,n)=>{"use strict";n.d(t,{H:()=>h});var a=n(1839),r=n(4148),s=n(7794),o=n(5462),i=n(5911),c=n(891),l=n(803),u=n(7892),d=n(7951),p=n(7382);const h=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r.YT)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));return(0,a._X)(((e,n)=>{const a=(0,c.T)(e,t,!0),r=(0,d.j)(e,a),u=(0,d.j)((0,s.w)(r,"float32"),(0,i.R)((0,p.c)((0,o.o)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,o.o)(a);return(0,d.j)(e,(0,l.l)((0,p.c)(e,t,!0),r))}}}))(n)}})},2175:(e,t,n)=>{"use strict";n.d(t,{V:()=>f});var a=n(4148),r=n(1426),s=n(7242),o=n(9235),i=n(5462),c=n(5911),l=n(891),u=n(7892),d=n(5583),p=n(7951),h=n(7382);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a.YT)(e,"x","logSumExp"),f=(0,r.Y6)(t,u.shape),m=(0,l.T)(u,f,!0),g=(0,p.j)(u,m),y=(0,i.o)(g),b=(0,h.c)(y,f),v=(0,c.R)(b),x=(0,s.W)((0,d.t)(m,v.shape),v);if(n){const e=(0,o.SM)(x.shape,f);return(0,d.t)(x,e)}return x}})},5692:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalAnd_:function(e,t){const n=(0,s.YT)(e,"a","logicalAnd","bool"),i=(0,s.YT)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.RUm,c)}})},5344:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({logicalNot_:function(e){const t={x:(0,s.YT)(e,"x","logicalNot","bool")};return a.T2.runKernel(r.nZd,t)}})},7920:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(8805);const i=(0,n(7892).op)({logicalOr_:function(e,t){const n=(0,s.YT)(e,"a","logicalOr","bool"),i=(0,s.YT)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.T2.runKernel(r.LXA,c)}})},3708:(e,t,n)=>{"use strict";n.d(t,{r:()=>c});var a=n(4148),r=n(8805),s=n(5692),o=n(5344),i=n(7920);const c=(0,n(7892).op)({logicalXor_:function(e,t){const n=(0,a.YT)(e,"a","logicalXor","bool"),c=(0,a.YT)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,s.n)((0,i.z)(e,t),(0,o.N)((0,s.n)(e,t)))}})},1667:(e,t,n)=>{"use strict";var a;n.d(t,{i:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},5162:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o.YT)(e,"a","matMul"),l=(0,o.YT)(t,"b","matMul");[c,l]=(0,s.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.T2.runKernel(r.jAQ,u,d)}})},891:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","max")},i={reductionIndices:t,keepDims:n};return a.T2.runKernel(r.VAI,o,i)}})},6044:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var a=n(2164),r=n(9554),s=n(4148),o=n(1426),i=n(7538),c=n(7892),l=n(5583);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,s.YT)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=(0,l.t)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.vA(4===p.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(p.rank,"."))),o.vA(i.G0(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.s_("maxPool",c,u);const f={x:p},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.T2.runKernel(r.t3d,f,m);return h?(0,l.t)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},2131:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({maximum_:function(e,t){let n=(0,o.YT)(e,"a","maximum"),l=(0,o.YT)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LDN,u)}})},3015:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","mean")},i={axis:t,keepDims:n};return a.T2.runKernel(r.g5A,o,i)}})},1465:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o={x:(0,s.YT)(e,"x","min")},i={axis:t,keepDims:n};return a.T2.runKernel(r.lNG,o,i)}})},6561:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805),c=n(7794);const l=(0,n(7892).op)({minimum_:function(e,t){let n=(0,o.YT)(e,"a","minimum"),l=(0,o.YT)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.w)(n,"int32"),l=(0,c.w)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.T2.runKernel(r.LG0,u)}})},4252:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({mirrorPad_:function(e,t,n){o.vA("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,s.YT)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.vA(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.vA(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.vA(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.T2.runKernel(r.x7F,u,l)}})},3617:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mod_:function(e,t){let n=(0,o.YT)(e,"a","mod"),i=(0,o.YT)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.BLA,c)}})},803:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({mul_:function(e,t){let n=(0,o.YT)(e,"a","mul"),i=(0,o.YT)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.xu7,c)}})},1011:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({neg_:function(e){const t={x:(0,s.YT)(e,"x","neg")};return a.T2.runKernel(r.l0G,t)}})},2155:(e,t,n)=>{"use strict";n.d(t,{x:()=>y});var a=n(4148),r=n(1426),s=n(3753),o=n(9235),i=n(891),c=n(1465),l=n(7892),u=n(7587),d=n(5583),p=n(1997),h=n(191),f=n(7738),m=n(7382);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.t)(e);if(1!==e.rank&&null===n)return g((0,d.t)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.c)((0,s.t)(e),n);if(t===1/0)return(0,i.T)((0,s.t)(e),n);if(t===-1/0)return(0,c.j)((0,s.t)(e),n);if("euclidean"===t||2===t)return(0,h.R)((0,m.c)((0,u.n)((0,s.t)(e),(0,p.d)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.T)((0,m.c)((0,s.t)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.T)((0,m.c)((0,s.t)(e),n[1]),n[0]);if(t===-1/0)return(0,c.j)((0,m.c)((0,s.t)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h.R)((0,m.c)((0,f.E)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a.YT)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=(0,r.Y6)(n,e.shape);c=o.SM(i.shape,t)}return(0,d.t)(i,c)}})},135:(e,t,n)=>{"use strict";n.d(t,{E:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({notEqual_:function(e,t){let n=(0,o.YT)(e,"a","notEqual","string_or_numeric"),c=(0,o.YT)(t,"b","notEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.ylV,l)}})},6865:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c={indices:(0,s.YT)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:o};return a.T2.runKernel(r.urI,c,l)}})},4616:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(2164),r=n(1426),s=n(6149),o=n(4218);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.U)(e,"float32");return(0,s.f)(t,n)}const n=(0,r.FZ)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},4100:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({onesLike_:function(e){const t={x:(0,s.YT)(e,"x","onesLike")};return a.T2.runKernel(r.LWX,t)}})},7892:(e,t,n)=>{"use strict";n.d(t,{B:()=>s,op:()=>o});var a=n(2164),r=n(1426);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){a.T2.startScope(n);try{const e=o(...arguments);return(0,r.yL)(e)&&console.error("Cannot return a Promise inside of tidy."),a.T2.endScope(e),e}catch(e){throw a.T2.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},9249:(e,t,n)=>{"use strict";n.d(t,{BTT:()=>p.B,tnl:()=>r.t,HQu:()=>s.H,FqL:()=>o.F,WQq:()=>i.W,QiD:()=>h,Q7R:()=>f.Q,bzn:()=>m.b,FLi:()=>g.F,XRg:()=>y.X,qRo:()=>b.q,yHs:()=>v.y,rYl:()=>x.r,FPz:()=>w.F,rfv:()=>k.r,$jT:()=>S.$,sub:()=>C,lZX:()=>O,$v7:()=>z.$,BFc:()=>L,kSi:()=>P,T5N:()=>B,GTe:()=>M.G,HbZ:()=>W,vjT:()=>V,ftb:()=>na,ROE:()=>U,hOW:()=>G.h,ra8:()=>j.r,wgE:()=>T.w,mkO:()=>H.m,zQh:()=>q.z,o8B:()=>Y.o,faB:()=>K.f,xWs:()=>E.x,I1m:()=>X,RPU:()=>Z,O5O:()=>Q,P1l:()=>J,kA9:()=>$.k,Xtf:()=>ee.X,wX9:()=>te.w,IPL:()=>ne,jIJ:()=>re,gnS:()=>se.g,yIG:()=>oe.y,_jP:()=>pa,Lp0:()=>ie.L,rCv:()=>ce.r,aOp:()=>le,Rj8:()=>ue.R,Gl3:()=>de.G,smy:()=>pe,X7t:()=>he.X,y4m:()=>fe.y,ek5:()=>me.e,Omf:()=>ge.O,EZY:()=>ua,_3C:()=>ye,Pqc:()=>be.P,FJY:()=>da,QP2:()=>ve,LCg:()=>xe.L,Y12:()=>we.Y,p4S:()=>ke.p,oNF:()=>Se.o,UG6:()=>Te.U,IYd:()=>Ne.I,y5U:()=>Ce,hVP:()=>wn.h,GSj:()=>Ee.G,RIf:()=>Ae.R,wh_:()=>Re.w,cZk:()=>a,kgh:()=>_e.k,SY9:()=>la,rhj:()=>Fe.r,DQN:()=>De.D,KGM:()=>kn.K,ngS:()=>Oe.n,Slp:()=>gr,U4u:()=>ha,ggX:()=>Sn.g,MIs:()=>Me.M,EN4:()=>ze.E,yrW:()=>Le.y,H8d:()=>Pe.H,M7h:()=>Be.M,InN:()=>We.I,mPL:()=>yr,mT8:()=>Ve,Kgs:()=>Ue.K,Rm2:()=>Ge.R,Kko:()=>je.K,nqI:()=>He.n,HPB:()=>qe.H,VZ:()=>Ye.V,n76:()=>Ke.n,NSZ:()=>Xe.N,ztW:()=>Ze.z,rxB:()=>Qe.r,YYh:()=>br,yzS:()=>et,NoW:()=>A.N,T9B:()=>tt.T,jgi:()=>nt.j,NYV:()=>at,RO:()=>rt,PhQ:()=>st.P,i2o:()=>ot.i,OYQ:()=>lt,jkA:()=>ut.j,BpO:()=>dt.B,FFZ:()=>pt.F,ziu:()=>ht.z,Clk:()=>yt,CRk:()=>oa,lKK:()=>R.l,YDF:()=>bt,OjQ:()=>vt,HZy:()=>xt.H,xbf:()=>ra.x,Ec:()=>wt.E,Mw0:()=>kt.M,SaS:()=>it.S,P61:()=>St.P,op:()=>p.op,X4o:()=>Tt,eVF:()=>Nt.e,BZs:()=>It,grY:()=>Ct,XHu:()=>Et,WLX:()=>At,dzn:()=>Rt.d,n7C:()=>_t.n,NsG:()=>Ft.N,yyV:()=>Dt.y,_eU:()=>Ot._,whe:()=>Mt,iyU:()=>zt,Q0_:()=>Lt,_9M:()=>Pt,pR9:()=>Gt,FE$:()=>jt,m0H:()=>Ht,YeY:()=>qt,HYA:()=>Yt,y17:()=>Kt,xav:()=>Xt.x,VOZ:()=>Zt.V,VVh:()=>Qt.V,j__:()=>Jt.j,tQQ:()=>I.t,BEg:()=>$t.B,QD2:()=>en,LMr:()=>tn,I2l:()=>nn,JYU:()=>an,z8$:()=>Tn.z,LIG:()=>rn.L,Z$r:()=>sn.Z,d_2:()=>on.d,NFr:()=>ia,sZg:()=>$e,WfX:()=>cn.W,wdz:()=>ln.w,F12:()=>un,ry7:()=>_.r,_SZ:()=>dn._,vPA:()=>mr,F8e:()=>pn.F,L0l:()=>hn.L,dik:()=>F.d,Q$M:()=>fn,zAd:()=>mn,wck:()=>gn,R0O:()=>yn,Vs9:()=>bn.V,lw0:()=>vn.l,eDJ:()=>xn.e,lMo:()=>vr,Zhr:()=>ca,lOn:()=>fr,lDo:()=>Nn.l,RZD:()=>In.R,EwI:()=>mt.E,Pbu:()=>Cn.P,r2V:()=>En.r,t$z:()=>An.t,PMw:()=>Rn.P,Ym9:()=>_n.Y,YjP:()=>xr,jbE:()=>gt.j,czq:()=>Fn.c,Mlm:()=>Dn.M,ymU:()=>D.y,OEK:()=>On.O,tGX:()=>zn,KtR:()=>Ln,$_$:()=>Pn.$,g9W:()=>Bn,Lpo:()=>Wn,yxw:()=>Vn,NNh:()=>Gn,Vsq:()=>Ie.V,rfw:()=>jn.r,mgz:()=>aa.m,efE:()=>Hn,AmM:()=>qn.A,zAU:()=>Yn.z,K$i:()=>Kn.K,rni:()=>Xn,bvq:()=>Zn,_M9:()=>Qn._,YJN:()=>$n,Ul9:()=>ea.U,POl:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>va,depthwiseConv2d:()=>ka,matMul:()=>Sa});var r=n(3753),s=n(4759),o=n(983),i=n(7242),c=n(2164),l=n(9554),u=n(4148),d=n(1426),p=n(7892);const h=(0,p.op)({addN_:function(e){d.vA(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.vA(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.r1(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return c.T2.runKernel(l.EkD,a)}});var f=n(1802),m=n(1819),g=n(3068),y=n(8482),b=n(3010),v=n(6464),x=n(7803),w=n(6349),k=n(8147),S=n(8650),T=n(7794),N=n(7538),I=n(5583);const C=(0,p.op)({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","avgPool3d","float32");let i=o,p=!1;4===o.rank&&(p=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),d.vA("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,N.s_)("avgPool3d",a,r);const h={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let m=c.T2.runKernel(l.cS,h,f);return m=(0,T.w)(m,i.dtype),p?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4429),A=n(5162),R=n(803),_=n(4213),F=n(463),D=n(6532);const O=(0,p.op)({basicLSTMCell_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"forgetBias","basicLSTMCell"),c=(0,u.YT)(t,"lstmKernel","basicLSTMCell"),l=(0,u.YT)(n,"lstmBias","basicLSTMCell"),d=(0,u.YT)(a,"data","basicLSTMCell"),p=(0,u.YT)(r,"c","basicLSTMCell"),h=(0,u.YT)(s,"h","basicLSTMCell"),f=(0,E.x)([d,h],1),m=(0,A.N)(f,c),g=(0,i.W)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.d)(g,[0,0],v),w=(0,F.d)(g,[0,b],v),k=(0,F.d)(g,[0,2*b],v),S=(0,F.d)(g,[0,3*b],v),T=(0,i.W)((0,R.l)((0,_.r)(x),(0,D.y)(w)),(0,R.l)(p,(0,_.r)((0,i.W)(o,k))));return[T,(0,R.l)((0,D.y)(T),(0,_.r)(S))]}});var M=n(2557),z=n(7237);const L=(0,p.op)({batchNorm2d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(p=(0,u.YT)(a,"offset","batchNorm")),d.vA(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),d.vA(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=p&&d.vA(2===p.rank||1===p.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(p.rank,"."))),(0,z.$)(o,i,c,p,l,s)}});const P=(0,p.op)({batchNorm3d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(p=(0,u.YT)(a,"offset","batchNorm")),d.vA(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),d.vA(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=p&&d.vA(3===p.rank||1===p.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(p.rank,"."))),(0,z.$)(o,i,c,p,l,s)}});const B=(0,p.op)({batchNorm4d_:function(e,t,n,a,r,s){const o=(0,u.YT)(e,"x","batchNorm"),i=(0,u.YT)(t,"mean","batchNorm"),c=(0,u.YT)(n,"variance","batchNorm");let l,p;return null!=r&&(l=(0,u.YT)(r,"scale","batchNorm")),null!=a&&(p=(0,u.YT)(a,"offset","batchNorm")),d.vA(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),d.vA(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.vA(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.vA(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=p&&d.vA(4===p.rank||1===p.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(p.rank,"."))),(0,z.$)(o,i,c,p,l,s)}});const W=(0,p.op)({bincount_:function(e,t,n){const a=(0,u.YT)(e,"x","bincount"),r=(0,u.YT)(t,"weights","bincount");d.vA("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return c.T2.runKernel(l.N4F,s,o)}});const V=(0,p.op)({bitwiseAnd_:function(e,t){const n=(0,u.YT)(e,"x","bitwiseAnd"),a=(0,u.YT)(t,"y","bitwiseAnd");if(!(0,d.r1)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.T2.runKernel(l.HNs,r)}});const U=(0,p.op)({broadcastArgs_:function(e,t){const n=(0,u.YT)(e,"s0","broadcastArgs","int32"),a=(0,u.YT)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.T2.runKernel(l.vj7,r)}});var G=n(4920),j=n(259),H=n(5396),q=n(3829),Y=n(9820),K=n(6149);const X=(0,p.op)({concat1d_:function(e){return(0,E.x)(e,0)}});const Z=(0,p.op)({concat2d_:function(e,t){return(0,E.x)(e,t)}});const Q=(0,p.op)({concat3d_:function(e,t){return(0,E.x)(e,t)}});const J=(0,p.op)({concat4d_:function(e,t){return(0,E.x)(e,t)}});var $=n(9870),ee=n(4969),te=n(1137);const ne=(0,p.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u.YT)(e,"x","conv3d"),i=(0,u.YT)(t,"filter","conv3d");let p=o,h=!1;4===o.rank&&(h=!0,p=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===p.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(p.rank,"."))),d.vA(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),d.vA(p.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(p.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),d.vA((0,N.G0)(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),d.vA("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),d.vA((0,N.qk)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.vA((0,N.qk)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:p,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:s},g=c.T2.runKernel(l.A1h,f,m);return h?(0,I.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(6410);const re=(0,p.op)({conv3dTranspose_:function(e,t,n,a,r){const s=(0,u.YT)(e,"x","conv3dTranspose"),o=(0,u.YT)(t,"filter","conv3dTranspose");return(0,ae.c)(n,s,o,a,r)}});var se=n(5894),oe=n(1164),ie=n(3739),ce=n(7167);const le=(0,p.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"x","denseBincount"),s=(0,u.YT)(t,"weights","denseBincount");d.vA("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),d.vA(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),d.vA(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.vA(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return c.T2.runKernel(l.wNW,o,i)}});var ue=n(1719),de=n(9899);const pe=(0,p.op)({diag_:function(e){const t={x:(0,u.YT)(e,"x","diag")};return c.T2.runKernel(l.ORI,t)}});var he=n(3789),fe=n(4974),me=n(44),ge=n(6434);const ye=(0,p.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"einsum"))),s={equation:e};return c.T2.runKernel(l.Qgm,r,s)}});var be=n(3645);const ve=(0,p.op)({ensureShape_:function(e,t){const n=(0,u.YT)(e,"x","ensureShape","string_or_numeric");if(!(0,d.e_)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(7457),we=n(8810),ke=n(8826),Se=n(5462),Te=n(4023),Ne=n(2520),Ie=n(3017);const Ce=(0,p.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,j.r)([e,t],a),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const o=(0,I.t)(r.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Ie.V)((0,Te.U)(o,0),[n[0],1,1]);if(2===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Ie.V)((0,Te.U)((0,Te.U)((0,Te.U)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ee=n(4660),Ae=n(8587),Re=n(3612),_e=n(6178),Fe=n(2759),De=n(9996),Oe=n(1047),Me=n(9027),ze=n(6005),Le=n(3467),Pe=n(8076),Be=n(8320),We=n(827);function Ve(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.T2.runKernel(l.mnI,{},a)}var Ue=n(6584),Ge=n(5911),je=n(1386),He=n(4824),qe=n(1194),Ye=n(2175),Ke=n(5692),Xe=n(5344),Ze=n(7920),Qe=n(3708);const Je=2147483648;const $e=(0,p.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u.YT)(e,"sortedSequence","searchSorted"),r=(0,u.YT)(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=(0,I.t)(a,[-1,s]),p=(0,I.t)(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==p.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.Ze)(p.shape)>=Je)throw new Error("values tensor size must less than ".concat(Je));if(i.shape[1]>=Je)throw new Error("trailing dim_size must less than ".concat(Je," for int32 output type, was ").concat(i.shape[1]));const h={sortedSequence:i,values:p},f={side:n};return c.T2.runKernel(l.uWl,h,f)}});function et(e,t){return $e(e,t,"left")}var tt=n(891),nt=n(6044);const at=(0,p.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u.YT)(e,"x","maxPool3d");let i=o,p=!1;4===o.rank&&(p=!0,i=(0,I.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.vA(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.vA("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),(0,N.s_)("maxPool3d",a,r);const h={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},m=c.T2.runKernel(l.ySp,h,f);return p?(0,I.t)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,p.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s={x:(0,u.YT)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},i=c.T2.runKernel(l.TL8,s,o);return{result:i[0],indexes:i[1]}}});var st=n(2131),ot=n(3015),it=n(4616),ct=n(9494);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u.YT)(e,"x","meshgrid",e instanceof ct.qY?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u.YT)(t,"y","meshgrid",t instanceof ct.qY?t.dtype:"float32");const s=(0,d.Ze)(a.shape),o=(0,d.Ze)(r.shape);return"xy"===n?(a=(0,I.t)(a,[1,-1]),r=(0,I.t)(r,[-1,1]),[(0,A.N)((0,it.S)([o,1],a.dtype),a),(0,A.N)(r,(0,it.S)([1,s],r.dtype))]):(a=(0,I.t)(a,[-1,1]),r=(0,I.t)(r,[1,-1]),[(0,A.N)(a,(0,it.S)([1,o],a.dtype)),(0,A.N)((0,it.S)([s,1],r.dtype),r)])}var ut=n(1465),dt=n(6561),pt=n(4252),ht=n(3617),ft=n(9235),mt=n(7738),gt=n(7951);const yt=(0,p.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u.YT)(e,"x","moments");const a=(0,d.Y6)(t,e.shape),r=(0,ot.i)(e,a,n);let s=r.shape;n||(s=(0,ft.SM)(r.shape,a));const o=(0,mt.E)((0,gt.j)((0,T.w)(e,"float32"),(0,I.t)(r,s)));return{mean:r,variance:(0,ot.i)(o,a,n)}}});const bt=(0,p.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u.YT)(t,"data","multiRNNCell"),s=(0,u.j1)(n,"c","multiRNNCell"),o=(0,u.j1)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,s[u],o[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,p.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u.YT)(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i={logits:1===o?(0,I.t)(r,[1,-1]):r},d={numSamples:t,seed:n,normalized:a},p=c.T2.runKernel(l.WT3,i,d);return 1===o?(0,I.t)(p,[p.size]):p}});var xt=n(1011),wt=n(135),kt=n(6865),St=n(4100);const Tt=(0,p.op)({outerProduct_:function(e,t){const n=(0,u.YT)(e,"v1","outerProduct"),a=(0,u.YT)(t,"v2","outerProduct");d.vA(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=(0,I.t)(n,[-1,1]),s=(0,I.t)(a,[1,-1]);return(0,A.N)(r,s)}});var Nt=n(5048);const It=(0,p.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Nt.e)(e,[t],n)}});const Ct=(0,p.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const Et=(0,p.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});const At=(0,p.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.vA)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Nt.e)(e,t,n)}});var Rt=n(7751),_t=n(7587),Ft=n(9855),Dt=n(6574),Ot=n(9556);const Mt=(0,p.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,u.YT)(t,"paramsDenseValues","raggedGather"),indices:(0,u.YT)(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=c.T2.runKernel(l.oJ2,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const zt=(0,p.op)({raggedRange_:function(e,t,n){const a=(0,u.YT)(e,"starts","raggedRange"),r={starts:a,limits:(0,u.YT)(t,"limits","raggedRange",a.dtype),deltas:(0,u.YT)(n,"deltas","raggedRange",a.dtype)},s=c.T2.runKernel(l.CQC,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Lt=(0,p.op)({raggedTensorToTensor_:function(e,t,n,a,r){const s=(0,u.YT)(e,"shape","raggedTensorToTensor","int32"),o=(0,u.YT)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,u.YT)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>(0,u.YT)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},d={rowPartitionTypes:r};return c.T2.runKernel(l.mH5,i,d)}});const Pt=(0,p.op)({rand_:function(e,t,n){(0,d.SA)(e);const a=(0,d.Ze)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return c.T2.makeTensor(r,e,n)}});var Bt=n(4334);class Wt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Bt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Vt{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Bt.alea(r.toString()),this.randn=new Wt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ut{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Bt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,p.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Vt(t,n,a,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,p.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Wt(t,n,a,!1,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ht=(0,p.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return jt(e,0,1,t,n)}});const qt=(0,p.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.SA)(e);const s=(0,j.r)(e,a),o=new Ut(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Yt=(0,p.op)({randomUniformInt_:function(e,t,n,a){return qt(e,t,n,"int32",a)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.T2.runKernel(l.Q6t,{},r)}var Xt=n(9477),Zt=n(6309),Qt=n(5251),Jt=n(9721),$t=n(7419);const en=(0,p.op)({reverse1d_:function(e){const t=(0,u.YT)(e,"x","reverse");return d.vA(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,$t.B)(t,0)}});const tn=(0,p.op)({reverse2d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const nn=(0,p.op)({reverse3d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});const an=(0,p.op)({reverse4d_:function(e,t){const n=(0,u.YT)(e,"x","reverse");return d.vA(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$t.B)(n,t)}});var rn=n(6509),sn=n(6777),on=n(1997),cn=n(2022),ln=n(3117);const un=async function(e,t){const n=(0,u.YT)(e,"x","setdiff1d"),a=(0,u.YT)(t,"y","setdiff1d");d.vA(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),d.vA(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),d.vA(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new ct.yl([i],n.dtype),l=new ct.yl([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(5740),pn=n(9519),hn=n(8143);const fn=(0,p.op)({slice1d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice1d");return d.vA(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,[t],[n])}});const mn=(0,p.op)({slice2d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice2d");return d.vA(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const gn=(0,p.op)({slice3d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice3d");return d.vA(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});const yn=(0,p.op)({slice4d_:function(e,t,n){const a=(0,u.YT)(e,"x","slice4d");return d.vA(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.d)(a,t,n)}});var bn=n(6719),vn=n(9973),xn=n(3585),wn=n(3062),kn=n(1405),Sn=n(7307),Tn=n(9486),Nn=n(5181),In=n(191),Cn=n(208),En=n(613),An=n(901),Rn=n(319),_n=n(1231),Fn=n(7382),Dn=n(4894),On=n(8032),Mn=n(9914);function zn(e,t){(0,d.HO)(e);const n=(0,u.MZ)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.Q)(e,null,n,t)}function Ln(e,t,n){if((0,d.HO)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.MZ)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.Q)(e,t,a,n)}var Pn=n(5395);function Bn(e,t,n){if((0,d.HO)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.MZ)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Wn(e,t,n){if((0,d.HO)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.MZ)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.Q)(e,t,a,n)}function Vn(e,t,n){if((0,d.HO)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.MZ)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Mn.Q)(e,t,a,n)}var Un=n(4083);const Gn=(0,p.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u.YT)(e,"tensor","tensorScatterupdate"),r=(0,u.YT)(t,"indices","tensorScatterupdate","int32"),s=(0,u.YT)(n,"updates","tensorScatterupdate");if(Un.validateInput(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return c.T2.runKernel(l.X4r,o,{})}});var jn=n(2765);const Hn=(0,p.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.SA)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Wt(t,n,a,!0,r),o=(0,j.r)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var qn=n(9694),Yn=n(5149),Kn=n(3984);function Xn(e,t){return $e(e,t,"right")}function Zn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.T2.makeVariable(e,t,n,a)}var Qn=n(3986),Jn=n(9286);const $n=async function(e){const t=(0,u.YT)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,Jn.Y)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(4218),ta=n(3290);const na=async function(e,t,n){const a=(0,u.YT)(e,"tensor","boolMask"),r=(0,u.YT)(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;d.vA(o>0,(()=>"mask cannot be scalar")),d.O3(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=s;u<s+o;u++)c*=i[u];const l=i.slice(0,s).concat([c],i.slice(s+o)),p=(0,I.t)(a,l),h=(0,I.t)(r,[-1]),f=await $n(h),m=(0,En.r)(f,[1]),g=(0,_e.k)(p,m,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),p.dispose(),h.dispose(),f.dispose(),g};var aa=n(2154),ra=n(2155),sa=n(8804);const oa=(0,p.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,u.YT)(e,"v","movingAverage"),o=(0,u.YT)(t,"x","movingAverage"),c=(0,u.YT)(n,"decay","movingAverage");(0,sa.assertTypesMatch)(s,o),d.vA(d.r1(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.d)(1),p=(0,gt.j)(l,c);let h=(0,R.l)((0,gt.j)(o,s),p);if(r){d.vA(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,u.YT)(a,"step","movingAverage");h=(0,fe.y)(h,(0,gt.j)(l,(0,_t.n)(c,e)))}return(0,i.W)(s,h)}});const ia=(0,p.op)({scatterND_:function(e,t,n){(0,d.SA)(n);const a=(0,u.YT)(e,"indices","scatterND","int32"),r=(0,u.YT)(t,"updates","scatterND");Un.validateInput(r,a,n);const s={indices:a,updates:r},o={shape:n};return c.T2.runKernel(l.pJc,s,o)}});const ca=(0,p.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.SA)(n);const r=(0,u.YT)(e,"sparseIndices","sparseToDense","int32"),s=(0,u.YT)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u.YT)(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},p={outputShape:n};return c.T2.runKernel(l.jgd,i,p)}});const la=(0,p.op)({gatherND_:function(e,t){const n=(0,u.YT)(t,"indices","gatherND","int32"),a={params:(0,u.YT)(e,"x","gatherND","string_or_numeric"),indices:n};return c.T2.runKernel(l.O4G,a)}});const ua=(0,p.op)({dropout_:function(e,t,n,a){const r=(0,u.YT)(e,"x","dropout");if(d.vA("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),d.vA(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ct.qY?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(d.r1(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,c=(0,fe.y)((0,Ae.R)((0,i.W)(qt(s,0,1,"float32",a),o)),o);return(0,R.l)(r,c)}});function da(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function pa(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return zn(r,"float32")}const ha=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u.YT)(e,"predictions","inTopK"),r=(0,u.YT)(t,"targets","inTopK");(0,d.vA)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,d.vA)(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),(0,d.O3)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];(0,d.vA)(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],p=(0,d.ce)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),p[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){p[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.O)(p,r.shape,"bool")};var fa=n(1839),ma=n(8805),ga=n(6927),ya=n(1565),ba=n(7905);const va=(0,p.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:p,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){d.vA("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,ee.X)(t,n,a,r,s,o,p);return null!=h&&(e=(0,i.W)(e,h)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","conv2d","float32"),b=(0,u.YT)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),N.s_("fused conv2d",r,p);const w="NHWC"===s?v.shape[3]:v.shape[1];d.vA(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),d.vA(N.G0(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const k=N.uf(v.shape,b.shape,a,o,r,p);let S,T;if(null!=h&&(S=(0,u.YT)(h,"bias","fused conv2d"),[S]=(0,sa.makeTypesMatch)(S,y),"NHWC"===s?ma.assertAndGetBroadcastShape(k.outShape,S.shape):(d.vA(S.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,"."))),d.vA(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const e=m.shape;if(d.vA(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)d.vA(1===e[0]||e[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===e.length)try{ma.assertAndGetBroadcastShape(e,k.outShape)}catch(R){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}T=(0,u.YT)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.vA("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,l]=t,u=(0,ba.XB)(e,c,f);d.vA(N.Dh(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const p=[(0,ya.v)(i.shape,u,n,a,r),(0,ga.H)(i,u,n.shape,a,r)];if(null!=l){const e=(0,ba.Do)(l,u);p.push(e)}return p},E={x:v,filter:b,bias:S,preluActivationWeights:T},A={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:p,activation:f,leakyreluAlpha:g};if(null==h){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.aAr,E,A);return n([t,e,a]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.aAr,E,A);return a([t,e,r,n]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b,S)}}});var xa=n(7399),wa=n(261);const ka=(0,p.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:p,bias:h,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,f)){let e=(0,de.G)(t,n,a,r,s,o,p);return null!=h&&(e=(0,i.W)(e,h)),(0,ba.f2)(e,f,m,g)}const y=(0,u.YT)(t,"x","depthwiseConv2d","float32"),b=(0,u.YT)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,I.t)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.vA(4===v.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,"."))),d.vA(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),d.vA(v.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==o&&(o=[1,1]),d.vA(N.G0(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),N.s_("fused depthwiseConv2d",r,p);const w=N.uf(v.shape,b.shape,a,o,r,p,!0);let k,S;null!=h&&(k=(0,u.YT)(h,"bias","fused conv2d"),[k]=(0,sa.makeTypesMatch)(k,y),ma.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u.YT)(m,"prelu weights","fused depthwiseConv2d"));const T=(e,t)=>{d.vA(N.Dh(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,i,c]=t,l=(0,ba.XB)(e,i,f),u=(0,wa.l)(s.shape,l,n,a,r,o,p),h=(0,xa.x)(s,l,n.shape,a,r,o,p);if(null!=c){return[u,h,(0,ba.Do)(k,l)]}return[u,h]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:p,activation:f,leakyreluAlpha:g};if(null==h){const e=(0,fa._X)(((e,t,n)=>{let a=c.T2.runKernel(l.T7M,C,E);return n([t,e,a]),x&&(a=(0,I.t)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:T}}));return e(v,b)}{const e=(0,fa._X)(((e,t,n,a)=>{let r=c.T2.runKernel(l.T7M,C,E);return a([t,e,r,n]),x&&(r=(0,I.t)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:T}}));return e(v,b,k)}}});const Sa=(0,p.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:p,leakyreluAlpha:h=.2}=e;if(!1===(0,ba.zE)(c.T2.state.gradientDepth,o)){let e=(0,A.N)(t,n,a,r);return null!=s&&(e=(0,i.W)(e,s)),(0,ba.f2)(e,o,p,h)}let f=(0,u.YT)(t,"a","fused matMul"),m=(0,u.YT)(n,"b","fused matMul");[f,m]=(0,sa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.Ze(x),S=d.Ze(w);d.vA(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const T=ma.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),N=a?(0,I.t)(f,[k,g,b]):(0,I.t)(f,[k,b,g]),C=r?(0,I.t)(m,[S,v,y]):(0,I.t)(m,[S,y,v]);let E,R;null!=s&&(E=(0,u.YT)(s,"bias","fused matMul"),[E]=(0,sa.makeTypesMatch)(E,f),ma.assertAndGetBroadcastShape(T,E.shape)),null!=p&&(R=(0,u.YT)(p,"prelu weights","fused matMul"));const _=(e,t)=>{const[n,i,c,l]=t,u=(0,ba.XB)((0,I.t)(e,c.shape),c,o);let d,p;if(a||r?!a&&r?(d=(0,A.N)(u,i,!1,!1),p=(0,A.N)(u,n,!0,!1)):a&&!r?(d=(0,A.N)(i,u,!1,!0),p=(0,A.N)(n,u,!1,!1)):(d=(0,A.N)(i,u,!0,!0),p=(0,A.N)(u,n,!0,!0)):(d=(0,A.N)(u,i,!1,!0),p=(0,A.N)(n,u,!0,!1)),null!=s){return[d,p,(0,ba.Do)(l,u)]}return[d,p]},F={a:N,b:C,bias:E,preluActivationWeights:R},D={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:h};if(null==s){const e=(0,fa._X)(((e,t,n)=>{const a=c.T2.runKernel(l.Dr,F,D);return n([e,t,a]),{value:(0,I.t)(a,T),gradFunc:_}}));return e(N,C)}{const e=(0,fa._X)(((e,t,n,a)=>{const r=c.T2.runKernel(l.Dr,F,D);return a([e,t,r,n]),{value:(0,I.t)(r,T),gradFunc:_}}));return e(N,C,E)}}});const Ta=(0,p.op)({hammingWindow_:function(e){return pa(e,.54,.46)}});const Na=(0,p.op)({hannWindow_:function(e){return pa(e,.5,.5)}});const Ia=(0,p.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,F.d)(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=(0,E.x)([(0,F.d)(e,s,t-a),(0,Ee.G)([a],r)]);o.push(i),s+=n}return 0===o.length?Ln([],[0,t]):(0,I.t)((0,E.x)(o),[o.length,t])}});const Ca=(0,p.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Na;null==a&&(a=da(t));const s=Ia(e,t,n),o=(0,R.l)(s,r(t));return(0,Tn.z)(o,a)}});const Ea=(0,p.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"image","cropAndResize"),i=(0,u.YT)(t,"boxes","cropAndResize","float32"),p=(0,u.YT)(n,"boxInd","cropAndResize","int32"),h=i.shape[0];d.vA(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.vA(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(h,",4] ")+"but had shape ".concat(i.shape,"."))),d.vA(1===p.rank&&p.shape[0]===h,(()=>"Error in cropAndResize: boxInd must be have size [".concat(h,"] ")+"but had shape ".concat(i.shape,"."))),d.vA(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),d.vA(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),d.vA("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const f={image:o,boxes:i,boxInd:p},m={method:r,extrapolationValue:s,cropSize:a};return c.T2.runKernel(l.MRQ,f,m)}});const Aa=(0,p.op)({flipLeftRight_:function(e){const t=(0,u.YT)(e,"image","flipLeftRight","float32");d.vA(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return c.T2.runKernel(l.BxF,n,{})}});const Ra=(0,p.op)({grayscaleToRGB_:function(e){const t=(0,u.YT)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Ie.V)(t,r)}});const _a=(0,p.op)({rgbToGrayscale_:function(e){const t=(0,u.YT)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.vA(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.vA(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=(0,T.w)(t,"float32"),o=zn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Te.U)(i,-1),(0,T.w)(i,r)}});const Fa=(0,p.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","rotateWithOffset","float32");d.vA(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a};return c.T2.runKernel(l.BK4,s,o)}});function Da(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.vA(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),d.vA(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),d.vA(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),d.vA(1===t.rank,(()=>"scores must be a 1D tensor")),d.vA(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),d.vA(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Oa=(0,p.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppression","float32"),o=(0,u.YT)(t,"scores","nonMaxSuppression","float32"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.T2.runKernel(l.SDM,{boxes:s,scores:o},d)}});var Ma=n(6692);const za=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),o=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),i=Da(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:p}=(0,Ma.c7)(l,d,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),zn(p,"int32")};const La=(0,p.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,s);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,s=d.softNmsSigma;const p={boxes:o,scores:i},h={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},f=c.T2.runKernel(l.e0f,p,h);return{selectedIndices:f[0],selectedScores:f[1]}}});const Pa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),d=l[0],p=l[1],{selectedIndices:h,selectedScores:f}=(0,Ma.ut)(d,p,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(h,"int32"),selectedScores:zn(f)}};const Ba=(0,p.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppression"),i=(0,u.YT)(t,"scores","nonMaxSuppression"),d=Da(o,i,n,a,r,null),p={boxes:o,scores:i},h={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:s},f=c.T2.runKernel(l.Zl4,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}});const Wa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u.YT)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u.YT)(t,"scores","nonMaxSuppressionAsync"),c=Da(o,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,p=c.scoreThreshold,[h,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,Ma.ZS)(h,f,l,d,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(m,"int32"),validOutputs:(0,on.d)(g,"int32")}};var Va=n(2214),Ua=n(2823);const Ga=(0,p.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u.YT)(e,"image","threshold"),s=r.shape[0]*r.shape[1];let o,c,l,p,h=(0,R.l)(zn([a]),255);if(d.vA(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),d.vA(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),d.vA("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),d.vA("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[o,c,l]=(0,Nn.l)(r,[1,1,1],-1);const e=(0,R.l)(o,.2989),t=(0,R.l)(c,.587),n=(0,R.l)(l,.114);p=(0,i.W)((0,i.W)(e,t),n)}else p=e;if("otsu"===t){h=function(e,t){let n,a,r,s,o,c,l=zn([-1]),u=zn([0]),d=zn([0]);for(let p=0;p<e.size-1;p++){n=(0,F.d)(e,0,p+1),a=(0,F.d)(e,p+1),o=(0,fe.y)((0,Fn.c)(n),t),c=(0,fe.y)((0,Fn.c)(a),t);const h=(0,Fn.c)((0,R.l)(n,Kt(0,n.size)));r=(0,fe.y)(h,(0,Fn.c)(n));const f=(0,Ee.G)(a.shape,n.size),m=(0,i.W)(Kt(0,a.size),f),g=(0,R.l)(a,m);s=(0,fe.y)((0,Fn.c)(g),(0,Fn.c)(a));const y=(0,gt.j)(r,s),b=(0,gt.j)(r,s),v=(0,R.l)(o,c);d=(0,R.l)((0,R.l)(v,y),b);const x=(0,Fe.r)(d,u);u=(0,Qn._)(x,d,u),l=(0,Qn._)(x,zn([p]),l)}return l}(W((0,T.w)((0,rn.L)(p),"int32"),(0,On.O)([]),256),s)}const f=n?(0,We.I)(p,h):(0,Fe.r)(p,h);return(0,T.w)((0,R.l)(f,255),"int32")}});const ja=(0,p.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,u.YT)(e,"image","transform","float32"),i=(0,u.YT)(t,"transforms","transform","float32");d.vA(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.vA(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.vA(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const p={image:o,transforms:i},h={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return c.T2.runKernel(l.dLy,p,h)}});const Ha=(0,p.op)({bandPart_:function(e,t,n){const a=(0,u.YT)(e,"a","bandPart");(0,d.vA)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.vA)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,d.vA)(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=(0,u.YT)(t<0?s:t,"numLower","bandPart")):((0,d.vA)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Qn._)((0,Be.M)(t,0),s,(0,dt.B)(t,s))),"number"===typeof n?((0,d.vA)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,d.vA)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,u.YT)(n<0?o:n,"numUpper","bandPart")):((0,d.vA)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Qn._)((0,Be.M)(n,0),o,(0,dt.B)(n,o)));const l=(0,I.t)(Kt(0,s,1,"int32"),[-1,1]),p=Kt(0,o,1,"int32"),h=(0,gt.j)(l,p),f=(0,Ke.n)((0,We.I)(h,i),(0,De.D)(h,(0,xt.H)(c))),m=(0,ea.U)([s,o],a.dtype);return(0,I.t)((0,An.t)((0,Kn.K)((0,I.t)(a,[-1,s,o])).map((e=>(0,Qn._)(f,e,m)))),r)}});const qa=(0,p.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.vA)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.vA)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,Nn.l)(e,e.shape[0],0).map((e=>(0,En.r)(e,[0])));(0,d.vA)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.T2.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,R.l)((0,Fn.c)((0,R.l)(n[t],e)),n[t]);e=(0,gt.j)(e,a)}return(0,fe.y)(e,(0,ra.x)(e,"euclidean"))})));return t?(0,An.t)(n,0):n}});var Ya=n(8046);function Ka(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.T2.tidy((()=>{(0,d.vA)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ce(n),s=(0,Y.o)(e);const o=Ln([[1]],[1,1]);let i=(0,Y.o)(o);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=i,u=r;[i,s,r]=c.T2.tidy((()=>{const t=(0,F.d)(s,[e,e],[n-e,1]),c=(0,ra.x)(t),l=(0,F.d)(s,[e,e],[1,1]),u=(0,Qn._)((0,Fe.r)(l,0),Ln([[-1]]),Ln([[1]])),d=(0,gt.j)(l,(0,R.l)(u,c)),p=(0,fe.y)(t,d);i=1===p.shape[0]?(0,Y.o)(o):(0,E.x)([o,(0,F.d)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=(0,xt.H)((0,fe.y)((0,A.N)(u,d),c)),f=(0,F.d)(s,[e,0],[n-e,a]),m=(0,R.l)(h,i),g=(0,aa.m)(i);if(0===e)s=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));else{const t=(0,gt.j)(f,(0,A.N)(m,(0,A.N)(g,f)));s=(0,E.x)([(0,F.d)(s,[0,0],[e,a]),t],0)}const y=(0,aa.m)(m),b=(0,F.d)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));else{const t=(0,gt.j)(b,(0,A.N)((0,A.N)(b,i),y));r=(0,E.x)([(0,F.d)(r,[0,0],[n,e]),t],1)}return[i,s,r]})),(0,Ya.AS)([t,l,u])}return!t&&n>a&&(r=(0,F.d)(r,[0,0],[n,a]),s=(0,F.d)(s,[0,0],[a,a])),[r,s]}))}const Xa=(0,p.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.vA)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Ka(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,Kn.K)((0,I.t)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Ka(e,t);r.push(n),s.push(a)}));return[(0,I.t)((0,An.t)(r,0),e.shape),(0,I.t)((0,An.t)(s,0),e.shape)]}}});var Za=n(1667);const Qa=(0,p.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Za.i.SUM_BY_NONZERO_WEIGHTS;const a=(0,u.YT)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u.YT)(t,"weights","computeWeightedLoss"));const s=null==r?a:(0,R.l)(a,r);if(n===Za.i.NONE)return s;if(n===Za.i.SUM)return(0,Fn.c)(s);if(n===Za.i.MEAN){if(null==r)return(0,ot.i)(s);{const e=a.size/r.size,t=(0,fe.y)((0,Fn.c)(s),(0,Fn.c)(r));return e>1?(0,fe.y)(t,(0,on.d)(e)):t}}if(n===Za.i.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.y)((0,Fn.c)(s),(0,on.d)(a.size));{const e=(0,R.l)(r,(0,it.S)(a.shape)),t=(0,T.w)((0,Fn.c)((0,wt.E)(e,(0,on.d)(0))),"float32");return(0,fe.y)((0,Fn.c)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const Ja=(0,p.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","absoluteDifference"),o=(0,u.YT)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u.YT)(n,"weights","absoluteDifference")),(0,d.O3)(s.shape,o.shape,"Error in absoluteDifference: ");const c=(0,r.t)((0,gt.j)(s,o));return Qa(c,i,a)}});const $a=(0,p.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","cosineDistance"),o=(0,u.YT)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u.YT)(a,"weights","cosineDistance")),(0,d.O3)(s.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.d)(1),l=(0,gt.j)(c,(0,Fn.c)((0,R.l)(s,o),n,!0));return Qa(l,i,r)}});const er=(0,p.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS,r=(0,u.YT)(e,"labels","hingeLoss");const s=(0,u.YT)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","hingeLoss")),(0,d.O3)(r.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.d)(1);r=(0,gt.j)((0,R.l)((0,on.d)(2),r),i);const c=(0,Qt.V)((0,gt.j)(i,(0,R.l)(r,s)));return Qa(c,o,a)}});const tr=(0,p.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const o=(0,u.YT)(e,"labels","huberLoss"),c=(0,u.YT)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u.YT)(n,"weights","huberLoss")),(0,d.O3)(o.shape,c.shape,"Error in huberLoss: ");const p=(0,on.d)(a),h=(0,r.t)((0,gt.j)(c,o)),f=(0,dt.B)(h,p),m=(0,gt.j)(h,f),g=(0,i.W)((0,R.l)((0,on.d)(.5),(0,mt.E)(f)),(0,R.l)(p,m));return Qa(g,l,s)}});const nr=(0,p.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS;const s=(0,u.YT)(e,"labels","logLoss"),o=(0,u.YT)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u.YT)(n,"weights","logLoss")),(0,d.O3)(s.shape,o.shape,"Error in logLoss: ");const l=(0,on.d)(1),p=(0,on.d)(a),h=(0,xt.H)((0,R.l)(s,(0,Ge.R)((0,i.W)(o,p)))),f=(0,R.l)((0,gt.j)(l,s),(0,Ge.R)((0,i.W)((0,gt.j)(l,o),p))),m=(0,gt.j)(h,f);return Qa(m,c,r)}});const ar=(0,p.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Za.i.SUM_BY_NONZERO_WEIGHTS;const r=(0,u.YT)(e,"labels","meanSquaredError"),s=(0,u.YT)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u.YT)(n,"weights","meanSquaredError")),(0,d.O3)(r.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.P)(r,s);return Qa(i,o,a)}});const rr=(0,p.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,o=(0,u.YT)(e,"multiClassLabels","sigmoidCrossEntropy");const c=(0,u.YT)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,u.YT)(n,"weights","sigmoidCrossEntropy")),(0,d.O3)(o.shape,c.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(.5);o=(0,i.W)((0,R.l)(o,(0,gt.j)(t,e)),(0,R.l)(n,e))}const p=function(e,t){const n=(0,u.YT)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u.YT)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.O3)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Qt.V)(a),o=(0,R.l)(a,n),c=(0,je.K)((0,Se.o)((0,xt.H)((0,r.t)(a))));return(0,i.W)((0,gt.j)(s,o),c)}(o,c);return Qa(p,l,s)}});const sr=(0,p.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Za.i.SUM_BY_NONZERO_WEIGHTS,s=(0,u.YT)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,u.YT)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u.YT)(n,"weights","softmaxCrossEntropy")),(0,d.O3)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,on.d)(a),t=(0,on.d)(1),n=(0,on.d)(s.shape[1]);s=(0,i.W)((0,R.l)(s,(0,gt.j)(t,e)),(0,fe.y)(e,n))}const l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,fa._X)(((e,t,a)=>{const r=(0,Ye.V)(t,[n],!0),s=(0,gt.j)((0,T.w)(t,"float32"),r);a([e,s]);const o=(0,xt.H)((0,R.l)(s,e));return{value:(0,Fn.c)(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=(0,ft.SM)(e.shape,[n]);return[(0,R.l)((0,I.t)(e,s),(0,gt.j)((0,T.w)(a,"float32"),(0,Se.o)(r))),(0,R.l)((0,I.t)(e,s),(0,gt.j)((0,Se.o)(r),(0,T.w)(a,"float32")))]}}}));return a(e,t)}(s,o);return Qa(l,c,r)}});const or=(0,p.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u.YT)(e,"indices","sparseFillEmptyRows","int32"),s=(0,u.YT)(t,"values","sparseFillEmptyRows"),o=(0,u.YT)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u.YT)(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:s,denseShape:o,defaultValue:i},p=c.T2.runKernel(l.C8s,d);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}});const ir=(0,p.op)({sparseReshape_:function(e,t,n){const a=(0,u.YT)(e,"inputIndices","sparseReshape","int32"),r=(0,u.YT)(t,"inputShape","sparseReshape","int32"),s=(0,u.YT)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=c.T2.runKernel(l.BoJ,o);return{outputIndices:i[0],outputShape:i[1]}}});const cr=(0,p.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentMean"),r=(0,u.YT)(t,"indices","sparseSegmentMean","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.L6G,o)}});const lr=(0,p.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u.YT)(e,"data","sparseSegmentSum"),r=(0,u.YT)(t,"indices","sparseSegmentSum","int32"),s=(0,u.YT)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.T2.runKernel(l.DvZ,o)}});const ur=(0,p.op)({stringNGrams_:function(e,t,n,a,r,s,o,i){const d=(0,u.YT)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const p=(0,u.YT)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const h={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:p},m=c.T2.runKernel(l.YAb,f,h);return{nGrams:m[0],nGramsSplits:m[1]}}});const dr=(0,p.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u.YT)(e,"input","stringSplit","string"),r=(0,u.YT)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=c.T2.runKernel(l.iW0,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const pr=(0,p.op)({stringToHashBucketFast_:function(e,t){const n=(0,u.YT)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.T2.runKernel(l.$jE,r,a)}});const hr=(0,p.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u.YT)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return c.T2.runKernel(l.GZp,{x:r},s)}}),fr={fft:wn.h,ifft:kn.K,rfft:Tn.z,irfft:Sn.g},mr={hammingWindow:Ta,hannWindow:Na,frame:Ia,stft:Ca},gr={flipLeftRight:Aa,grayscaleToRGB:Ra,resizeNearestNeighbor:Ua.b,resizeBilinear:Va.v,rgbToGrayscale:_a,rotateWithOffset:Fa,cropAndResize:Ea,nonMaxSuppression:Oa,nonMaxSuppressionAsync:za,nonMaxSuppressionWithScore:La,nonMaxSuppressionWithScoreAsync:Pa,nonMaxSuppressionPadded:Ba,nonMaxSuppressionPaddedAsync:Wa,threshold:Ga,transform:ja},yr={bandPart:Ha,gramSchmidt:qa,qr:Xa},br={absoluteDifference:Ja,computeWeightedLoss:Qa,cosineDistance:$a,hingeLoss:er,huberLoss:tr,logLoss:nr,meanSquaredError:ar,sigmoidCrossEntropy:rr,softmaxCrossEntropy:sr},vr={sparseFillEmptyRows:or,sparseReshape:ir,sparseSegmentMean:cr,sparseSegmentSum:lr},xr={stringNGrams:ur,stringSplit:dr,stringToHashBucketFast:pr,staticRegexReplace:hr}},5048:(e,t,n)=>{"use strict";n.d(t,{e:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s.YT)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return a.T2.runKernel(r.ODT,c,i)}})},7751:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var a=n(4148),r=n(1426),s=n(8650),o=n(2557),i=n(7538),c=n(6044),l=n(7892),u=n(5583),d=n(3585);const p=(0,l.op)({pool_:function(e,t,n,l,p,h,f){null==p&&(p=[1,1]),null==h&&(h=1),0===l&&(l="valid");const m=(0,a.YT)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.t)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.vA(i.G0(h,p),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(h," and dilations '").concat(p,"'")));const b=i.E6(g.shape,t,h,p,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),a=n.map((e=>e-1)),r=a.map((e=>Math.floor(e/2))),s=a.map(((e,t)=>e-r[t]));return a.map(((e,t)=>[r[t],s[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([b.inHeight,b.inWidth],v,x),T=w?l:"valid",N=w?g:(0,d.e)(g,v,k),I=("avg"===n?()=>(0,s.$)(N,t,h,T,f):()=>(0,c.j)(N,t,h,T,f))(),C=w?I:(0,o.G)(I,v,S);return y?(0,u.t)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},7587:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({pow_:function(e,t){let n=(0,o.YT)(e,"base","pow"),i=(0,o.YT)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.pyJ,c)}})},9855:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({prelu_:function(e,t){const n={x:(0,s.YT)(e,"x","prelu"),alpha:(0,s.YT)(t,"alpha","prelu")};return a.T2.runKernel(r.Ncv,n)}})},6574:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{y:()=>a})},9556:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.kdj,c,l)}})},9477:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({real_:function(e){const t={input:(0,s.YT)(e,"input","real")};return a.T2.runKernel(r.LRy,t)}})},6309:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reciprocal_:function(e){const t={x:(0,s.YT)(e,"x","reciprocal")};return a.T2.runKernel(r.huO,t)}})},5251:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu_:function(e){const t={x:(0,s.YT)(e,"x","relu")};return a.T2.runKernel(r.fUj,t)}})},9721:(e,t,n)=>{"use strict";n.d(t,{j:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({relu6_:function(e){const t={x:(0,s.YT)(e,"x","relu6")};return a.T2.runKernel(r.P_L,t)}})},5583:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reshape_:function(e,t){const n={x:(0,s.YT)(e,"x","reshape","string_or_numeric")},o={shape:t};return a.T2.runKernel(r.R23,n,o)}})},7419:(e,t,n)=>{"use strict";n.d(t,{B:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({reverse_:function(e,t){const n={x:(0,s.YT)(e,"x","reverse")},o={dims:t};return a.T2.runKernel(r.D7i,n,o)}})},6509:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({round_:function(e){const t={x:(0,s.YT)(e,"x","round")};return a.T2.runKernel(r.hVg,t)}})},6777:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({rsqrt_:function(e){const t={x:(0,s.YT)(e,"x","rsqrt","float32")};return a.T2.runKernel(r.TOR,t)}})},1997:(e,t,n)=>{"use strict";n.d(t,{d:()=>s});var a=n(8977),r=n(9914);function s(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.Q)(e,[],[],t)}},4083:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>s,validateUpdateShape:()=>r});var a=n(1426);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function o(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:(0,a.Ze)(t.shape)/c,sliceSize:i,strides:[...(0,a.Ur)(n.slice(0,s)),1],outputSize:(0,a.Ze)(n)}}},2022:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({selu_:function(e){const t={x:(0,s.YT)(e,"x","selu")};return a.T2.runKernel(r.u$b,t)}})},3765:(e,t,n)=>{"use strict";n.d(t,{X:()=>r,j:()=>a});const a=1.7580993408473768,r=1.0507009873554805},3117:(e,t,n)=>{"use strict";n.d(t,{w:()=>l});var a=n(4148),r=n(1426),s=n(4969),o=n(9899),i=n(7892),c=n(5583);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const p=(0,a.YT)(e,"x","separableConv2d"),h=(0,a.YT)(t,"depthwiseFilter","separableConv2d"),f=(0,a.YT)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,c.t)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.vA(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),r.vA(4===h.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(h.rank,"."))),r.vA(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(h.rank,"."))),r.vA(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),r.vA(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=h.shape[2],b=h.shape[3];r.vA(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const v=(0,o.G)(m,h,i,l,d,u),x=(0,s.X)(v,f,1,"valid",d);return g?(0,c.t)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},4213:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sigmoid_:function(e){const t={x:(0,s.YT)(e,"x","sigmoid","float32")};return a.T2.runKernel(r.vI1,t)}})},5740:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sign_:function(e){const t={x:(0,s.YT)(e,"x","sign")};return a.T2.runKernel(r.YVe,t)}})},9519:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sin_:function(e){const t={x:(0,s.YT)(e,"x","sin","float32")};return a.T2.runKernel(r.hql,t)}})},8143:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sinh_:function(e){const t={x:(0,s.YT)(e,"x","sinh")};return a.T2.runKernel(r.J3C,t)}})},463:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({slice_:function(e,t,n){const o=(0,s.YT)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return a.T2.runKernel(r.JiE,i,c)}})},4642:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>o,computeFlatOffset:()=>v,computeOutShape:()=>c,getNormalizedAxes:()=>p,isSliceContinous:()=>b,maskToAxes:()=>i,parseSliceParams:()=>x,sliceInfo:()=>w,startForAxis:()=>g,startIndicesWithElidedDims:()=>h,stopForAxis:()=>y,stopIndicesWithElidedDims:()=>f,stridesForAxis:()=>m,stridesWithElidedDims:()=>l});var a=n(1426);const r=-2,s=-1;function o(e,t,n){const r=e.shape.length;a.vA(r===t.length,(()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,")."))),a.vA(r===n.length,(()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,").")));for(let s=0;s<r;++s)a.vA(t[s]+n[s]<=e.shape[s],(()=>"Error in slice".concat(r,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")")))}function i(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function c(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function l(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function u(e,t,n){return n<=e?n:n-(t-1)}function d(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function p(e,t,n,a,r,s,o,i,c){const u=e.length;let d=new Array(u),p=new Array(u),b=new Array(u);if(t.length&&n>0){const c=t[0],u=n+1;d=h(o,c,u,a,e),p=f(i,c,u,r,e),b=l(s,c,u,e)}else for(let l=0;l<u;l++)d[l]=g(o,a,s,e,l,c),p[l]=y(i,r,s,e,l,c),b[l]=m(s,l,c);return{begin:d,end:p,strides:b}}function h(e,t,n,a,r){const s=[...r],o=d(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=u(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function f(e,t,n,r,s){const o=[...s],i=d(n,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=a.qE(0,o[c],s[c])}return o}function m(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function g(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=a.qE(0,i,l-1),i}function y(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c>0?a.qE(0,i,l):a.qE(-1,i,l-1),i}function b(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function v(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function x(e,t,n){let r;const s=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a.vA(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(a.vA(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-r[n]))),[r,o]}function w(e,t,n,a,o,i,c,l,u){let d;if(null==a?(d=new Array(t.length),d.fill(1)):d=a,null!=c&&0!==(c&c-1))throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const h={dims:d.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:d.slice(),beginMask:o,endMask:i,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:u};for(let r=0;r<h.dims;r++)p&&0!==(1<<r&l)&&h.numAddAxisAfterEllipsis++,1<<r&c&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(h,f);let m=!0,g=!0,y=!0;const b=[],v=[];for(let r=0;r<e.length;++r){if(0===f.strides[r])throw Error("strides[".concat(r,"] must be non-zero"));const t=!!(f.shrinkAxisMask&1<<r),n=e[r];if(-1===n){b.push(t?1:-1);continue}const a=[f.beginMask&1<<r,f.endMask&1<<r],s=[f.strides[r]>0?0:-1,f.strides[r]>0?n:n-1];if(t&&f.strides[r]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[r];const o=!!(f.beginMask&1<<r&&f.endMask&1<<r);if(f.beginValid&&f.endValid){if(t){const e=f.begin[r]<0?n+f.begin[r]:f.begin[r];if(f.begin[r]=e,f.end[r]=f.begin[r]+1,e<0||e>=n)throw Error("slice index ".concat(f.begin[r]," of dimension ").concat(r," out of bounds."))}else f.begin[r]=k(f.begin[r],0,f.strides[r],n,a,s),f.end[r]=k(f.end[r],1,f.strides[r],n,a,s);const e=1===f.strides[r]&&0===f.begin[r]&&f.end[r]===n;m=m&&e,g=g&&(0===r&&1===f.strides[r]||e)}else m=m&&1===f.strides[r]&&o,g=g&&(0===r&&1===f.strides[r]||o);let i,c=!1;if(f.beginValid&&f.endValid?(i=f.end[r]-f.begin[r],c=!0):t?(i=1,c=!0):o&&n>=0&&(i=f.strides[r]<0?-n:n,c=!0),c){let e;e=0===i||i<0!==f.strides[r]<0?0:Math.trunc(i/f.strides[r])+(i%f.strides[r]!==0?1:0),b.push(e)}else b.push(-1)}for(let s=0;s<f.finalShapeGatherIndices.length;++s){const e=f.finalShapeGatherIndices[s];e>=0?v.push(b[e]):e===r&&v.push(1)}return{finalShapeSparse:v.filter(((e,t)=>f.finalShapeGatherIndices[t]!==r)),finalShape:v,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},6719:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s.YT)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return a.T2.runKernel(r.rFG,o,i)}})},9973:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({softplus_:function(e){const t={x:(0,s.YT)(e,"x","softplus")};return a.T2.runKernel(r.Fin,t)}})},3585:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({spaceToBatchND_:function(e,t,n){const i=(0,s.YT)(e,"x","spaceToBatchND");o.vA(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),o.vA(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),o.vA(i.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.T2.runKernel(r.A8B,c,l)}})},3062:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({fft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.rGP,t)}})},1405:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(2164),r=n(9554),s=n(1426);const o=(0,n(7892).op)({ifft_:function(e){(0,s.vA)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.T2.runKernel(r.OAQ,t)}})},7307:(e,t,n)=>{"use strict";n.d(t,{g:()=>f});var a=n(6149),r=n(4429),s=n(1047),o=n(803),i=n(7892),c=n(9477),l=n(5583),u=n(7419),d=n(1997),p=n(463),h=n(1405);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.t)(e,[n,t]);i=(0,h.K)(a)}else{const f=[n,2*(t-1)],m=(0,l.t)((0,c.x)(e),[n,t]),g=(0,l.t)((0,s.n)(e),[n,t]),y=(0,u.B)((0,p.d)(m,[0,1],[n,t-2]),1),b=(0,o.l)((0,u.B)((0,p.d)(g,[0,1],[n,t-2]),1),(0,d.d)(-1)),v=(0,r.x)([m,y],1),x=(0,r.x)([g,b],1),w=(0,l.t)((0,a.f)(v,x),[f[0],f[1]]);i=(0,h.K)(w)}if(i=(0,c.x)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.t)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},9486:(e,t,n)=>{"use strict";n.d(t,{z:()=>m});var a=n(1426),r=n(6149),s=n(4429),o=n(1047),i=n(7892),c=n(9477),l=n(5583),u=n(463),d=n(5181),p=n(4218),h=n(3290),f=n(3062);const m=(0,i.op)({rfft_:function(e,t){(0,a.vA)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,u.d)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,m=(0,s.x)([e,(0,p.U)(a)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,l.t)((0,r.f)(m,g),[i,n]),b=(0,f.h)(y),v=Math.floor(n/2)+1,x=(0,c.x)(b),w=(0,o.n)(b),k=(0,d.l)(x,[v,n-v],x.shape.length-1),S=(0,d.l)(w,[v,n-v],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=v,(0,l.t)((0,r.f)(k[0],S[0]),T)}})},5181:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o={x:(0,s.YT)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return a.T2.runKernel(r.Blb,o,i)}})},191:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({sqrt_:function(e){const t={x:(0,s.YT)(e,"x","sqrt","float32")};return a.T2.runKernel(r.dFH,t)}})},7738:(e,t,n)=>{"use strict";n.d(t,{E:()=>s});var a=n(2164),r=n(4148);const s=(0,n(7892).op)({square_:function(e){const t=(0,r.YT)(e,"x","square");return a.T2.runKernel("Square",{x:t},{})}})},208:(e,t,n)=>{"use strict";n.d(t,{P:()=>c});var a=n(2164),r=n(9554),s=n(8804),o=n(4148),i=n(8805);const c=(0,n(7892).op)({squaredDifference_:function(e,t){let n=(0,o.YT)(e,"a","squaredDifference"),c=(0,o.YT)(t,"b","squaredDifference");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.T2.runKernel(r.Ddj,l,{})}})},613:(e,t,n)=>{"use strict";n.d(t,{r:()=>i});var a=n(4148),r=n(1426),s=n(7892),o=n(5583);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,a.YT)(e,"x","squeeze","string_or_numeric");return(0,o.t)(n,(0,r.gx)(n.shape,t).newShape)}})},901:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.j1)(e,"tensors","stack","string_or_numeric");o.vA(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.vA(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.T2.runKernel(r.mM$,i,c)}})},319:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n={x:(0,s.YT)(e,"x","step")},o={alpha:t};return a.T2.runKernel(r.pnw,n,o)}})},1231:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const p={x:(0,s.YT)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.T2.runKernel(r.UcO,p,h)}})},7951:(e,t,n)=>{"use strict";n.d(t,{j:()=>i});var a=n(2164),r=n(9554),s=n(8804),o=n(4148);const i=(0,n(7892).op)({sub_:function(e,t){let n=(0,o.YT)(e,"a","sub"),i=(0,o.YT)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.T2.runKernel(r.PbM,c)}})},7382:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(7794);const i=(0,n(7892).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s.YT)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.w)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.T2.runKernel(r.WuN,c,l)}})},4894:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tan_:function(e){const t={x:(0,s.YT)(e,"x","tan","float32")};return a.T2.runKernel(r.oFs,t)}})},6532:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({tanh_:function(e){const t={x:(0,s.YT)(e,"x","tanh","float32")};return a.T2.runKernel(r.iuW,t)}})},8032:(e,t,n)=>{"use strict";n.d(t,{O:()=>s});var a=n(4148),r=n(9914);function s(e,t,n){const s=(0,a.MZ)(e,n);return(0,r.Q)(e,t,s,n)}},5395:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(4148),r=n(1426),s=n(9914);function o(e,t,n){if((0,r.HO)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.MZ)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.Q)(e,t,o,n)}},9914:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var a=n(2164),r=n(8075),s=n(1426),o=n(8977);function i(e,t,n,i){if(null==i)i=(0,s.X$)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.Nw)(e)||(0,r.Oj)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.T2.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.SA)(t);const e=(0,s.Ze)(t),a=(0,s.Ze)(n);(0,s.vA)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,s.Ze)(t.slice(r));(0,s.vA)(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),a.T2.makeTensor(e,t,i)}},3017:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({tile_:function(e,t){const n=(0,s.YT)(e,"x","tile","string_or_numeric");o.vA(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.T2.runKernel(r.FAs,i,c)}})},2765:(e,t,n)=>{"use strict";n.d(t,{r:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s.YT)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},l={k:t,sorted:n},[u,d]=a.T2.runKernel(r.TBb,c,l);return{values:u,indices:d}}})},2154:(e,t,n)=>{"use strict";n.d(t,{m:()=>h});var a=n(2164),r=n(8046),s=n(9554),o=n(4148),i=n(1426),c=n(6149),l=n(1047),u=n(1011),d=n(7892),p=n(9477);const h=(0,d.op)({transpose_:function(e,t,n){const d=(0,o.YT)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.vA(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.vA(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const h={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.DZ)((()=>{let e=(0,p.x)(d),t=(0,l.n)(d);return e=a.T2.runKernel(s.wx0,{x:e},f),t=a.T2.runKernel(s.wx0,{x:t},f),n&&(t=(0,u.H)(t)),(0,c.f)(e,t)})):a.T2.runKernel(s.wx0,h,f)}})},9694:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unique","string_or_numeric");(0,o.vA)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.T2.runKernel(r.EwU,i,c);return{values:l,indices:u}}})},5149:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s.YT)(e,"x","unsortedSegmentSum"),c=(0,s.YT)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.vA)((0,o.E6)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.T2.runKernel(r.pPe,l,u)}})},3984:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(2164),r=n(9554),s=n(4148),o=n(1426);const i=(0,n(7892).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.YT)(e,"x","unstack","string_or_numeric");o.vA(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.T2.runKernel(r.dXR,i,c)}})},3986:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(2164),r=n(9554),s=n(4148),o=n(4920),i=n(8805);const c=(0,n(7892).op)({where_:function(e,t,n){const c=(0,s.YT)(t,"a","where"),l=(0,s.YT)(n,"b","where"),u=(0,s.YT)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),p={condition:(0,o.h)(u,d),t:(0,o.h)(c,d),e:(0,o.h)(l,d)};return a.T2.runKernel(r.l6P,p)}})},4218:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(2164),r=n(1426),s=n(6149);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.SA)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.f)(t,n)}const n=(0,r.Ty)((0,r.Ze)(e),t);return a.T2.makeTensor(n,e,t)}},3290:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(2164),r=n(9554),s=n(4148);const o=(0,n(7892).op)({zerosLike_:function(e){const t={x:(0,s.YT)(e,"x","zerosLike")};return a.T2.runKernel(r.xJ3,t)}})},5767:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{Y:()=>a})},9494:(e,t,n)=>{"use strict";n.d(t,{qY:()=>w,yl:()=>f,rT:()=>S,tp:()=>k,B4:()=>x,Q5:()=>v,qP:()=>b});var a=n(7926),r=n(1426);const s=20,o=3,i=7;function c(e,t,n,a){const s=(0,r.Ur)(t),o=function(e,t,n,a){const s=(0,r.Ze)(t),o=a[a.length-1],i=new Array(o).fill(0),c=t.length,u="complex64"===n?p(e):e;if(c>1)for(let r=0;r<s/o;r++){const e=r*o;for(let t=0;t<o;t++)i[t]=Math.max(i[t],l(u[e+t],0,n).length)}return i}(e,t,n,s),i=t.length,c=d(e,t,n,s,o),u=["Tensor"];return a&&(u.push("  dtype: ".concat(n)),u.push("  rank: ".concat(i)),u.push("  shape: [".concat(t,"]")),u.push("  values:")),u.push(c.map((e=>"    "+e)).join("\n")),u.join("\n")}function l(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(i))," + ")+"".concat(parseFloat(e[1].toFixed(i)),"j"):(0,r.Kg)(e)?"'".concat(e,"'"):"bool"===n?u(e):parseFloat(e.toFixed(i)).toString(),(0,r.av)(a,t)}function u(e){return 0===e?"false":"true"}function d(e,t,n,a,r){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const c="complex64"===n?2:1,h=t[0],f=t.length;if(0===f){if("complex64"===n){return[l(p(e)[0],0,n)]}return"bool"===n?[u(e[0])]:[e[0].toString()]}if(1===f){if(h>s){const t=o*c;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((h-o)*c,h*c));return"complex64"===n&&(a=p(a),s=p(s)),["["+a.map(((e,t)=>l(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>l(e,r[h-o+t],n))).join(", ")+"]"]}return["["+("complex64"===n?p(e):Array.from(e)).map(((e,t)=>l(e,r[t],n))).join(", ")+"]"]}const m=t.slice(1),g=a.slice(1),y=a[0]*c,b=[];if(h>s){for(let t=0;t<o;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,!1))}b.push("...");for(let t=h-o;t<h;t++){const a=t*y,s=a+y;b.push(...d(e.slice(a,s),m,n,g,r,t===h-1))}}else for(let s=0;s<h;s++){const t=s*y,a=t+y;b.push(...d(e.slice(t,a),m,n,g,r,s===h-1))}const v=2===f?",":"";b[0]="["+(h>0?b[0]+v:"");for(let s=1;s<b.length-1;s++)b[s]=" "+b[s]+v;let x=",\n";for(let s=2;s<f;s++)x+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(i?"":x),b}function p(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var h=n(8977);class f{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.Ze(e),null!=n){const e=n.length;r.vA(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.Ab(t,this.size),this.strides=(0,r.Ur)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.vA(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return m().makeTensor(this.values,this.shape,this.dtype)}}let m=null,g=null,y=null;function b(e){m=e}function v(e){g=e}function x(e){y=e}class w{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.Ze(e),this.strides=(0,r.Ur)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return g.buffer(this.shape,this.dtype,e)}bufferSync(){return g.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.yw)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.yw)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=m().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>h.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),m().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=m().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>h.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await m().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),m().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return g.print(this,e)}clone(){return this.throwIfDisposed(),g.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return c(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),g.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),m().makeVariable(this,e,t,n)}}function k(){return(0,a.m)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),k();class S extends w{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.r1(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));m().disposeTensor(this),this.dataId=e.dataId,m().incRef(this,null)}dispose(){m().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(S,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},8804:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(9494),r=n(8075),s=n(1426);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.Tu)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.vA)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.qY)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),u(e,t,n))}}},4148:(e,t,n)=>{"use strict";n.d(t,{MZ:()=>l,YT:()=>p,j1:()=>h});var a=n(2164),r=n(5399),s=n(9494),o=n(8075),i=n(8977),c=n(1426);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oj)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.Nw)(e))return[e.buffer.size/(null==t?4:(0,c.jv)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r._K)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.vA)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.vA)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.vA)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function p(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.tp)())return d(r,e.dtype,t,n),e;let o=(0,c.X$)(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),d(r,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const p="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],!0);return a.T2.makeTensor(p,u,o)}function h(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");return e.map(((e,r)=>p(e,"".concat(t,"[").concat(r,"]"),n,a)))}},8075:(e,t,n)=>{"use strict";var a,r,s,o,i;n.d(t,{Nw:()=>p,Oj:()=>d,Tu:()=>l,ch:()=>u,rg:()=>a}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function p(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},8977:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.r1,arraysEqualWithNull:()=>s.e_,assert:()=>s.vA,assertNonNegativeIntegerDimensions:()=>s.SA,assertNonNull:()=>s.HO,assertShapesMatch:()=>s.O3,bytesFromStringArray:()=>s.SL,bytesPerElement:()=>s.jv,checkConversionForErrors:()=>s.nd,clamp:()=>s.qE,computeStrides:()=>s.Ur,convertBackendValuesAndArrayBuffer:()=>s.o2,createScalarValue:()=>x,createShuffledIndices:()=>s.P8,decodeString:()=>N,distSquared:()=>s.oO,encodeString:()=>T,fetch:()=>S,fingerPrint64:()=>v,flatten:()=>C,getArrayFromDType:()=>s.Ab,getTypedArrayFromDType:()=>s.ce,hasEncodingLoss:()=>s.BE,hexToLong:()=>c,indexToLoc:()=>s._k,inferDtype:()=>s.X$,inferFromImplicitShape:()=>s.XT,isBoolean:()=>s.Lm,isFunction:()=>s.Tn,isInt:()=>s.E6,isNumber:()=>s.Et,isPromise:()=>s.yL,isScalarShape:()=>s.Sf,isString:()=>s.Kg,isTypedArray:()=>I,isValidDtype:()=>s.xn,locToIndex:()=>s.sX,makeOnesTypedArray:()=>s.FZ,makeZerosNestedTypedArray:()=>s.c7,makeZerosTypedArray:()=>s.Ty,nearestDivisor:()=>s.lK,nearestLargerEven:()=>s.eV,now:()=>k,parseAxisParam:()=>s.Y6,randUniform:()=>s.so,repeatedTry:()=>s._q,rightPad:()=>s.av,shuffle:()=>s.k4,shuffleCombo:()=>s.a0,sizeFromShape:()=>s.Ze,sizeToSquarishShape:()=>s.gS,squeezeShape:()=>s.gx,sum:()=>s.cz,swap:()=>s.wg,tanh:()=>s.ym,toNestedArray:()=>s.yw,toTypedArray:()=>w});var a=n(5399),r=n(5767),s=n(1426),o=n(7353);const i=n.n(o)()||o;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return h(e,t,8)}function m(e,t){return h(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=g(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(g(r,44)),[r.add(a),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return p(d.mul(n).xor(l.mul(a))).mul(d)}return d}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(s,30)).add(o),a.add(g(r.add(d),18)).add(s),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(s,30)).add(o),c=y(i,a.add(g(r.add(d),18)).add(s),n),l=f(e,16).mul(n),u=f(e,24),p=i.add(f(e,t-32)).mul(n),h=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(p,30)).add(h),l.add(g(u.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul(u).add(113),s=p(r.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let h=0;const v=64*(t-1>>6),x=v+(t-1&63)-63;do{a=g(a.add(r).add(o[0]).add(f(e,h+8)),37).mul(u),r=g(r.add(o[1]).add(f(e,h+48)),42).mul(u),a=a.xor(c[1]),r=r.add(o[0]).add(f(e,h+40)),s=g(s.add(c[0]),33).mul(u),o=b(e,h,o[1].mul(u),a.add(c[0])),c=b(e,h+32,s.add(c[1]),r.add(f(e,h+16))),[s,a]=[a,s],h+=64}while(h!==v);const w=u.add(s.and(255).shl(1));return h=x,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(r).add(o[0]).add(f(e,h+8)),37).mul(w),r=g(r.add(o[1]).add(f(e,h+48)),42).mul(w),a=a.xor(c[1].mul(9)),r=r.add(o[0].mul(9).add(f(e,h+40))),s=g(s.add(c[0]),33).mul(w),o=b(e,h,o[1].mul(w),a.add(c[0])),c=b(e,h+32,s.add(c[1]),r.add(f(e,h+16))),[s,a]=[a,s],y(y(o[0],c[0],w).add(p(r).mul(l)).add(s),y(o[1],c[1],w).add(a),w)}function x(e,t){return"string"===t?T(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,a._K)().getBool("DEBUG")&&s.nd(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function k(){return(0,a._K)().platform.now()}function S(e,t){return(0,a._K)().platform.fetch(e,t)}function T(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.encode(e,t)}function N(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a._K)().platform.decode(e,t)}function I(e){return null!=(0,a._K)().platform.isTypedArray?(0,a._K)().platform.isTypedArray(e):(0,r.Y)(e)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.yL(e)||null==e||I(e)&&n)t.push(e);else if(Array.isArray(e)||I(e))for(let a=0;a<e.length;++a)C(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)C(e[r],t,n)}return t}},1426:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function p(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function T(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function N(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>b(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:N(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function R(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function z(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function P(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function W(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function V(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=V(e+t*i,o,n,a)}return r}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return V(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function j(e,t){const n=H(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function Y(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function X(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Z(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{Ab:()=>E,BE:()=>_,E6:()=>b,Et:()=>z,FZ:()=>j,HO:()=>h,Kg:()=>O,Lm:()=>M,O3:()=>p,P8:()=>w,SA:()=>Y,SL:()=>D,Sf:()=>m,Tn:()=>P,Ty:()=>H,Ur:()=>W,X$:()=>L,XT:()=>T,Y6:()=>N,Ze:()=>f,_k:()=>X,_q:()=>S,a0:()=>r,av:()=>k,c7:()=>q,ce:()=>C,cz:()=>c,eV:()=>o,e_:()=>g,gS:()=>x,gx:()=>I,jv:()=>F,k4:()=>a,lK:()=>B,nd:()=>A,o2:()=>G,oO:()=>u,qE:()=>s,r1:()=>y,sX:()=>K,so:()=>l,vA:()=>d,wg:()=>i,xn:()=>R,yL:()=>Z,ym:()=>v,yw:()=>U})},7353:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%p|0,e/p|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),n);if(c<8){var p=i(l(n,c));s=s.mul(p).add(i(d))}else s=(s=s.mul(r)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},T.neg=T.negate,T.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=r+l)>>>16,u+=(p+=n+i)>>>16,u+=t+o,c((h&=65535)<<16|(f&=65535),(u&=65535)<<16|(p&=65535),this.unsigned)},T.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=o*p)>>>16,f+=(y+=r*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*h+r*p+s*u+o*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),p=i(n),h=p.mul(e);h.isNegative()||h.gt(r);)h=(p=i(n-=u,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),r=r.sub(h)}return s},T.div=T.divide,T.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},2730:(e,t,n)=>{"use strict";var a=n(5043),r=n(8853);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,p=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(h,e)&&(p.test(e)?f[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),T=Symbol.for("react.strict_mode"),N=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),A=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),_=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var z,L=Object.assign;function P(e){if(void 0===z)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var B=!1;function W(e,t){if(!e||B)return"";B=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{B=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?P(e):""}function V(e){switch(e.tag){case 5:return P(e.type);case 16:return P("Lazy");case 13:return P("Suspense");case 19:return P("SuspenseList");case 0:case 2:case 15:return e=W(e.type,!1);case 11:return e=W(e.type.render,!1);case 1:return e=W(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case N:return"Profiler";case T:return"StrictMode";case A:return"Suspense";case R:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case _:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===T?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function j(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function H(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=H(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=H(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Z(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=j(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Q(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Q(e,t);var n=j(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,j(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+j(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:j(n)}}function se(e,t){var n=j(t.value),a=j(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function pe(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var he={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||he.hasOwnProperty(e)&&he[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(he).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),he[t]=he[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Te=null;function Ne(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Ie(e){Se?Te?Te.push(e):Te=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Te;if(Te=Se=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Ee(e,t){return e(t)}function Ae(){}var Re=!1;function _e(e,t,n){if(Re)return e(t,n);Re=!0;try{return Ee(e,t,n)}finally{Re=!1,(null!==Se||null!==Te)&&(Ae(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var ze=!1,Le=null,Pe=!1,Be=null,We={onError:function(e){ze=!0,Le=e}};function Ve(e,t,n,a,r,s,o,i,c){ze=!1,Le=null,Me.apply(We,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function je(e){if(Ue(e)!==e)throw Error(s(188))}function He(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return je(r),e;if(o===a)return je(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Ye=r.unstable_scheduleCallback,Ke=r.unstable_cancelCallback,Xe=r.unstable_shouldYield,Ze=r.unstable_requestPaint,Qe=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return e>>>=0,0===e?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pt(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=dt(i):0!==(s&=o)&&(a=dt(s))}else 0!==(o=n&~r)?a=dt(o):0!==s&&(a=dt(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function ht(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Tt,Nt,It=!1,Ct=[],Et=null,At=null,Rt=null,_t=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":At=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":_t.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function zt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Lt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void Nt(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Pt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Bt(e,t,n){Pt(e)&&n.delete(t)}function Wt(){It=!1,null!==Et&&Pt(Et)&&(Et=null),null!==At&&Pt(At)&&(At=null),null!==Rt&&Pt(Rt)&&(Rt=null),_t.forEach(Bt),Ft.forEach(Bt)}function Vt(e,t){e.blockedOn===t&&(e.blockedOn=null,It||(It=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Wt)))}function Ut(e){function t(t){return Vt(t,e)}if(0<Ct.length){Vt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Vt(Et,e),null!==At&&Vt(At,e),null!==Rt&&Vt(Rt,e),_t.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Lt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,jt=!0;function Ht(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Yt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function qt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Yt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Yt(e,t,n,a){if(jt){var r=Xt(e,t,n,a);if(null===r)ja(e,t,a,Kt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=zt(Et,e,t,n,a,r),!0;case"dragenter":return At=zt(At,e,t,n,a,r),!0;case"mouseover":return Rt=zt(Rt,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return _t.set(s,zt(_t.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,zt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Xt(e,t,n,a))&&ja(e,t,a,Kt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else ja(e,t,a,null,n)}}var Kt=null;function Xt(e,t,n,a){if(Kt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Zt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Qt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Qt?Qt.value:Qt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),dn=L({},ln,{view:0,detail:0}),pn=rn(dn),hn=L({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(hn),mn=rn(L({},hn,{dataTransfer:0})),gn=rn(L({},dn,{relatedTarget:0})),yn=rn(L({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(L({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Nn(){return Tn}var In=L({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(In),En=rn(L({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),An=rn(L({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nn})),Rn=rn(L({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),_n=L({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(_n),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var zn=u&&"TextEvent"in window&&!Mn,Ln=u&&(!On||Mn&&8<Mn&&11>=Mn),Pn=String.fromCharCode(32),Bn=!1;function Wn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Vn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function jn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Hn(e,t,n,a){Ie(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Yn=null;function Kn(e){Pa(e,0)}function Xn(e){if(Y(xr(e)))return e}function Zn(e,t){if("change"===e)return t}var Qn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Qn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Yn=qn=null)}function na(e){if("value"===e.propertyName&&Xn(Yn)){var t=[];Hn(t,Yn,e,we(e)),_e(Kn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Yn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(Yn)}function sa(e,t){if("click"===e)return Xn(t)}function oa(e,t){if("input"===e||"change"===e)return Xn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function pa(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function ha(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=pa(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&ha(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==K(a)||("selectionStart"in(a=ga)&&ha(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Ta={};function Na(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ta)return Sa[e]=n[t];return e}u&&(Ta=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ia=Na("animationend"),Ca=Na("animationiteration"),Ea=Na("animationstart"),Aa=Na("transitionend"),Ra=new Map,_a="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Ra.set(e,t),c(t,[e])}for(var Da=0;Da<_a.length;Da++){var Oa=_a[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ia,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(Aa,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),za=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(Ve.apply(this,arguments),ze){if(!ze)throw Error(s(198));var u=Le;ze=!1,Le=null,Pe||(Pe=!0,Be=u)}}(a,t,void 0,e),e.currentTarget=null}function Pa(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;La(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;La(r,i,l),s=c}}}if(Pe)throw e=Be,Pe=!1,Be=null,e}function Ba(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Wa(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Va="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Va]){e[Va]=!0,o.forEach((function(t){"selectionchange"!==t&&(za.has(t)||Wa(t,!1,e),Wa(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Va]||(t[Va]=!0,Wa("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Zt(t)){case 1:var r=Ht;break;case 4:r=qt;break;default:r=Yt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function ja(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}_e((function(){var a=s,r=we(n),o=[];e:{var i=Ra.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=An;break;case Ia:case Ca:case Ea:c=yn;break;case Aa:c=Rn;break;case"scroll":c=pn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),d=!u&&"scroll"===e,p=u?null!==i?i+"Capture":null:i;u=[];for(var h,f=a;null!==f;){var m=(h=f).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==p&&(null!=(m=Fe(f,p))&&u.push(Ha(f,m,h)))),d)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(d=Ue(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",p="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",p="onPointerEnter",f="pointer"),d=null==c?i:xr(c),h=null==l?i:xr(l),(i=new u(m,f+"leave",c,n,r)).target=d,i.relatedTarget=h,m=null,br(r)===a&&((u=new u(p,f+"enter",l,n,r)).target=h,u.relatedTarget=d,m=u),d=m,c&&l)e:{for(p=l,f=0,h=u=c;h;h=Ya(h))f++;for(h=0,m=p;m;m=Ya(m))h++;for(;0<f-h;)u=Ya(u),f--;for(;0<h-f;)p=Ya(p),h--;for(;f--;){if(u===p||null!==p&&u===p.alternate)break e;u=Ya(u),p=Ya(p)}u=null}else u=null;null!==c&&Ka(o,i,c,u,!1),null!==l&&null!==d&&Ka(o,d,l,u,!0)}if("select"===(c=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Zn;else if(jn(i))if(Qn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?Hn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(jn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Wn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=en()):(Jt="value"in(Qt=r)?Qt.value:Qt.textContent,Un=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Vn(n))&&(v.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return Vn(t);case"keypress":return 32!==t.which?null:(Bn=!0,Pn);case"textInput":return(e=t.data)===Pn&&Bn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Wn(e,t)?(e=en(),$t=Jt=Qt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Pa(o,t)}))}function Ha(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(Ha(e,s,r)),null!=(s=Fe(e,t))&&a.push(Ha(e,s,r))),e=e.return}return a}function Ya(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(Ha(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(Ha(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Xa=/\r\n?/g,Za=/\u0000|\uFFFD/g;function Qa(e){return("string"===typeof e?e:""+e).replace(Xa,"\n").replace(Za,"")}function Ja(e,t,n){if(t=Qa(t),Qa(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),pr="__reactFiber$"+dr,hr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[pr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[pr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[pr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[pr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[hr]||null}var kr=[],Sr=-1;function Tr(e){return{current:e}}function Nr(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Ir(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Tr(Cr),Ar=Tr(!1),Rr=Cr;function _r(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Nr(Ar),Nr(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Ir(Er,t),Ir(Ar,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return L({},n,a)}function zr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Rr=Er.current,Ir(Er,e),Ir(Ar,Ar.current),!0}function Lr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Mr(e,t,Rr),a.__reactInternalMemoizedMergedChildContext=e,Nr(Ar),Nr(Er),Ir(Er,e)):Nr(Ar),Ir(Ar,n)}var Pr=null,Br=!1,Wr=!1;function Vr(e){null===Pr?Pr=[e]:Pr.push(e)}function Ur(){if(!Wr&&null!==Pr){Wr=!0;var e=0,t=vt;try{var n=Pr;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Pr=null,Br=!1}catch(r){throw null!==Pr&&(Pr=Pr.slice(e+1)),Ye($e,Ur),r}finally{vt=t,Wr=!1}}return null}var Gr=[],jr=0,Hr=null,qr=0,Yr=[],Kr=0,Xr=null,Zr=1,Qr="";function Jr(e,t){Gr[jr++]=qr,Gr[jr++]=Hr,Hr=e,qr=t}function $r(e,t,n){Yr[Kr++]=Zr,Yr[Kr++]=Qr,Yr[Kr++]=Xr,Xr=e;var a=Zr;e=Qr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Zr=1<<32-ot(t)+r|n<<r|a,Qr=s+e}else Zr=1<<s|n<<r|a,Qr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===Hr;)Hr=Gr[--jr],Gr[jr]=null,qr=Gr[--jr],Gr[jr]=null;for(;e===Xr;)Xr=Yr[--Kr],Yr[Kr]=null,Qr=Yr[--Kr],Yr[Kr]=null,Zr=Yr[--Kr],Yr[Kr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=_l(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xr?{id:Zr,overflow:Qr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=_l(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ds(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw ps(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function ps(){for(var e=as;e;)e=lr(e.nextSibling)}function hs(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function ys(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bs(e){return(0,e._init)(e._payload)}function vs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Ll(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&bs(s)===t.type)?((a=r(t,n.props)).ref=gs(e,t,n),a.return=e,a):((a=Ol(n.type,n.key,n.props,null,e.mode,a)).ref=gs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Pl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,s){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function p(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Ll(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ol(t.type,t.key,t.props,null,e.mode,n)).ref=gs(e,null,t),n.return=e,n;case k:return(t=Pl(t,e.mode,n)).return=e,t;case F:return p(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;ys(e,t)}return null}function h(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return h(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);ys(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);ys(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,d=s,m=s=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=h(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,d=g}if(m===i.length)return n(r,d),rs&&Jr(r,m),l;if(null===d){for(;m<i.length;m++)null!==(d=p(r,i[m],c))&&(s=o(d,s,m),null===u?l=d:u.sibling=d,u=d);return rs&&Jr(r,m),l}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var d=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=h(r,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=p(r,b.value,l))&&(i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&bs(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=gs(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ml(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ol(o.type,o.key,o.props,null,a.mode,c)).ref=gs(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Pl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);ys(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=Ll(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var xs=vs(!0),ws=vs(!1),ks=Tr(null),Ss=null,Ts=null,Ns=null;function Is(){Ns=Ts=Ss=null}function Cs(e){var t=ks.current;Nr(ks),e._currentValue=t}function Es(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function As(e,t){Ss=e,Ns=Ts=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(vi=!0),e.firstContext=null)}function Rs(e){var t=e._currentValue;if(Ns!==e)if(e={context:e,memoizedValue:t,next:null},null===Ts){if(null===Ss)throw Error(s(308));Ts=e,Ss.dependencies={lanes:0,firstContext:e}}else Ts=Ts.next=e;return t}var _s=null;function Fs(e){null===_s?_s=[e]:_s.push(e)}function Ds(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Fs(t)):(n.next=r.next,r.next=n),t.interleaved=n,Os(e,a)}function Os(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Ms=!1;function zs(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ls(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ps(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Bs(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ec)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,Os(e,n)}return null===(r=a.interleaved)?(t.next=t,Fs(a)):(t.next=r.next,r.next=t),a.interleaved=t,Os(e,n)}function Ws(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function Vs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Us(e,t,n,a){var r=e.updateQueue;Ms=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var d=r.baseState;for(o=0,u=l=c=null,i=s;;){var p=i.lane,h=i.eventTime;if((a&p)===p){null!==u&&(u=u.next={eventTime:h,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(p=t,h=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(h,d,p);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(p="function"===typeof(f=m.payload)?f.call(h,d,p):f)||void 0===p)break e;d=L({},d,p);break e;case 2:Ms=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(p=r.effects)?r.effects=[i]:p.push(i))}else h={eventTime:h,lane:p,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=h,c=d):u=u.next=h,o|=p;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(p=i).next,p.next=null,r.lastBaseUpdate=p,r.shared.pending=null}}if(null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);zc|=o,e.lanes=o,e.memoizedState=d}}function Gs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var js={},Hs=Tr(js),qs=Tr(js),Ys=Tr(js);function Ks(e){if(e===js)throw Error(s(174));return e}function Xs(e,t){switch(Ir(Ys,t),Ir(qs,e),Ir(Hs,js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Nr(Hs),Ir(Hs,t)}function Zs(){Nr(Hs),Nr(qs),Nr(Ys)}function Qs(e){Ks(Ys.current);var t=Ks(Hs.current),n=ce(t,e.type);t!==n&&(Ir(qs,e),Ir(Hs,n))}function Js(e){qs.current===e&&(Nr(Hs),Nr(qs))}var $s=Tr(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ao=x.ReactCurrentDispatcher,ro=x.ReactCurrentBatchConfig,so=0,oo=null,io=null,co=null,lo=!1,uo=!1,po=0,ho=0;function fo(){throw Error(s(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function go(e,t,n,a,r,o){if(so=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ao.current=null===e||null===e.memoizedState?$o:ei,e=n(a,r),uo){o=0;do{if(uo=!1,po=0,25<=o)throw Error(s(301));o+=1,co=io=null,t.updateQueue=null,ao.current=ti,e=n(a,r)}while(uo)}if(ao.current=Jo,t=null!==io&&null!==io.next,so=0,co=io=oo=null,lo=!1,t)throw Error(s(300));return e}function yo(){var e=0!==po;return po=0,e}function bo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===co?oo.memoizedState=co=e:co=co.next=e,co}function vo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===co?oo.memoizedState:co.next;if(null!==t)co=t,io=e;else{if(null===e)throw Error(s(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===co?oo.memoizedState=co=e:co=co.next=e}return co}function xo(e,t){return"function"===typeof t?t(e):t}function wo(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=io,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var d=u.lane;if((so&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var p={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=p,i=a):l=l.next=p,oo.lanes|=d,zc|=d}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(vi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,oo.lanes|=o,zc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function ko(e){var t=vo(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(vi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function So(){}function To(e,t){var n=oo,a=vo(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,vi=!0),a=a.queue,zo(Co.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==co&&1&co.memoizedState.tag){if(n.flags|=2048,_o(9,Io.bind(null,n,a,r,t),void 0,null),null===Ac)throw Error(s(349));0!==(30&so)||No(n,t,r)}return r}function No(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Io(e,t,n,a){t.value=n,t.getSnapshot=a,Eo(t)&&Ao(e)}function Co(e,t,n){return n((function(){Eo(t)&&Ao(e)}))}function Eo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Ao(e){var t=Os(e,1);null!==t&&nl(t,e,1,-1)}function Ro(e){var t=bo();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:xo,lastRenderedState:e},t.queue=e,e=e.dispatch=Ko.bind(null,oo,e),[t.memoizedState,e]}function _o(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Fo(){return vo().memoizedState}function Do(e,t,n,a){var r=bo();oo.flags|=e,r.memoizedState=_o(1|t,n,void 0,void 0===a?null:a)}function Oo(e,t,n,a){var r=vo();a=void 0===a?null:a;var s=void 0;if(null!==io){var o=io.memoizedState;if(s=o.destroy,null!==a&&mo(a,o.deps))return void(r.memoizedState=_o(t,n,s,a))}oo.flags|=e,r.memoizedState=_o(1|t,n,s,a)}function Mo(e,t){return Do(8390656,8,e,t)}function zo(e,t){return Oo(2048,8,e,t)}function Lo(e,t){return Oo(4,2,e,t)}function Po(e,t){return Oo(4,4,e,t)}function Bo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Wo(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Oo(4,4,Bo.bind(null,t,e),n)}function Vo(){}function Uo(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Go(e,t){var n=vo();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&mo(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function jo(e,t,n){return 0===(21&so)?(e.baseState&&(e.baseState=!1,vi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),oo.lanes|=n,zc|=n,e.baseState=!0),t)}function Ho(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=ro.transition;ro.transition={};try{e(!1),t()}finally{vt=n,ro.transition=a}}function qo(){return vo().memoizedState}function Yo(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},Xo(e))Zo(t,n);else if(null!==(n=Ds(e,t,n,a))){nl(n,e,a,el()),Qo(n,t,a)}}function Ko(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(Xo(e))Zo(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Fs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Ds(e,t,r,a))&&(nl(n,e,a,r=el()),Qo(n,t,a))}}function Xo(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Zo(e,t){uo=lo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Qo(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var Jo={readContext:Rs,useCallback:fo,useContext:fo,useEffect:fo,useImperativeHandle:fo,useInsertionEffect:fo,useLayoutEffect:fo,useMemo:fo,useReducer:fo,useRef:fo,useState:fo,useDebugValue:fo,useDeferredValue:fo,useTransition:fo,useMutableSource:fo,useSyncExternalStore:fo,useId:fo,unstable_isNewReconciler:!1},$o={readContext:Rs,useCallback:function(e,t){return bo().memoizedState=[e,void 0===t?null:t],e},useContext:Rs,useEffect:Mo,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Do(4194308,4,Bo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Do(4194308,4,e,t)},useInsertionEffect:function(e,t){return Do(4,2,e,t)},useMemo:function(e,t){var n=bo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=bo();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=Yo.bind(null,oo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},bo().memoizedState=e},useState:Ro,useDebugValue:Vo,useDeferredValue:function(e){return bo().memoizedState=e},useTransition:function(){var e=Ro(!1),t=e[0];return e=Ho.bind(null,e[1]),bo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=oo,r=bo();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===Ac)throw Error(s(349));0!==(30&so)||No(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Mo(Co.bind(null,a,o,e),[e]),a.flags|=2048,_o(9,Io.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=bo(),t=Ac.identifierPrefix;if(rs){var n=Qr;t=":"+t+"R"+(n=(Zr&~(1<<32-ot(Zr)-1)).toString(32)+n),0<(n=po++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ho++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:Rs,useCallback:Uo,useContext:Rs,useEffect:zo,useImperativeHandle:Wo,useInsertionEffect:Lo,useLayoutEffect:Po,useMemo:Go,useReducer:wo,useRef:Fo,useState:function(){return wo(xo)},useDebugValue:Vo,useDeferredValue:function(e){return jo(vo(),io.memoizedState,e)},useTransition:function(){return[wo(xo)[0],vo().memoizedState]},useMutableSource:So,useSyncExternalStore:To,useId:qo,unstable_isNewReconciler:!1},ti={readContext:Rs,useCallback:Uo,useContext:Rs,useEffect:zo,useImperativeHandle:Wo,useInsertionEffect:Lo,useLayoutEffect:Po,useMemo:Go,useReducer:ko,useRef:Fo,useState:function(){return ko(xo)},useDebugValue:Vo,useDeferredValue:function(e){var t=vo();return null===io?t.memoizedState=e:jo(t,io.memoizedState,e)},useTransition:function(){return[ko(xo)[0],vo().memoizedState]},useMutableSource:So,useSyncExternalStore:To,useId:qo,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ai(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ri={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ps(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Bs(e,s,r))&&(nl(t,e,r,a),Ws(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Ps(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Bs(e,r,a))&&(nl(t,e,a,n),Ws(t,e,a))}};function si(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function oi(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=Rs(s):(r=Fr(t)?Rr:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?_r(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ri,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function ii(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ci(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs={},zs(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Rs(s):(s=Fr(t)?Rr:Er.current,r.context=_r(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(ai(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&ri.enqueueReplaceState(r,r.state,null),Us(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function li(e,t){try{var n="",a=t;do{n+=V(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function ui(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function hi(e,t,n){(n=Ps(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){jc||(jc=!0,Hc=a),di(0,t)},n}function fi(e,t,n){(n=Ps(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){di(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){di(0,t),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new pi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Nl.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ps(-1,1)).tag=2,Bs(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var bi=x.ReactCurrentOwner,vi=!1;function xi(e,t,n,a){t.child=null===e?ws(t,null,n,a):xs(t,e.child,n,a)}function wi(e,t,n,a,r){n=n.render;var s=t.ref;return As(t,r),a=go(e,t,n,a,s,r),n=yo(),null===e||vi?(rs&&n&&es(t),t.flags|=1,xi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ji(e,t,r))}function ki(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Fl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ol(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Si(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return ji(e,t,r)}return t.flags|=1,(e=Dl(s,a)).ref=t.ref,e.return=t,t.child=e}function Si(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(vi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,ji(e,t,r);0!==(131072&e.flags)&&(vi=!0)}}return Ii(e,t,n,a,r)}function Ti(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ir(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ir(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Ir(Dc,Fc),Fc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Ir(Dc,Fc),Fc|=a;return xi(e,t,r,n),t.child}function Ni(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ii(e,t,n,a,r){var s=Fr(n)?Rr:Er.current;return s=_r(t,s),As(t,r),n=go(e,t,n,a,s,r),a=yo(),null===e||vi?(rs&&a&&es(t),t.flags|=1,xi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,ji(e,t,r))}function Ci(e,t,n,a,r){if(Fr(n)){var s=!0;zr(t)}else s=!1;if(As(t,r),null===t.stateNode)Gi(e,t),oi(t,n,a),ci(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Rs(l):l=_r(t,l=Fr(n)?Rr:Er.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&ii(t,o,a,l),Ms=!1;var p=t.memoizedState;o.state=p,Us(t,a,o,r),c=t.memoizedState,i!==a||p!==c||Ar.current||Ms?("function"===typeof u&&(ai(t,n,u,a),c=t.memoizedState),(i=Ms||si(t,n,i,a,p,c,l))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Ls(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:ni(t.type,i),o.props=l,d=t.pendingProps,p=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Rs(c):c=_r(t,c=Fr(n)?Rr:Er.current);var h=n.getDerivedStateFromProps;(u="function"===typeof h||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==d||p!==c)&&ii(t,o,a,c),Ms=!1,p=t.memoizedState,o.state=p,Us(t,a,o,r);var f=t.memoizedState;i!==d||p!==f||Ar.current||Ms?("function"===typeof h&&(ai(t,n,h,a),f=t.memoizedState),(l=Ms||si(t,n,l,a,p,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),a=!1)}return Ei(e,t,n,a,s,r)}function Ei(e,t,n,a,r,s){Ni(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&Lr(t,n,!1),ji(e,t,s);a=t.stateNode,bi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=xs(t,e.child,null,s),t.child=xs(t,null,i,s)):xi(e,t,i,s),t.memoizedState=a.state,r&&Lr(t,n,!0),t.child}function Ai(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),Xs(e,t.containerInfo)}function Ri(e,t,n,a,r){return hs(),fs(r),t.flags|=256,xi(e,t,n,a),t.child}var _i,Fi,Di,Oi,Mi={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Li(e,t,n){var a,r=t.pendingProps,o=$s.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Ir($s,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Mi,e):Pi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,a=ui(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(o=Ml(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&xs(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Mi,o);if(0===(1&t.mode))return Bi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Bi(e,t,i,a=ui(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),vi||c){if(null!==(a=Ac)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,Os(e,r),nl(a,e,r,-1))}return ml(),Bi(e,t,i,a=ui(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Cl.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Yr[Kr++]=Zr,Yr[Kr++]=Qr,Yr[Kr++]=Xr,Zr=e.id,Qr=e.overflow,Xr=t),t=Pi(t,a.children),t.flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Dl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Dl(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Dl(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Pi(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,a){return null!==a&&fs(a),xs(t,e.child,null,n),(e=Pi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Es(e.return,t,n)}function Vi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(xi(e,t,a.children,n),0!==(2&(a=$s.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Ir($s,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Vi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===eo(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Vi(t,!0,n,null,s);break;case"together":Vi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function ji(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Hi(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Yi(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),qi(t),null;case 3:return a=t.stateNode,Zs(),Nr(Ar),Nr(Er),no(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(ol(ss),ss=null))),Fi(e,t),qi(t),null;case 5:Js(t);var r=Ks(Ys.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,a,r),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=Ks(Hs.current),ds(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[pr]=t,a[hr]=o,e=0!==(1&t.mode),n){case"dialog":Ba("cancel",a),Ba("close",a);break;case"iframe":case"object":case"embed":Ba("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],a);break;case"source":Ba("error",a);break;case"img":case"image":case"link":Ba("error",a),Ba("load",a);break;case"details":Ba("toggle",a);break;case"input":Z(a,o),Ba("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Ba("invalid",a);break;case"textarea":re(a,o),Ba("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Ba("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[pr]=t,e[hr]=a,_i(e,t,!1,!1),t.stateNode=e;e:{switch(c=ve(n,a),n){case"dialog":Ba("cancel",e),Ba("close",e),r=a;break;case"iframe":case"object":case"embed":Ba("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Ba(Ma[r],e);r=a;break;case"source":Ba("error",e),r=a;break;case"img":case"image":case"link":Ba("error",e),Ba("load",e),r=a;break;case"details":Ba("toggle",e),r=a;break;case"input":Z(e,a),r=X(e,a),Ba("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=L({},a,{value:void 0}),Ba("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Ba("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&pe(e,u):"number"===typeof u&&pe(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Ba("scroll",e):null!=u&&v(e,o,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+j(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(e,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=Ks(Ys.current),Ks(Hs.current),ds(t)){if(a=t.stateNode,n=t.memoizedProps,a[pr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[pr]=t,t.stateNode=a}return qi(t),null;case 13:if(Nr($s),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))ps(),hs(),t.flags|=98560,o=!1;else if(o=ds(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[pr]=t}else hs(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(ol(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&$s.current)?0===Oc&&(Oc=3):ml())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return Zs(),Fi(e,t),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return Cs(t.type._context),qi(t),null;case 19:if(Nr($s),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)Hi(o,!1);else{if(0!==Oc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=eo(e))){for(t.flags|=128,Hi(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ir($s,1&$s.current|2),t.child}e=e.sibling}null!==o.tail&&Qe()>Uc&&(t.flags|=128,a=!0,Hi(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=eo(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Hi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return qi(t),null}else 2*Qe()-o.renderingStartTime>Uc&&1073741824!==n&&(t.flags|=128,a=!0,Hi(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Qe(),t.sibling=null,n=$s.current,Ir($s,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return dl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Ki(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Zs(),Nr(Ar),Nr(Er),no(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Js(t),null;case 13:if(Nr($s),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));hs()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Nr($s),null;case 4:return Zs(),null;case 10:return Cs(t.type._context),null;case 22:case 23:return dl(),null;default:return null}}_i=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Fi=function(){},Di=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,Ks(Hs.current);var s,o=null;switch(n){case"input":r=X(e,r),a=X(e,a),o=[];break;case"select":r=L({},r,{value:void 0}),a=L({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Ba("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Xi=!1,Zi=!1,Qi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Tl(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Tl(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&ec(t,n,s)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sc(e){var t=e.alternate;null!==t&&(e.alternate=null,sc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[pr],delete t[hr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,dc=!1;function pc(e,t,n){for(n=n.child;null!==n;)hc(e,t,n),n=n.sibling}function hc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Zi||$i(n,t);case 6:var a=uc,r=dc;uc=null,pc(e,t,n),dc=r,null!==(uc=a)&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Ut(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=dc,uc=n.stateNode.containerInfo,dc=!0,pc(e,t,n),uc=a,dc=r;break;case 0:case 11:case 14:case 15:if(!Zi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&ec(n,t,o),r=r.next}while(r!==a)}pc(e,t,n);break;case 1:if(!Zi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Tl(n,t,i)}pc(e,t,n);break;case 21:pc(e,t,n);break;case 22:1&n.mode?(Zi=(a=Zi)||null!==n.memoizedState,pc(e,t,n),Zi=a):pc(e,t,n);break;default:pc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Qi),t.forEach((function(t){var a=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,dc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,dc=!0;break e}c=c.return}if(null===uc)throw Error(s(160));hc(o,i,r),uc=null,dc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Tl(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Tl(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Tl(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{pe(r,"")}catch(g){Tl(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&Q(r,o),ve(c,i);var u=ve(c,o);for(i=0;i<l.length;i+=2){var d=l[i],p=l[i+1];"style"===d?ge(r,p):"dangerouslySetInnerHTML"===d?de(r,p):"children"===d?pe(r,p):v(r,d,p,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var h=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):h!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[hr]=o}catch(g){Tl(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Tl(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Tl(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Vc=Qe())),4&a&&fc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Zi=(u=Zi)||d,mc(t,e),Zi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for(Ji=e,d=e.child;null!==d;){for(p=Ji=d;null!==Ji;){switch(f=(h=Ji).child,h.tag){case 0:case 11:case 14:case 15:nc(4,h,h.return);break;case 1:$i(h,h.return);var m=h.stateNode;if("function"===typeof m.componentWillUnmount){a=h,n=h.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Tl(a,n,g)}}break;case 5:$i(h,h.return);break;case 22:if(null!==h.memoizedState){wc(p);continue}}null!==f?(f.return=h,Ji=f):wc(p)}d=d.sibling}e:for(d=null,p=e;;){if(5===p.tag){if(null===d){d=p;try{r=p.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=p.stateNode,i=void 0!==(l=p.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Tl(e,e.return,g)}}}else if(6===p.tag){if(null===d)try{p.stateNode.nodeValue=u?"":p.memoizedProps}catch(g){Tl(e,e.return,g)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break e;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;d===p&&(d=null),p=p.return}d===p&&(d=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(oc(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(pe(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;cc(e,ic(e),o);break;default:throw Error(s(161))}}catch(i){Tl(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,vc(e,t,n)}function vc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Xi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Zi;i=Xi;var l=Zi;if(Xi=o,(Zi=c)&&!l)for(Ji=r;null!==Ji;)c=(o=Ji).child,22===o.tag&&null!==o.memoizedState?kc(r):null!==c?(c.return=o,Ji=c):kc(r);for(;null!==s;)Ji=s,vc(s,t,n),s=s.sibling;Ji=r,Xi=i,Zi=l}xc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):xc(e)}}function xc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Zi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Zi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Gs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gs(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var p=d.dehydrated;null!==p&&Ut(p)}}}break;default:throw Error(s(163))}Zi||512&t.flags&&rc(t)}catch(h){Tl(t,t.return,h)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Tl(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Tl(t,r,c)}}var s=t.return;try{rc(t)}catch(c){Tl(t,s,c)}break;case 5:var o=t.return;try{rc(t)}catch(c){Tl(t,o,c)}}}catch(c){Tl(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Tc=Math.ceil,Nc=x.ReactCurrentDispatcher,Ic=x.ReactCurrentOwner,Cc=x.ReactCurrentBatchConfig,Ec=0,Ac=null,Rc=null,_c=0,Fc=0,Dc=Tr(0),Oc=0,Mc=null,zc=0,Lc=0,Pc=0,Bc=null,Wc=null,Vc=0,Uc=1/0,Gc=null,jc=!1,Hc=null,qc=null,Yc=!1,Kc=null,Xc=0,Zc=0,Qc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ec)?Qe():-1!==Jc?Jc:Jc=Qe()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ec)&&0!==_c?_c&-_c:null!==ms.transition?(0===$c&&($c=mt()),$c):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Zt(e.type)}function nl(e,t,n,a){if(50<Zc)throw Zc=0,Qc=null,Error(s(185));yt(e,n,a),0!==(2&Ec)&&e===Ac||(e===Ac&&(0===(2&Ec)&&(Lc|=n),4===Oc&&il(e,_c)),al(e,a),1===n&&0===Ec&&0===(1&t.mode)&&(Uc=Qe()+500,Br&&Ur()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=ht(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=pt(e,e===Ac?_c:0);if(0===a)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Br=!0,Vr(e)}(cl.bind(null,e)):Vr(cl.bind(null,e)),or((function(){0===(6&Ec)&&Ur()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=Al(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ec))throw Error(s(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=pt(e,e===Ac?_c:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ec;Ec|=2;var o=fl();for(Ac===e&&_c===t||(Gc=null,Uc=Qe()+500,pl(e,t));;)try{bl();break}catch(c){hl(e,c)}Is(),Nc.current=o,Ec=r,null!==Rc?t=0:(Ac=null,_c=0,t=Oc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sl(e,r))),1===t)throw n=Mc,pl(e,0),il(e,a),al(e,Qe()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(o=ft(e))&&(a=o,t=sl(e,o))),1===t))throw n=Mc,pl(e,0),il(e,a),al(e,Qe()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wl(e,Wc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Vc+500-Qe())){if(0!==pt(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),t);break}wl(e,Wc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Qe()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Tc(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Wc,Gc),a);break}wl(e,Wc,Gc);break;default:throw Error(s(329))}}}return al(e,Qe()),e.callbackNode===n?rl.bind(null,e):null}function sl(e,t){var n=Bc;return e.current.memoizedState.isDehydrated&&(pl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Wc,Wc=n,null!==t&&ol(t)),e}function ol(e){null===Wc?Wc=e:Wc.push.apply(Wc,e)}function il(e,t){for(t&=~Pc,t&=~Lc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ec))throw Error(s(327));kl();var t=pt(e,0);if(0===(1&t))return al(e,Qe()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sl(e,a))}if(1===n)throw n=Mc,pl(e,0),il(e,t),al(e,Qe()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Wc,Gc),al(e,Qe()),null}function ll(e,t){var n=Ec;Ec|=1;try{return e(t)}finally{0===(Ec=n)&&(Uc=Qe()+500,Br&&Ur())}}function ul(e){null!==Kc&&0===Kc.tag&&0===(6&Ec)&&kl();var t=Ec;Ec|=1;var n=Cc.transition,a=vt;try{if(Cc.transition=null,vt=1,e)return e()}finally{vt=a,Cc.transition=n,0===(6&(Ec=t))&&Ur()}}function dl(){Fc=Dc.current,Nr(Dc)}function pl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Rc)for(n=Rc.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:Zs(),Nr(Ar),Nr(Er),no();break;case 5:Js(a);break;case 4:Zs();break;case 13:case 19:Nr($s);break;case 10:Cs(a.type._context);break;case 22:case 23:dl()}n=n.return}if(Ac=e,Rc=e=Dl(e.current,null),_c=Fc=t,Oc=0,Mc=null,Pc=Lc=zc=0,Wc=Bc=null,null!==_s){for(t=0;t<_s.length;t++)if(null!==(a=(n=_s[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}_s=null}return e}function hl(e,t){for(;;){var n=Rc;try{if(Is(),ao.current=Jo,lo){for(var a=oo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}lo=!1}if(so=0,co=io=oo=null,uo=!1,po=0,Ic.current=null,null===n||null===n.return){Oc=1,Mc=t,Rc=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=_c,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,d=c,p=d.tag;if(0===(1&d.mode)&&(0===p||11===p||15===p)){var h=d.alternate;h?(d.updateQueue=h.updateQueue,d.memoizedState=h.memoizedState,d.lanes=h.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=gi(i);if(null!==f){f.flags&=-257,yi(f,i,c,0,t),1&f.mode&&mi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){mi(o,u,t),ml();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=gi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),yi(y,i,c,0,t),fs(li(l,c));break e}}o=l=li(l,c),4!==Oc&&(Oc=2),null===Bc?Bc=[o]:Bc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,hi(0,l,t));break e;case 1:c=l;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===qc||!qc.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,Vs(o,fi(o,c,t));break e}}o=o.return}while(null!==o)}xl(n)}catch(x){t=x,Rc===n&&null!==n&&(Rc=n=n.return);continue}break}}function fl(){var e=Nc.current;return Nc.current=Jo,null===e?Jo:e}function ml(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===Ac||0===(268435455&zc)&&0===(268435455&Lc)||il(Ac,_c)}function gl(e,t){var n=Ec;Ec|=2;var a=fl();for(Ac===e&&_c===t||(Gc=null,pl(e,t));;)try{yl();break}catch(r){hl(e,r)}if(Is(),Ec=n,Nc.current=a,null!==Rc)throw Error(s(261));return Ac=null,_c=0,Oc}function yl(){for(;null!==Rc;)vl(Rc)}function bl(){for(;null!==Rc&&!Xe();)vl(Rc)}function vl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?xl(e):Rc=t,Ic.current=null}function xl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Yi(n,t,Fc)))return void(Rc=n)}else{if(null!==(n=Ki(n,t)))return n.flags&=32767,void(Rc=n);if(null===e)return Oc=6,void(Rc=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Rc=t);Rc=t=e}while(null!==t);0===Oc&&(Oc=5)}function wl(e,t,n){var a=vt,r=Cc.transition;try{Cc.transition=null,vt=1,function(e,t,n,a){do{kl()}while(null!==Kc);if(0!==(6&Ec))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===Ac&&(Rc=Ac=null,_c=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Yc||(Yc=!0,Al(tt,(function(){return kl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Cc.transition,Cc.transition=null;var i=vt;vt=1;var c=Ec;Ec|=4,Ic.current=null,function(e,t){if(er=jt,ha(e=pa())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,p=e,h=null;t:for(;;){for(var f;p!==n||0!==r&&3!==p.nodeType||(c=i+r),p!==o||0!==a&&3!==p.nodeType||(l=i+a),3===p.nodeType&&(i+=p.nodeValue.length),null!==(f=p.firstChild);)h=p,p=f;for(;;){if(p===e)break t;if(h===n&&++u===r&&(c=i),h===o&&++d===a&&(l=i),null!==(f=p.nextSibling))break;h=(p=h).parentNode}p=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},jt=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Tl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),jt=!!er,tr=er=null,e.current=n,bc(n,e,r),Ze(),Ec=c,vt=i,Cc.transition=o}else e.current=n;if(Yc&&(Yc=!1,Kc=e,Xc=r),o=e.pendingLanes,0===o&&(qc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Qe()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(jc)throw jc=!1,e=Hc,Hc=null,e;0!==(1&Xc)&&0!==e.tag&&kl(),o=e.pendingLanes,0!==(1&o)?e===Qc?Zc++:(Zc=0,Qc=e):Zc=0,Ur()}(e,t,n,a)}finally{Cc.transition=r,vt=a}return null}function kl(){if(null!==Kc){var e=xt(Xc),t=Cc.transition,n=vt;try{if(Cc.transition=null,vt=16>e?16:e,null===Kc)var a=!1;else{if(e=Kc,Kc=null,Xc=0,0!==(6&Ec))throw Error(s(331));var r=Ec;for(Ec|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var d=Ji;switch(d.tag){case 0:case 11:case 15:nc(8,d,o)}var p=d.child;if(null!==p)p.return=d,Ji=p;else for(;null!==Ji;){var h=(d=Ji).sibling,f=d.return;if(sc(d),d===u){Ji=null;break}if(null!==h){h.return=f,Ji=h;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nc(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var v=e.current;for(Ji=v;null!==Ji;){var x=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Ji=x;else e:for(i=v;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Tl(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ec=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Cc.transition=t}}return!1}function Sl(e,t,n){e=Bs(e,t=hi(0,t=li(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Tl(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){t=Bs(t,e=fi(t,e=li(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Nl(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,Ac===e&&(_c&n)===n&&(4===Oc||3===Oc&&(130023424&_c)===_c&&500>Qe()-Vc?pl(e,0):Pc|=n),al(e,t)}function Il(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=Os(e,t))&&(yt(e,t,n),al(e,n))}function Cl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Il(e,n)}function El(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Il(e,n)}function Al(e,t){return Ye(e,t)}function Rl(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function _l(e,t,n,a){return new Rl(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=_l(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ol(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,o,t);case T:i=8,r|=8;break;case N:return(e=_l(12,n,t,2|r)).elementType=N,e.lanes=o,e;case A:return(e=_l(13,n,t,r)).elementType=A,e.lanes=o,e;case R:return(e=_l(19,n,t,r)).elementType=R,e.lanes=o,e;case D:return zl(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case I:i=10;break e;case C:i=9;break e;case E:i=11;break e;case _:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=_l(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ml(e,t,n,a){return(e=_l(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=_l(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Ll(e,t,n){return(e=_l(6,e,null,t)).lanes=n,e}function Pl(e,t,n){return(t=_l(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Wl(e,t,n,a,r,s,o,i,c){return e=new Bl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=_l(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},zs(s),e}function Vl(e){if(!e)return Cr;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Ul(e,t,n,a,r,s,o,i,c){return(e=Wl(n,a,!0,e,0,s,0,i,c)).context=Vl(null),n=e.current,(s=Ps(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Bs(n,s,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Gl(e,t,n,a){var r=t.current,s=el(),o=tl(r);return n=Vl(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ps(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Bs(r,t,o))&&(nl(e,r,o,s),Ws(e,r,o)),o}function jl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Hl(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function ql(e,t){Hl(e,t),(e=e.alternate)&&Hl(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ar.current)vi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return vi=!1,function(e,t,n){switch(t.tag){case 3:Ai(t),hs();break;case 5:Qs(t);break;case 1:Fr(t.type)&&zr(t);break;case 4:Xs(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Ir(ks,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Ir($s,1&$s.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Li(e,t,n):(Ir($s,1&$s.current),null!==(e=ji(e,t,n))?e.sibling:null);Ir($s,1&$s.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Ir($s,$s.current),a)break;return null;case 22:case 23:return t.lanes=0,Ti(e,t,n)}return ji(e,t,n)}(e,t,n);vi=0!==(131072&e.flags)}else vi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=_r(t,Er.current);As(t,n),r=go(null,t,a,e,r,n);var o=yo();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,zr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,zs(t),r.updater=ri,t.stateNode=r,r._reactInternals=t,ci(t,a,e,n),t=Ei(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),xi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===_)return 14}return 2}(a),e=ni(a,e),r){case 0:t=Ii(null,t,a,e,n);break e;case 1:t=Ci(null,t,a,e,n);break e;case 11:t=wi(null,t,a,e,n);break e;case 14:t=ki(null,t,a,ni(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ii(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 3:e:{if(Ai(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,Ls(e,t),Us(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ri(e,t,a,n,r=li(Error(s(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=li(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=ws(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(hs(),a===r){t=ji(e,t,n);break e}xi(e,t,a,n)}t=t.child}return t;case 5:return Qs(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ni(e,t),xi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return Li(e,t,n);case 4:return Xs(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=xs(t,null,a,n):xi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,wi(e,t,a,r=t.elementType===a?r:ni(a,r),n);case 7:return xi(e,t,t.pendingProps,n),t.child;case 8:case 12:return xi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Ir(ks,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!Ar.current){t=ji(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ps(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Es(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Es(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}xi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,As(t,n),a=a(r=Rs(r)),t.flags|=1,xi(e,t,a,n),t.child;case 14:return r=ni(a=t.type,t.pendingProps),ki(e,t,a,r=ni(a.type,r),n);case 15:return Si(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:ni(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,zr(t)):e=!1,As(t,n),oi(t,a,r),ci(t,a,r,n),Ei(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ti(e,t,n)}throw Error(s(156,t.tag))};var Yl="function"===typeof reportError?reportError:function(e){console.error(e)};function Kl(e){this._internalRoot=e}function Xl(e){this._internalRoot=e}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Ql(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jl(){}function $l(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=jl(o);i.call(e)}}Gl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=jl(o);s.call(e)}}var o=Ul(t,a,e,0,null,!1,0,"",Jl);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),ul(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=jl(c);i.call(e)}}var c=Wl(e,0,!1,null,0,!1,0,"",Jl);return e._reactRootContainer=c,e[fr]=c.current,Ua(8===e.nodeType?e.parentNode:e),ul((function(){Gl(t,c,n,a)})),c}(n,t,e,r,a);return jl(o)}Xl.prototype.render=Kl.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Gl(e,t,null,null)},Xl.prototype.unmount=Kl.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Gl(null,e,null,null)})),t[fr]=null}},Xl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Tt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Qe()),0===(6&Ec)&&(Uc=Qe()+500,Ur()))}break;case 13:ul((function(){var t=Os(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),ql(e,1)}},kt=function(e){if(13===e.tag){var t=Os(e,134217728);if(null!==t)nl(t,e,134217728,el());ql(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=Os(e,t);if(null!==n)nl(n,e,t,el());ql(e,t)}},Tt=function(){return vt},Nt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));Y(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ll,Ae=ul;var eu={usingClientEntryPoint:!1,Events:[vr,xr,wr,Ie,Ce,ll]},tu={findFiberByHostInstance:br,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=He(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var au=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!au.isDisabled&&au.supportsFiber)try{rt=au.inject(nu),st=au}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zl(t))throw Error(s(200));return function(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Zl(e))throw Error(s(299));var n=!1,a="",r=Yl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Wl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Kl(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=He(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Ql(t))throw Error(s(200));return $l(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zl(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Yl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Ul(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Xl(t)},t.render=function(e,t,n){if(!Ql(t))throw Error(s(200));return $l(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ql(e))throw Error(s(40));return!!e._reactRootContainer&&(ul((function(){$l(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Ql(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return $l(e,t,n,!1,a)},t.version="18.3.1-next-f1338f8080-20240426"},4391:(e,t,n)=>{"use strict";var a=n(7950);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},7950:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(2730)},1153:(e,t,n)=>{"use strict";var a=n(5043),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},4202:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),h=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},T={key:!0,ref:!0,__self:!0,__source:!0};function N(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!T.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function I(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),A(o,t,r,"",(function(e){return e}))):null!=o&&(I(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=A(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=h&&e[h]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=A(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function R(e,t,n){if(null==e)return e;var a=[],r=0;return A(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function _(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.act=M,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!T.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=N,t.createFactory=function(e){var t=N.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=I,t.lazy=function(e){return{$$typeof:p,_payload:{_status:-1,_result:e},_init:_}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.3.1"},5043:(e,t,n)=>{"use strict";e.exports=n(4202)},579:(e,t,n)=>{"use strict";e.exports=n(1153)},7234:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,p=null,h=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,x(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(I),I=-1),f=!0;var s=h;try{for(x(n),p=a(l);null!==p&&(!(p.expirationTime>n)||e&&!A());){var o=p.callback;if("function"===typeof o){p.callback=null,h=p.priorityLevel;var i=o(p.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?p.callback=i:p===a(l)&&r(l),x(n)}else r(l);p=a(l)}if(null!==p)var c=!0;else{var d=a(u);null!==d&&O(w,d.startTime-n),c=!1}return c}finally{p=null,h=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,T=!1,N=null,I=-1,C=5,E=-1;function A(){return!(t.unstable_now()-E<C)}function R(){if(null!==N){var e=t.unstable_now();E=e;var n=!0;try{n=N(!0,e)}finally{n?S():(T=!1,N=null)}}else T=!1}if("function"===typeof v)S=function(){v(R)};else if("undefined"!==typeof MessageChannel){var _=new MessageChannel,F=_.port2;_.port1.onmessage=R,S=function(){F.postMessage(null)}}else S=function(){y(R,0)};function D(e){N=e,T||(T=!0,S())}function O(e,n){I=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return h},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(h){case 1:case 2:case 3:var t=3;break;default:t=h}var n=h;h=t;try{return e()}finally{h=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=h;h=e;try{return t()}finally{h=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(I),I=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=A,t.unstable_wrapCallback=function(e){var t=h;return function(){var n=h;h=t;try{return e.apply(this,arguments)}finally{h=n}}}},8853:(e,t,n)=>{"use strict";e.exports=n(7234)},4334:(e,t,n)=>{var a=n(7359),r=n(7066),s=n(9016),o=n(9538),i=n(6288),c=n(5262),l=n(2430);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},7359:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},5262:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},7066:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},6288:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},9538:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},9016:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},2430:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),d=2*u,p=c-1;function h(e,t,n){var a=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),h=new f(a),v=function(){for(var e=h.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|h.g(4)},v.quick=function(){return h.g(4)/4294967296},v.double=v,y(b(h.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,h),e.state=function(){return m(h,{})}),n?(o.random=e,t):e})(v,p,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=p&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=p&r+1],n=n*c+o[p&(o[r]=o[s=p&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=h;try{i=n(1234)}catch(v){}}else void 0===(a=function(){return h}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},5817:()=>{},8590:()=>{},4530:()=>{},8108:()=>{},551:()=>{},1234:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},(()=>{var e,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__;n.t=function(a,r){if(1&r&&(a=this(a)),8&r)return a;if("object"===typeof a&&a){if(4&r&&a.__esModule)return a;if(16&r&&"function"===typeof a.then)return a}var s=Object.create(null);n.r(s);var o={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&a;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>a[e]));return o.default=()=>a,n.d(s,o),s}})(),n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.f={},n.e=e=>Promise.all(Object.keys(n.f).reduce(((t,a)=>(n.f[a](e,t),t)),[])),n.u=e=>"static/js/"+e+".5565870f.chunk.js",n.miniCssF=e=>{},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={},t="app:";n.l=(a,r,s,o)=>{if(e[a])e[a].push(r);else{var i,c;if(void 0!==s)for(var l=document.getElementsByTagName("script"),u=0;u<l.length;u++){var d=l[u];if(d.getAttribute("src")==a||d.getAttribute("data-webpack")==t+s){i=d;break}}i||(c=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",t+s),i.src=a),e[a]=[r];var p=(t,n)=>{i.onerror=i.onload=null,clearTimeout(h);var r=e[a];if(delete e[a],i.parentNode&&i.parentNode.removeChild(i),r&&r.forEach((e=>e(n))),t)return t(n)},h=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),c&&document.head.appendChild(i)}}})(),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/survelliance-app/",(()=>{var e={792:0};n.f.j=(t,a)=>{var r=n.o(e,t)?e[t]:void 0;if(0!==r)if(r)a.push(r[2]);else{var s=new Promise(((n,a)=>r=e[t]=[n,a]));a.push(r[2]=s);var o=n.p+n.u(t),i=new Error;n.l(o,(a=>{if(n.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var s=a&&("load"===a.type?"missing":a.type),o=a&&a.target&&a.target.src;i.message="Loading chunk "+t+" failed.\n("+s+": "+o+")",i.name="ChunkLoadError",i.type=s,i.request=o,r[1](i)}}),"chunk-"+t,t)}};var t=(t,a)=>{var r,s,o=a[0],i=a[1],c=a[2],l=0;if(o.some((t=>0!==e[t]))){for(r in i)n.o(i,r)&&(n.m[r]=i[r]);if(c)c(n)}for(t&&t(a);l<o.length;l++)s=o[l],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0},a=self.webpackChunkapp=self.webpackChunkapp||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})(),(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>_p,bincountImpl:()=>Sh,bincountReduceImpl:()=>Th,bitwiseAndImpl:()=>Ih,castImpl:()=>Ip,ceilImpl:()=>Rh,concatImpl:()=>zh,equalImpl:()=>wf,expImpl:()=>Ff,expm1Impl:()=>Lf,floorImpl:()=>em,gatherNdImpl:()=>cm,gatherV2Impl:()=>um,greaterEqualImpl:()=>mm,greaterImpl:()=>pm,lessEqualImpl:()=>Em,lessImpl:()=>Nm,linSpaceImpl:()=>_m,logImpl:()=>Dm,maxImpl:()=>Km,maximumImpl:()=>Qm,minimumImpl:()=>ig,multiplyImpl:()=>hf,negImpl:()=>yg,notEqualImpl:()=>Ng,prodImpl:()=>Pg,raggedGatherImpl:()=>Gg,raggedRangeImpl:()=>qg,raggedTensorToTensorImpl:()=>Jg,rangeImpl:()=>ey,rsqrtImpl:()=>py,scatterImpl:()=>my,sigmoidImpl:()=>yp,simpleAbsImpl:()=>Wp,sliceImpl:()=>vh,sparseFillEmptyRowsImpl:()=>My,sparseReshapeImpl:()=>Ly,sparseSegmentReductionImpl:()=>By,sqrtImpl:()=>jy,staticRegexReplaceImpl:()=>Qy,stridedSliceImpl:()=>nb,stringNGramsImpl:()=>sb,stringSplitImpl:()=>cb,stringToHashBucketFastImpl:()=>ub,subImpl:()=>Gf,tileImpl:()=>yb,topKImpl:()=>wb,transposeImpl:()=>Yp,uniqueImpl:()=>Eb});var t,a=n(5043),r=n.t(a,2),s=n(4391);function o(){return o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},o.apply(this,arguments)}!function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"}(t||(t={}));const i="popstate";function c(e,t){if(!1===e||null===e||"undefined"===typeof e)throw new Error(t)}function l(e,t){if(!e){"undefined"!==typeof console&&console.warn(t);try{throw new Error(t)}catch(n){}}}function u(e,t){return{usr:e.state,key:e.key,idx:t}}function d(e,t,n,a){return void 0===n&&(n=null),o({pathname:"string"===typeof e?e:e.pathname,search:"",hash:""},"string"===typeof t?h(t):t,{state:n,key:t&&t.key||a||Math.random().toString(36).substr(2,8)})}function p(e){let{pathname:t="/",search:n="",hash:a=""}=e;return n&&"?"!==n&&(t+="?"===n.charAt(0)?n:"?"+n),a&&"#"!==a&&(t+="#"===a.charAt(0)?a:"#"+a),t}function h(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let a=e.indexOf("?");a>=0&&(t.search=e.substr(a),e=e.substr(0,a)),e&&(t.pathname=e)}return t}function f(e,n,a,r){void 0===r&&(r={});let{window:s=document.defaultView,v5Compat:l=!1}=r,h=s.history,f=t.Pop,m=null,g=y();function y(){return(h.state||{idx:null}).idx}function b(){f=t.Pop;let e=y(),n=null==e?null:e-g;g=e,m&&m({action:f,location:x.location,delta:n})}function v(e){let t="null"!==s.location.origin?s.location.origin:s.location.href,n="string"===typeof e?e:p(e);return n=n.replace(/ $/,"%20"),c(t,"No window.location.(origin|href) available to create URL for href: "+n),new URL(n,t)}null==g&&(g=0,h.replaceState(o({},h.state,{idx:g}),""));let x={get action(){return f},get location(){return e(s,h)},listen(e){if(m)throw new Error("A history only accepts one active listener");return s.addEventListener(i,b),m=e,()=>{s.removeEventListener(i,b),m=null}},createHref:e=>n(s,e),createURL:v,encodeLocation(e){let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,n){f=t.Push;let r=d(x.location,e,n);a&&a(r,e),g=y()+1;let o=u(r,g),i=x.createHref(r);try{h.pushState(o,"",i)}catch(c){if(c instanceof DOMException&&"DataCloneError"===c.name)throw c;s.location.assign(i)}l&&m&&m({action:f,location:x.location,delta:1})},replace:function(e,n){f=t.Replace;let r=d(x.location,e,n);a&&a(r,e),g=y();let s=u(r,g),o=x.createHref(r);h.replaceState(s,"",o),l&&m&&m({action:f,location:x.location,delta:0})},go:e=>h.go(e)};return x}var m;!function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"}(m||(m={}));new Set(["lazy","caseSensitive","path","id","index","children"]);function g(e,t,n){void 0===n&&(n="/");let a=R(("string"===typeof t?h(t):t).pathname||"/",n);if(null==a)return null;let r=y(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){let n=e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]));return n?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(r);let s=null;for(let o=0;null==s&&o<r.length;++o){let e=A(a);s=C(r[o],e)}return s}function y(e,t,n,a){void 0===t&&(t=[]),void 0===n&&(n=[]),void 0===a&&(a="");let r=(e,r,s)=>{let o={relativePath:void 0===s?e.path||"":s,caseSensitive:!0===e.caseSensitive,childrenIndex:r,route:e};o.relativePath.startsWith("/")&&(c(o.relativePath.startsWith(a),'Absolute route path "'+o.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),o.relativePath=o.relativePath.slice(a.length));let i=M([a,o.relativePath]),l=n.concat(o);e.children&&e.children.length>0&&(c(!0!==e.index,'Index routes must not have child routes. Please remove all child routes from route path "'+i+'".'),y(e.children,t,l,i)),(null!=e.path||e.index)&&t.push({path:i,score:I(i,e.index),routesMeta:l})};return e.forEach(((e,t)=>{var n;if(""!==e.path&&null!=(n=e.path)&&n.includes("?"))for(let a of b(e.path))r(e,t,a);else r(e,t)})),t}function b(e){let t=e.split("/");if(0===t.length)return[];let[n,...a]=t,r=n.endsWith("?"),s=n.replace(/\?$/,"");if(0===a.length)return r?[s,""]:[s];let o=b(a.join("/")),i=[];return i.push(...o.map((e=>""===e?s:[s,e].join("/")))),r&&i.push(...o),i.map((t=>e.startsWith("/")&&""===t?"/":t))}const v=/^:[\w-]+$/,x=3,w=2,k=1,S=10,T=-2,N=e=>"*"===e;function I(e,t){let n=e.split("/"),a=n.length;return n.some(N)&&(a+=T),t&&(a+=w),n.filter((e=>!N(e))).reduce(((e,t)=>e+(v.test(t)?x:""===t?k:S)),a)}function C(e,t){let{routesMeta:n}=e,a={},r="/",s=[];for(let o=0;o<n.length;++o){let e=n[o],i=o===n.length-1,c="/"===r?t:t.slice(r.length)||"/",l=E({path:e.relativePath,caseSensitive:e.caseSensitive,end:i},c);if(!l)return null;Object.assign(a,l.params);let u=e.route;s.push({params:a,pathname:M([r,l.pathname]),pathnameBase:z(M([r,l.pathnameBase])),route:u}),"/"!==l.pathnameBase&&(r=M([r,l.pathnameBase]))}return s}function E(e,t){"string"===typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,a]=function(e,t,n){void 0===t&&(t=!1);void 0===n&&(n=!0);l("*"===e||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were "'+e.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+e.replace(/\*$/,"/*")+'".');let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(a.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));e.endsWith("*")?(a.push({paramName:"*"}),r+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?r+="\\/*$":""!==e&&"/"!==e&&(r+="(?:(?=\\/|$))");let s=new RegExp(r,t?void 0:"i");return[s,a]}(e.path,e.caseSensitive,e.end),r=t.match(n);if(!r)return null;let s=r[0],o=s.replace(/(.)\/+$/,"$1"),i=r.slice(1);return{params:a.reduce(((e,t,n)=>{let{paramName:a,isOptional:r}=t;if("*"===a){let e=i[n]||"";o=s.slice(0,s.length-e.length).replace(/(.)\/+$/,"$1")}const c=i[n];return e[a]=r&&!c?void 0:(c||"").replace(/%2F/g,"/"),e}),{}),pathname:s,pathnameBase:o,pattern:e}}function A(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return l(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}function R(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,a=e.charAt(n);return a&&"/"!==a?null:e.slice(n)||"/"}function _(e,t,n,a){return"Cannot include a '"+e+"' character in a manually specified `to."+t+"` field ["+JSON.stringify(a)+"].  Please separate it out to the `to."+n+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}function F(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function D(e,t){let n=F(e);return t?n.map(((t,n)=>n===e.length-1?t.pathname:t.pathnameBase)):n.map((e=>e.pathnameBase))}function O(e,t,n,a){let r;void 0===a&&(a=!1),"string"===typeof e?r=h(e):(r=o({},e),c(!r.pathname||!r.pathname.includes("?"),_("?","pathname","search",r)),c(!r.pathname||!r.pathname.includes("#"),_("#","pathname","hash",r)),c(!r.search||!r.search.includes("#"),_("#","search","hash",r)));let s,i=""===e||""===r.pathname,l=i?"/":r.pathname;if(null==l)s=n;else{let e=t.length-1;if(!a&&l.startsWith("..")){let t=l.split("/");for(;".."===t[0];)t.shift(),e-=1;r.pathname=t.join("/")}s=e>=0?t[e]:"/"}let u=function(e,t){void 0===t&&(t="/");let{pathname:n,search:a="",hash:r=""}="string"===typeof e?h(e):e,s=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:s,search:L(a),hash:P(r)}}(r,s),d=l&&"/"!==l&&l.endsWith("/"),p=(i||"."===l)&&n.endsWith("/");return u.pathname.endsWith("/")||!d&&!p||(u.pathname+="/"),u}const M=e=>e.join("/").replace(/\/\/+/g,"/"),z=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),L=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",P=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";Error;function B(e){return null!=e&&"number"===typeof e.status&&"string"===typeof e.statusText&&"boolean"===typeof e.internal&&"data"in e}const W=["post","put","patch","delete"],V=(new Set(W),["get",...W]);new Set(V),new Set([301,302,303,307,308]),new Set([307,308]);Symbol("deferred");function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},U.apply(this,arguments)}const G=a.createContext(null);const j=a.createContext(null);const H=a.createContext(null);const q=a.createContext(null);const Y=a.createContext({outlet:null,matches:[],isDataRoute:!1});const K=a.createContext(null);function X(){return null!=a.useContext(q)}function Z(){return X()||c(!1),a.useContext(q).location}function Q(e){a.useContext(H).static||a.useLayoutEffect(e)}function J(){let{isDataRoute:e}=a.useContext(Y);return e?function(){let{router:e}=ce(oe.UseNavigateStable),t=ue(ie.UseNavigateStable),n=a.useRef(!1);return Q((()=>{n.current=!0})),a.useCallback((function(a,r){void 0===r&&(r={}),n.current&&("number"===typeof a?e.navigate(a):e.navigate(a,U({fromRouteId:t},r)))}),[e,t])}():function(){X()||c(!1);let e=a.useContext(G),{basename:t,future:n,navigator:r}=a.useContext(H),{matches:s}=a.useContext(Y),{pathname:o}=Z(),i=JSON.stringify(D(s,n.v7_relativeSplatPath)),l=a.useRef(!1);return Q((()=>{l.current=!0})),a.useCallback((function(n,a){if(void 0===a&&(a={}),!l.current)return;if("number"===typeof n)return void r.go(n);let s=O(n,JSON.parse(i),o,"path"===a.relative);null==e&&"/"!==t&&(s.pathname="/"===s.pathname?t:M([t,s.pathname])),(a.replace?r.replace:r.push)(s,a.state,a)}),[t,r,i,o,e])}()}function $(e,t){let{relative:n}=void 0===t?{}:t,{future:r}=a.useContext(H),{matches:s}=a.useContext(Y),{pathname:o}=Z(),i=JSON.stringify(D(s,r.v7_relativeSplatPath));return a.useMemo((()=>O(e,JSON.parse(i),o,"path"===n)),[e,i,o,n])}function ee(e,n,r,s){X()||c(!1);let{navigator:o}=a.useContext(H),{matches:i}=a.useContext(Y),l=i[i.length-1],u=l?l.params:{},d=(l&&l.pathname,l?l.pathnameBase:"/");l&&l.route;let p,f=Z();if(n){var m;let e="string"===typeof n?h(n):n;"/"===d||(null==(m=e.pathname)?void 0:m.startsWith(d))||c(!1),p=e}else p=f;let y=p.pathname||"/",b=y;if("/"!==d){let e=d.replace(/^\//,"").split("/");b="/"+y.replace(/^\//,"").split("/").slice(e.length).join("/")}let v=g(e,{pathname:b});let x=se(v&&v.map((e=>Object.assign({},e,{params:Object.assign({},u,e.params),pathname:M([d,o.encodeLocation?o.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?d:M([d,o.encodeLocation?o.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),i,r,s);return n&&x?a.createElement(q.Provider,{value:{location:U({pathname:"/",search:"",hash:"",state:null,key:"default"},p),navigationType:t.Pop}},x):x}function te(){let e=function(){var e;let t=a.useContext(K),n=le(ie.UseRouteError),r=ue(ie.UseRouteError);if(void 0!==t)return t;return null==(e=n.errors)?void 0:e[r]}(),t=B(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),n=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",s={padding:"0.5rem",backgroundColor:r};return a.createElement(a.Fragment,null,a.createElement("h2",null,"Unexpected Application Error!"),a.createElement("h3",{style:{fontStyle:"italic"}},t),n?a.createElement("pre",{style:s},n):null,null)}const ne=a.createElement(te,null);class ae extends a.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?a.createElement(Y.Provider,{value:this.props.routeContext},a.createElement(K.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function re(e){let{routeContext:t,match:n,children:r}=e,s=a.useContext(G);return s&&s.static&&s.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(s.staticContext._deepestRenderedBoundaryId=n.route.id),a.createElement(Y.Provider,{value:t},r)}function se(e,t,n,r){var s;if(void 0===t&&(t=[]),void 0===n&&(n=null),void 0===r&&(r=null),null==e){var o;if(null==(o=n)||!o.errors)return null;e=n.matches}let i=e,l=null==(s=n)?void 0:s.errors;if(null!=l){let e=i.findIndex((e=>e.route.id&&void 0!==(null==l?void 0:l[e.route.id])));e>=0||c(!1),i=i.slice(0,Math.min(i.length,e+1))}let u=!1,d=-1;if(n&&r&&r.v7_partialHydration)for(let a=0;a<i.length;a++){let e=i[a];if((e.route.HydrateFallback||e.route.hydrateFallbackElement)&&(d=a),e.route.id){let{loaderData:t,errors:a}=n,r=e.route.loader&&void 0===t[e.route.id]&&(!a||void 0===a[e.route.id]);if(e.route.lazy||r){u=!0,i=d>=0?i.slice(0,d+1):[i[0]];break}}}return i.reduceRight(((e,r,s)=>{let o,c=!1,p=null,h=null;var f;n&&(o=l&&r.route.id?l[r.route.id]:void 0,p=r.route.errorElement||ne,u&&(d<0&&0===s?(f="route-fallback",!1||de[f]||(de[f]=!0),c=!0,h=null):d===s&&(c=!0,h=r.route.hydrateFallbackElement||null)));let m=t.concat(i.slice(0,s+1)),g=()=>{let t;return t=o?p:c?h:r.route.Component?a.createElement(r.route.Component,null):r.route.element?r.route.element:e,a.createElement(re,{match:r,routeContext:{outlet:e,matches:m,isDataRoute:null!=n},children:t})};return n&&(r.route.ErrorBoundary||r.route.errorElement||0===s)?a.createElement(ae,{location:n.location,revalidation:n.revalidation,component:p,error:o,children:g(),routeContext:{outlet:null,matches:m,isDataRoute:!0}}):g()}),null)}var oe=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(oe||{}),ie=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(ie||{});function ce(e){let t=a.useContext(G);return t||c(!1),t}function le(e){let t=a.useContext(j);return t||c(!1),t}function ue(e){let t=function(e){let t=a.useContext(Y);return t||c(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||c(!1),n.route.id}const de={};r.startTransition;function pe(e){c(!1)}function he(e){let{basename:n="/",children:r=null,location:s,navigationType:o=t.Pop,navigator:i,static:l=!1,future:u}=e;X()&&c(!1);let d=n.replace(/^\/*/,"/"),p=a.useMemo((()=>({basename:d,navigator:i,static:l,future:U({v7_relativeSplatPath:!1},u)})),[d,u,i,l]);"string"===typeof s&&(s=h(s));let{pathname:f="/",search:m="",hash:g="",state:y=null,key:b="default"}=s,v=a.useMemo((()=>{let e=R(f,d);return null==e?null:{location:{pathname:e,search:m,hash:g,state:y,key:b},navigationType:o}}),[d,f,m,g,y,b,o]);return null==v?null:a.createElement(H.Provider,{value:p},a.createElement(q.Provider,{children:r,value:v}))}function fe(e){let{children:t,location:n}=e;return ee(me(t),n)}new Promise((()=>{}));a.Component;function me(e,t){void 0===t&&(t=[]);let n=[];return a.Children.forEach(e,((e,r)=>{if(!a.isValidElement(e))return;let s=[...t,r];if(e.type===a.Fragment)return void n.push.apply(n,me(e.props.children,s));e.type!==pe&&c(!1),e.props.index&&e.props.children&&c(!1);let o={id:e.props.id||s.join("-"),caseSensitive:e.props.caseSensitive,element:e.props.element,Component:e.props.Component,index:e.props.index,path:e.props.path,loader:e.props.loader,action:e.props.action,errorElement:e.props.errorElement,ErrorBoundary:e.props.ErrorBoundary,hasErrorBoundary:null!=e.props.ErrorBoundary||null!=e.props.errorElement,shouldRevalidate:e.props.shouldRevalidate,handle:e.props.handle,lazy:e.props.lazy};e.props.children&&(o.children=me(e.props.children,s)),n.push(o)})),n}var ge=n(7950),ye=n.t(ge,2);function be(){return be=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},be.apply(this,arguments)}function ve(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);const xe=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];try{window.__reactRouterVersion="6"}catch(NE){}new Map;const we=r.startTransition;ye.flushSync,r.useId;function ke(e){let{basename:t,children:n,future:r,window:s}=e,o=a.useRef();var i;null==o.current&&(o.current=(void 0===(i={window:s,v5Compat:!0})&&(i={}),f((function(e,t){let{pathname:n,search:a,hash:r}=e.location;return d("",{pathname:n,search:a,hash:r},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"===typeof t?t:p(t)}),null,i)));let c=o.current,[l,u]=a.useState({action:c.action,location:c.location}),{v7_startTransition:h}=r||{},m=a.useCallback((e=>{h&&we?we((()=>u(e))):u(e)}),[u,h]);return a.useLayoutEffect((()=>c.listen(m)),[c,m]),a.createElement(he,{basename:t,children:n,location:l.location,navigationType:l.action,navigator:c,future:r})}const Se="undefined"!==typeof window&&"undefined"!==typeof window.document&&"undefined"!==typeof window.document.createElement,Te=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Ne=a.forwardRef((function(e,t){let n,{onClick:r,relative:s,reloadDocument:o,replace:i,state:l,target:u,to:d,preventScrollReset:h,unstable_viewTransition:f}=e,m=ve(e,xe),{basename:g}=a.useContext(H),y=!1;if("string"===typeof d&&Te.test(d)&&(n=d,Se))try{let e=new URL(window.location.href),t=d.startsWith("//")?new URL(e.protocol+d):new URL(d),n=R(t.pathname,g);t.origin===e.origin&&null!=n?d=n+t.search+t.hash:y=!0}catch(NE){}let b=function(e,t){let{relative:n}=void 0===t?{}:t;X()||c(!1);let{basename:r,navigator:s}=a.useContext(H),{hash:o,pathname:i,search:l}=$(e,{relative:n}),u=i;return"/"!==r&&(u="/"===i?r:M([r,i])),s.createHref({pathname:u,search:l,hash:o})}(d,{relative:s}),v=function(e,t){let{target:n,replace:r,state:s,preventScrollReset:o,relative:i,unstable_viewTransition:c}=void 0===t?{}:t,l=J(),u=Z(),d=$(e,{relative:i});return a.useCallback((t=>{if(function(e,t){return 0===e.button&&(!t||"_self"===t)&&!function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)}(t,n)){t.preventDefault();let n=void 0!==r?r:p(u)===p(d);l(e,{replace:n,state:s,preventScrollReset:o,relative:i,unstable_viewTransition:c})}}),[u,l,d,r,s,n,e,o,i,c])}(d,{replace:i,state:l,target:u,preventScrollReset:h,relative:s,unstable_viewTransition:f});return a.createElement("a",be({},m,{href:n||b,onClick:y||o?r:function(e){r&&r(e),e.defaultPrevented||v(e)},ref:t,target:u}))}));var Ie,Ce;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(Ie||(Ie={})),function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"}(Ce||(Ce={}));const Ee={_origin:"https://api.emailjs.com"},Ae=(e,t,n)=>{if(!e)throw"The user ID is required. Visit https://dashboard.emailjs.com/admin/integration";if(!t)throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!n)throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates";return!0};class Re{constructor(e){this.status=e.status,this.text=e.responseText}}const _e=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return new Promise(((a,r)=>{const s=new XMLHttpRequest;s.addEventListener("load",(e=>{let{target:t}=e;const n=new Re(t);200===n.status||"OK"===n.text?a(n):r(n)})),s.addEventListener("error",(e=>{let{target:t}=e;r(new Re(t))})),s.open("POST",Ee._origin+e,!0),Object.keys(n).forEach((e=>{s.setRequestHeader(e,n[e])})),s.send(t)}))},Fe=(e,t,n,a)=>{const r=a||Ee._userID;Ae(r,e,t);const s={lib_version:"3.2.0",user_id:r,service_id:e,template_id:t,template_params:n};return _e("/api/v1.0/email/send",JSON.stringify(s),{"Content-type":"application/json"})};var De=n(579);const Oe=function(){const[e,t]=(0,a.useState)({name:"",email:"",message:""}),n=n=>{const{name:a,value:r}=n.target;t({...e,[a]:r})};return(0,De.jsxs)("form",{className:"contact-form",onSubmit:n=>{n.preventDefault();Fe("service_zxzq7zb","template_jkpv0xd",e,"7vxBxQZXleccAfwi-").then((e=>{console.log("Email sent successfully!",e.status,e.text),alert("Message sent successfully!"),t({name:"",email:"",message:""})})).catch((e=>{console.error("Error sending email:",e),alert("Error sending message.")}))},children:[(0,De.jsx)("label",{htmlFor:"name",children:"Name:"}),(0,De.jsx)("input",{type:"text",id:"name",name:"name",required:!0,value:e.name,onChange:n}),(0,De.jsx)("label",{htmlFor:"email",children:"Email:"}),(0,De.jsx)("input",{type:"email",id:"email",name:"email",required:!0,value:e.email,onChange:n}),(0,De.jsx)("label",{htmlFor:"message",children:"Message:"}),(0,De.jsx)("textarea",{id:"message",name:"message",required:!0,value:e.message,onChange:n}),(0,De.jsx)("button",{type:"submit",children:"Submit"})]})};var Me=n(5743),ze=n(9554),Le=n(7794),Pe=n(803),Be=n(319);const We={kernelName:ze.ljI,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,Be.P)((0,Le.w)(n,"float32"),-1))}}};var Ve=n(4974),Ue=n(1011),Ge=n(1997),je=n(191),He=n(7738),qe=n(7951);const Ye={kernelName:ze.Vvy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,He.E)((0,Le.w)(n,"float32")),a=(0,je.R)((0,qe.j)((0,Ge.d)(1),t));return(0,Ue.H)((0,Ve.y)(e,a))}}}},Ke={kernelName:ze.PH8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,je.R)((0,qe.j)((0,He.E)((0,Le.w)(n,"float32")),1));return(0,Ve.y)(e,t)}}}};var Xe=n(8805),Ze=n(5583),Qe=n(7382);const Je={kernelName:ze.OMN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Xe.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=Xe.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,Qe.c)(t,a)),(0,Ze.t)(t,n.shape)},b:()=>{let t=e;const n=Xe.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,Qe.c)(t,n)),(0,Ze.t)(t,a.shape)}}}},$e={kernelName:ze.EkD,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}};var et=n(3290);const tt={kernelName:ze.Jp_,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,et.P)(n)}}},nt={kernelName:ze.p_m,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,et.P)(n)}}},at={kernelName:ze.QKF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,je.R)((0,qe.j)((0,Ge.d)(1),(0,He.E)((0,Le.w)(n,"float32")))))}}};var rt=n(7242);const st={kernelName:ze.epO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,je.R)((0,rt.W)((0,Ge.d)(1),(0,He.E)((0,Le.w)(n,"float32"))));return(0,Ve.y)(e,t)}}}},ot={kernelName:ze.lxb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Xe.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,rt.W)((0,He.E)(n),(0,He.E)(a));let s=(0,Pe.l)(e,(0,Ve.y)(a,t));const o=(0,Xe.getReductionAxes)(n.shape,r);return o.length>0&&(s=(0,Qe.c)(s,o)),(0,Ze.t)(s,n.shape)},b:()=>{const t=(0,rt.W)((0,He.E)(n),(0,He.E)(a));let s=(0,Ue.H)((0,Pe.l)(e,(0,Ve.y)(n,t)));const o=(0,Xe.getReductionAxes)(a.shape,r);return o.length>0&&(s=(0,Qe.c)(s,o)),(0,Ze.t)(s,a.shape)}}}},it={kernelName:ze.TyE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,rt.W)((0,He.E)((0,Le.w)(n,"float32")),1))}}},ct={kernelName:ze.zP9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,qe.j)((0,Ge.d)(1),(0,He.E)((0,Le.w)(n,"float32"))))}}};var lt=n(2164),ut=n(4148),dt=n(1426),pt=n(7538),ht=n(7892);const ft=(0,ht.op)({avgPool3dGrad_:function(e,t,n,a,r,s){const o=(0,ut.YT)(e,"dy","avgPool3dGrad"),i=(0,ut.YT)(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=(0,Ze.t)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=(0,Ze.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),dt.vA(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),dt.vA(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),(0,pt.s_)("avgPool3dGrad",r,s);const d={dy:c,input:l},p={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=lt.T2.runKernel(ze.wwC,d,p);return u?(0,Ze.t)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),mt={kernelName:ze.cS,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>ft(e,a,r,s,o,i)}}};const gt=(0,ht.op)({avgPoolGrad_:function(e,t,n,a,r){const s=(0,ut.YT)(e,"dy","avgPoolGrad"),o=(0,ut.YT)(t,"input","avgPoolGrad");dt.vA(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=(0,Ze.t)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=(0,Ze.t)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),dt.vA(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),dt.vA(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},d={filterSize:n,strides:a,pad:r},p=lt.T2.runKernel(ze.VCH,u,d);return l?(0,Ze.t)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),yt={kernelName:ze.ho8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>gt(e,a,r,s,o)}}};var bt=n(5162);const vt={kernelName:ze.jAQ,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,bt.N)(e,r,!1,!1),b:()=>(0,bt.N)(e,a,!0,!1)}:s&&!o?{a:()=>(0,bt.N)(r,e,!1,!0),b:()=>(0,bt.N)(a,e,!1,!1)}:{a:()=>(0,bt.N)(r,e,!0,!0),b:()=>(0,bt.N)(e,a,!0,!0)}:{a:()=>(0,bt.N)(e,r,!1,!0),b:()=>(0,bt.N)(a,e,!0,!1)}}};var xt=n(3585);const wt={kernelName:ze.Ik2,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,xt.e)(e,a,r)}}},kt={kernelName:ze.LB5,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,Qe.c)(e,i,!0)}}},St={kernelName:ze.KXH,gradFunc:e=>({x:()=>e.clone()})},Tt={kernelName:ze.QDP,gradFunc:e=>({x:()=>(0,et.P)(e)})};var Nt=n(9996),It=n(827),Ct=n(5692),Et=n(3986);const At={kernelName:ze.vaV,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>(0,Et._)((0,Ct.n)((0,Nt.D)(a,r),(0,It.I)(a,s)),e,(0,et.P)(e))}}},Rt={kernelName:ze.$zE,inputsToSave:["x"],gradFunc:We.gradFunc};var _t=n(5181);const Ft={kernelName:ze.$dB,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=(0,dt.Y6)(r,t[0].shape)[0],o=a.map((e=>e[s]));return(0,_t.l)(e,o,s).map((e=>()=>e))}};var Dt=n(6927),Ot=n(1565);const Mt={kernelName:ze.p2J,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return dt.vA(pt.Dh(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>(0,Ot.v)(a.shape,e,r,o,i,c),filter:()=>(0,Dt.H)(a,e,r.shape,o,i,c)}}};var zt=n(4969);const Lt={kernelName:ze.jfg,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,zt.X)(e,r,s,o,i,1,c),filter:()=>(0,Dt.H)(e,a,r.shape,s,o,i,c)}}};const Pt=(0,ht.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=(0,Ze.t)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,Ze.t)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),dt.vA(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),dt.vA(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),dt.vA(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),dt.vA(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),dt.vA(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return lt.T2.runKernel(ze.iGz,i,c)}});var Bt=n(6410);const Wt={kernelName:ze.A1h,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;dt.vA((0,pt.Dh)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>(0,Bt.c)(o.shape,e,i,r,s),filter:()=>Pt(o,e,i.shape,r,s)}}};var Vt=n(9519);const Ut={kernelName:ze.Mn0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)((0,Ue.H)((0,Vt.F)((0,Le.w)(n,"float32"))),e)}}};var Gt=n(8143);const jt={kernelName:ze.MnK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)((0,Gt.L)((0,Le.w)(n,"float32")),e)}}};var Ht=n(9235),qt=n(7167),Yt=n(2154);const Kt={kernelName:ze.nY8,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,Ht.Em)([r],a.rank);let n=(0,qt.r)(e,r,s,!o);return null!=t&&(n=(0,Yt.m)(n,t)),n}}}};var Xt=n(7399),Zt=n(261);const Qt={kernelName:ze.tGH,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;dt.vA(pt.Dh(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return dt.vA(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),dt.vA(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),dt.vA(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),dt.vA(pt.G0(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),pt.s_("depthwiseConv2d",s,o),{x:()=>(0,Zt.l)(c.shape,e,l,r,s,i,o),filter:()=>(0,Xt.x)(c,e,l.shape,r,s,i,o)}}},Jt={kernelName:ze.jxD,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>lt.T2.runKernel(ze.bP9,s,n),filter:()=>lt.T2.runKernel(ze.pk0,o,n)}}},$t={kernelName:ze.Pah,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>lt.T2.runKernel(ze.rsH,a)}}};var en=n(5462);const tn={kernelName:ze._s9,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,Pe.l)((0,en.o)((0,Ue.H)((0,He.E)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,Pe.l)(e,a)}}},nn={kernelName:ze.ox3,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,n)}}},an={kernelName:ze.ybN,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,Ze.t)(e,n.shape)}}},rn={kernelName:ze.ybj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,en.o)(n))}}},sn={kernelName:ze.ZgB,gradFunc:e=>({x:()=>(0,et.P)(e)})},on={kernelName:ze.ElG,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Xe.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,Ve.y)(e,(0,Le.w)(a,"float32")),s=(0,Xe.getReductionAxes)(n.shape,r);return s.length>0?(0,Ze.t)((0,Qe.c)(t,s),n.shape):t},b:()=>{let t=(0,Pe.l)(e,(0,Le.w)(n,"float32"));const s=(0,Xe.getReductionAxes)(a.shape,r);s.length>0&&(t=(0,Ze.t)((0,Qe.c)(t,s),a.shape));const o=(0,He.E)(a);return(0,Ue.H)((0,Ve.y)(t,(0,Le.w)(o,"float32")))}}}};var cn=n(6777),ln=n(3017);const un={kernelName:ze.i5R,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?(0,Ge.d)(1):i,l=(0,Xe.getReductionAxes)(s.shape,r.shape),u=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const d=(0,qe.j)(r,s),p=(0,Pe.l)(e,c),h=(0,cn.Z)((0,rt.W)(o,(0,Ge.d)(a))),f=(0,Pe.l)((0,Pe.l)((0,Pe.l)(h,h),h),(0,Ge.d)(-.5));return{x:()=>1===s.rank?(0,Ze.t)((0,Pe.l)((0,Pe.l)(e,(0,ln.V)((0,Ze.t)(h,[1,1,1,s.shape[0]]),u)),c),r.shape):(0,Ze.t)((0,Pe.l)((0,Pe.l)(e,h),c),r.shape),mean:()=>{let e=(0,Pe.l)((0,Pe.l)(h,(0,Ge.d)(-1)),p);return 1===s.rank&&(e=(0,Qe.c)(e,l)),(0,Ze.t)(e,s.shape)},variance:()=>{let e=(0,Pe.l)((0,Pe.l)(f,d),p);return 1===s.rank&&(e=(0,Qe.c)(e,l)),(0,Ze.t)(e,s.shape)},scale:()=>{const t=(0,Pe.l)(d,h);let n=(0,Pe.l)(e,t);return 1===s.rank&&(n=(0,Qe.c)(n,l)),(0,Ze.t)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,Qe.c)(t,l)),(0,Ze.t)(t,s.shape)}}}};var dn=n(901),pn=n(5149);const hn={kernelName:ze.mxL,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=(0,dt.Y6)(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,d=fn(0,c),p=fn(c+1,c+1+u),h=mn([o,[r],l]),f=(0,Ze.t)(n,h),m=(0,Ze.t)(t,[r]),g=mn([[c],d,p]),y=(0,Yt.m)(f,g);let b=(0,pn.z)(y,m,e.shape[i]);const v=(0,Ht.gx)(g);return b=(0,Yt.m)(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,dn.t)(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function fn(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function mn(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const gn={kernelName:ze.lLS,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,et.P)(n),b:()=>(0,et.P)(a)}}},yn={kernelName:ze.lzr,gradFunc:e=>({x:()=>(0,Le.w)(e,"float32")})},bn={kernelName:ze.gIW,gradFunc:e=>({x:()=>(0,et.P)(e)})},vn={kernelName:ze.E3$,gradFunc:e=>({x:()=>(0,et.P)(e)})},xn={kernelName:ze.iPs,gradFunc:e=>({x:()=>(0,et.P)(e)})};var wn=n(2759);const kn={kernelName:ze.X0$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=(0,wn.r)(a,0);return{x:()=>(0,Et._)(s,e,(0,Pe.l)(e,r))}}},Sn={kernelName:ze.Cg$,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,rt.W)(n,1))}}},Tn={kernelName:ze.tG8,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,Le.w)(n,"float32"))}}},Nn={kernelName:ze.zfU,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,en.o)(a);return(0,qe.j)(e,(0,Pe.l)((0,Qe.c)(e,r,!0),t))}}}};const In=(0,ht.op)({localResponseNormalizationBackprop_:function(e,t,n){const a={x:e,y:t,dy:n},r={depthRadius:arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,bias:arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,alpha:arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,beta:arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5};return lt.T2.runKernel(ze.ToN,a,r)}}),Cn={kernelName:ze.jM4,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>In(a,r,e,s,o,i,c)}}};var En=n(7457);function An(e,t,n,a){return t.rank<n.rank&&(t=(0,Ze.t)(t,Ht.SM(t.shape,a))),e.rank<n.rank&&(e=(0,Ze.t)(e,Ht.SM(e.shape,a))),{x:()=>(0,Pe.l)(e,(0,Le.w)((0,En.L)(n,t),e.dtype))}}const Rn={kernelName:ze.VAI,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=An(e,t[1],s,dt.Y6(r,s.shape));return{x:()=>o.x()}}};var _n=n(8320);const Fn={kernelName:ze.LDN,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,Pe.l)(e,(0,Le.w)((0,Nt.D)(n,a),"float32")),b:()=>(0,Pe.l)(e,(0,Le.w)((0,_n.M)(n,a),"float32"))}}};const Dn=(0,ht.op)({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=(0,ut.YT)(e,"dy","maxPool3dGrad"),c=(0,ut.YT)(t,"input","maxPool3dGrad"),l=(0,ut.YT)(n,"output","maxPool3dGrad");let u=i,d=c,p=l,h=!1;4===c.rank&&(h=!0,u=(0,Ze.t)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=(0,Ze.t)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=(0,Ze.t)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),dt.vA(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),dt.vA(5===d.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,"."))),dt.vA(5===p.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(p.rank,"."))),(0,pt.s_)("maxPool3dGrad",s,o);const f={dy:u,input:d,output:p},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=lt.T2.runKernel(ze.cHb,f,m);return h?(0,Ze.t)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),On={kernelName:ze.ySp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>Dn(e,a,r,s,o,i,c)}}};const Mn=(0,ht.op)({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=(0,ut.YT)(e,"dy","maxPoolGrad"),c=(0,ut.YT)(t,"input","maxPoolGrad"),l=(0,ut.YT)(n,"output","maxPoolGrad");dt.vA(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),dt.vA(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),dt.vA(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),pt.s_("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},d={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return lt.T2.runKernel(ze.RXX,u,d)}}),zn={kernelName:ze.t3d,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>Mn(e,a,r,s,o,i)}}};var Ln=n(4616);const Pn={kernelName:ze.g5A,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=dt.Y6(r,a.shape),o=(0,Ht.lb)(a.shape,s)[1],i=dt.Ze(o);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,Ze.t)(e,t);return(0,Ve.y)((0,Pe.l)(n,(0,Ln.S)(a.shape,"float32")),i)}}}},Bn={kernelName:ze.lNG,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=An(e,o,s,dt.Y6(r,s.shape));return{x:()=>i.x()}}},Wn={kernelName:ze.LG0,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,Pe.l)(e,(0,Le.w)((0,It.I)(n,a),"float32")),b:()=>(0,Pe.l)(e,(0,Le.w)((0,wn.r)(n,a),"float32"))}}};var Vn=n(463);const Un={kernelName:ze.x7F,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,Vn.d)(e,s,a.shape)}}};var Gn=n(8587);const jn={kernelName:ze.BLA,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Xe.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,Xe.getReductionAxes)(n.shape,r);return t.length>0?(0,Ze.t)((0,Qe.c)(e,t),n.shape):e},b:()=>{const t=(0,Pe.l)(e,(0,Ue.H)((0,Gn.R)((0,Ve.y)(n,a)))),s=(0,Xe.getReductionAxes)(a.shape,r);return s.length>0?(0,Ze.t)((0,Qe.c)(t,s),a.shape):t}}}},Hn={kernelName:ze.xu7,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Xe.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,Pe.l)(e,(0,Le.w)(a,"float32")),s=(0,Xe.getReductionAxes)(n.shape,r);return s.length>0?(0,Ze.t)((0,Qe.c)(t,s),n.shape):t},b:()=>{const t=(0,Pe.l)(e,(0,Le.w)(n,"float32")),s=(0,Xe.getReductionAxes)(a.shape,r);return s.length>0?(0,Ze.t)((0,Qe.c)(t,s),a.shape):t}}}},qn={kernelName:ze.l0G,gradFunc:e=>({x:()=>(0,Ue.H)(e)})};var Yn=n(4218);const Kn={kernelName:ze.urI,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Yn.U)(n.shape,"float32")}}},Xn={kernelName:ze.LWX,gradFunc:e=>({x:()=>(0,et.P)(e)})};var Zn=n(3984);const Qn={kernelName:ze.mM$,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,Zn.K)(e,a).map((e=>()=>e))}},Jn={kernelName:ze.ODT,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,Vn.d)(e,s,a.shape)}}};var $n=n(5911),ea=n(7587);const ta={kernelName:ze.pyJ,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=Xe.assertAndGetBroadcastShape(s.shape,o.shape);return{a:()=>{const t=(0,Le.w)(o,"float32");let n=(0,Pe.l)(e,(0,Pe.l)(t,(0,ea.n)(s,(0,qe.j)(t,(0,Ge.d)(1)))));const a=Xe.getReductionAxes(s.shape,i);return a.length>0&&(n=(0,Qe.c)(n,a)),(0,Ze.t)(n,s.shape)},b:()=>{const t=(0,wn.r)(s,0),n=(0,Et._)(t,(0,$n.R)(s),(0,et.P)(s));let a=(0,Pe.l)(e,(0,Pe.l)(r,n));const c=Xe.getReductionAxes(o.shape,i);return c.length>0&&(a=(0,Qe.c)(a,c)),(0,Ze.t)(a,o.shape)}}}},na={kernelName:ze.Ncv,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,wn.r)(n,0);return{x:()=>(0,Et._)(r,e,(0,Pe.l)(e,a)),alpha:()=>{let t=(0,Et._)(r,(0,et.P)(e),(0,Pe.l)(e,n));const s=(0,Xe.getReductionAxes)(a.shape,e.shape);return s.length>0&&(t=(0,Qe.c)(t,s)),(0,Ze.t)(t,a.shape)}}}};var aa=n(3739);function ra(e,t,n){const a=e.shape.length,r=a-n.length,s=Ht.Em(n,a);let o=e;null!=s&&(o=(0,Yt.m)(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,Ze.t)(t,a),s=(0,aa.L)(e,n,!0,!1),o=(0,aa.L)(e,n,!0,!0),i=(0,Pe.l)(s,o);return(0,Pe.l)(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=Ht.gx(s);l=(0,Yt.m)(l,e)}return l}const sa={kernelName:ze.kdj,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>ra(a,e,s)}}},oa={kernelName:ze.sDr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Xe.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,Ve.y)(e,(0,Le.w)(a,"float32")),s=Xe.getReductionAxes(n.shape,r);return s.length>0?(0,Ze.t)((0,Qe.c)(t,s),n.shape):t},b:()=>{let t=(0,Pe.l)(e,(0,Le.w)(n,"float32"));const s=Xe.getReductionAxes(a.shape,r);s.length>0&&(t=(0,Ze.t)((0,Qe.c)(t,s),a.shape));const o=(0,He.E)(a);return(0,Ue.H)((0,Ve.y)(t,(0,Le.w)(o,"float32")))}}}},ia={kernelName:ze.huO,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,Ue.H)((0,He.E)(n)))}}},ca={kernelName:ze.P_L,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,Pe.l)((0,It.I)(n,6),(0,Be.P)(n));return{x:()=>(0,Pe.l)(e,(0,Le.w)(a,"float32"))}}},la={kernelName:ze.fUj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,Le.w)((0,Be.P)(n),"float32"))}}},ua={kernelName:ze.R23,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.t)(e,n.shape)}}},da={kernelName:ze.hgw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>lt.T2.runKernel(ze.FCQ,r,n)}}},pa={kernelName:ze.jOE,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>lt.T2.runKernel(ze.XQy,r,n)}}};var ha=n(7419);const fa={kernelName:ze.D7i,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,dt.Y6)(a,e.shape);return{x:()=>(0,ha.B)(e,r)}}},ma={kernelName:ze.hVg,gradFunc:e=>({x:()=>(0,et.P)(e)})},ga={kernelName:ze.TOR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ue.H)((0,Ve.y)(e,(0,Pe.l)((0,ea.n)(n,1.5),2)))}}};var ya=n(5344);const ba={kernelName:ze.l6P,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,Le.w)((0,et.P)(n),"float32"),t:()=>(0,Pe.l)(e,(0,Le.w)(n,e.dtype)),e:()=>(0,Pe.l)(e,(0,Le.w)((0,ya.N)(n),e.dtype))}}};var va=n(3765);const xa={kernelName:ze.u$b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,wn.r)(n,(0,Ge.d)(0)),a=(0,Ge.d)(va.j),r=(0,Ge.d)(va.X),s=(0,Pe.l)(e,r),o=(0,Pe.l)((0,Pe.l)(e,a),(0,en.o)((0,Le.w)(n,"float32")));return(0,Et._)(t,s,o)}}}},wa={kernelName:ze.vI1,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,Pe.l)(n,(0,qe.j)((0,Ge.d)(1),n)))}}},ka={kernelName:ze.YVe,gradFunc:e=>({x:()=>(0,et.P)(e)})};var Sa=n(5894);const Ta={kernelName:ze.hql,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)((0,Sa.g)((0,Le.w)(n,"float32")),e)}}};var Na=n(1164);const Ia={kernelName:ze.J3C,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)((0,Na.y)((0,Le.w)(n,"float32")),e)}}};var Ca=n(5048),Ea=n(4642);const Aa={kernelName:ze.JiE,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=(0,Ea.parseSliceParams)(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,Ca.e)(e,l)}}},Ra={kernelName:ze.rFG,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=(0,Pe.l)(e,a);return{logits:()=>(0,qe.j)(s,(0,Pe.l)((0,Qe.c)(s,[r],true),a))}}};var _a=n(4213);const Fa={kernelName:ze.Fin,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,_a.r)(n))}}};var Da=n(2557);const Oa={kernelName:ze.A8B,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,Da.G)(e,a,r)}}};var Ma=n(4429);const za={kernelName:ze.Blb,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,Ma.x)(e,a)}}},La={kernelName:ze.dFH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,Pe.l)((0,je.R)((0,Le.w)(n,"float32")),2))}}},Pa={kernelName:ze.M6A,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)(e,(0,Pe.l)((0,Le.w)(n,"float32"),2))}}},Ba={kernelName:ze.Ddj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,Ge.d)(2);return{a:()=>(0,Pe.l)(e,(0,Pe.l)(r,(0,qe.j)(n,a))),b:()=>(0,Pe.l)(e,(0,Pe.l)(r,(0,qe.j)(a,n)))}}},Wa={kernelName:ze.pnw,gradFunc:e=>({x:()=>(0,et.P)(e)})},Va={kernelName:ze.PbM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=Xe.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=Xe.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,Qe.c)(t,a)),(0,Ze.t)(t,n.shape)},b:()=>{let t=e;const n=Xe.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,Qe.c)(t,n)),(0,Ze.t)((0,Ue.H)(t),a.shape)}}}},Ua={kernelName:ze.WuN,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;(0,dt.Y6)(s,a.shape).forEach((e=>{r[e]=1}));const o=(0,Ze.t)(e,r),i=(0,Pe.l)(o,(0,Ln.S)(a.shape,"float32"));return{x:()=>i}}},Ga={kernelName:ze.oFs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ve.y)(e,(0,He.E)((0,Sa.g)(n)))}}},ja={kernelName:ze.iuW,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Pe.l)((0,qe.j)((0,Ge.d)(1),(0,He.E)(n)),e)}}},Ha={kernelName:ze.FAs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,et.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,rt.W)(t,(0,Vn.d)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=(0,rt.W)(t,(0,Vn.d)(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=(0,rt.W)(t,(0,Vn.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=(0,rt.W)(t,(0,Vn.d)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},qa={kernelName:ze.wx0,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=Ht.gx(r);return{x:()=>(0,Yt.m)(e,s)}}},Ya={kernelName:ze.dXR,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,dn.t)(e,r)}}};var Ka=n(4023),Xa=n(6178),Za=n(2131);const Qa={kernelName:ze.pPe,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Za.P)(t,(0,et.P)(t)),a=(0,Xa.k)(e,n);let r=(0,Nt.D)(t,(0,Ge.d)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=(0,Ka.U)(r,i+1);r=(0,Ct.n)(r,(0,Ln.S)(a.shape,"bool"));const o=(0,et.P)(a);return(0,Et._)(r,a,o)}(e,n)}}};const Ja={kernelName:ze.xJ3,gradFunc:e=>({x:()=>(0,et.P)(e)})};var $a=n(843);const er=[We,Ye,Ke,Je,$e,tt,nt,at,st,ot,it,ct,mt,yt,vt,wt,kt,St,Tt,At,Rt,Ft,Lt,Mt,Wt,Ut,jt,Kt,Qt,Jt,oa,$t,tn,nn,an,rn,on,sn,un,hn,gn,yn,bn,vn,xn,kn,Sn,Tn,Nn,Cn,Rn,Rn,Fn,On,zn,Pn,Bn,Wn,Un,jn,Hn,qn,Kn,Xn,Qn,Jn,Jn,ta,na,sa,ia,ca,la,ua,da,pa,fa,ma,ga,ba,xa,wa,ka,Ta,Ia,Aa,Ra,Fa,Oa,Oa,za,za,La,Ba,Pa,Wa,Va,Ua,Ga,ja,Ha,qa,Ya,Qa,Ja];for(const n of er)(0,$a.kr)(n);var tr=n(3753),nr=n(9494);(0,nr.tp)().prototype.abs=function(){return this.throwIfDisposed(),(0,tr.t)(this)};var ar=n(4759);(0,nr.tp)().prototype.acos=function(){return this.throwIfDisposed(),(0,ar.H)(this)};var rr=n(983);(0,nr.tp)().prototype.acosh=function(){return this.throwIfDisposed(),(0,rr.F)(this)},(0,nr.tp)().prototype.add=function(e){return this.throwIfDisposed(),(0,rt.W)(this,e)};var sr=n(1802);(0,nr.tp)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,sr.Q)(this,e,t)};var or=n(1819);(0,nr.tp)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,or.b)(this,e,t)};var ir=n(3068);(0,nr.tp)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,ir.F)(this,e)};var cr=n(8482);(0,nr.tp)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,cr.X)(this,e)},(0,nr.tp)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,dt.vA)(1===this.size,(()=>"The array must have only 1 element.")),(0,Ze.t)(this,[])},(0,nr.tp)().prototype.asType=function(e){return this.throwIfDisposed(),(0,Le.w)(this,e)},(0,nr.tp)().prototype.as1D=function(){return this.throwIfDisposed(),(0,Ze.t)(this,[this.size])},(0,nr.tp)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,Ze.t)(this,[e,t])},(0,nr.tp)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,Ze.t)(this,[e,t,n])},(0,nr.tp)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,Ze.t)(this,[e,t,n,a])},(0,nr.tp)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Ze.t)(this,[e,t,n,a,r])};var lr=n(3010);(0,nr.tp)().prototype.asin=function(){return this.throwIfDisposed(),(0,lr.q)(this)};var ur=n(6464);(0,nr.tp)().prototype.asinh=function(){return this.throwIfDisposed(),(0,ur.y)(this)};var dr=n(7803);(0,nr.tp)().prototype.atan=function(){return this.throwIfDisposed(),(0,dr.r)(this)};var pr=n(6349);(0,nr.tp)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,pr.F)(this,e)};var hr=n(8147);(0,nr.tp)().prototype.atanh=function(){return this.throwIfDisposed(),(0,hr.r)(this)};var fr=n(8650);(0,nr.tp)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,fr.$)(this,e,t,n,a)},(0,nr.tp)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,Da.G)(this,e,t)};var mr=n(7237);(0,nr.tp)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,mr.$)(this,e,t,n,a,r)};var gr=n(4920);(0,nr.tp)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,gr.h)(this,e)},(0,nr.tp)().prototype.cast=function(e){return this.throwIfDisposed(),(0,Le.w)(this,e)};var yr=n(5396);(0,nr.tp)().prototype.ceil=function(){return this.throwIfDisposed(),(0,yr.m)(this)};var br=n(3829);(0,nr.tp)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,br.z)(this,e,t)},(0,nr.tp)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof nr.qY&&(e=[e]),(0,Ma.x)([this,...e],t)};var vr=n(9870);(0,nr.tp)().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,vr.k)(this,e,t,n,a,r,s)};var xr=n(1137);(0,nr.tp)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,xr.w)(this,e,t,n,a,r)},(0,nr.tp)().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,zt.X)(this,e,t,n,a,r,s)},(0,nr.tp)().prototype.cos=function(){return this.throwIfDisposed(),(0,Sa.g)(this)},(0,nr.tp)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Na.y)(this)},(0,nr.tp)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,aa.L)(this,e,t,n)},(0,nr.tp)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,qt.r)(this,e,t,n)};var wr=n(1719);(0,nr.tp)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,wr.R)(this,e,t)};var kr=n(9899);(0,nr.tp)().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,kr.G)(this,e,t,n,a,r,s)};var Sr=n(3789);(0,nr.tp)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,Sr.X)(this,e,t,n,a,r)};var Tr=n(44);(0,nr.tp)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Tr.e)(this,e)},(0,nr.tp)().prototype.div=function(e){return this.throwIfDisposed(),(0,Ve.y)(this,e)};var Nr=n(6434);(0,nr.tp)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Nr.O)(this,e)};var Ir=n(3645);(0,nr.tp)().prototype.elu=function(){return this.throwIfDisposed(),(0,Ir.P)(this)},(0,nr.tp)().prototype.equal=function(e){return this.throwIfDisposed(),(0,En.L)(this,e)};var Cr=n(8810);(0,nr.tp)().prototype.erf=function(){return this.throwIfDisposed(),(0,Cr.Y)(this)};var Er=n(8826);(0,nr.tp)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,Er.p)(this,e,t)},(0,nr.tp)().prototype.exp=function(){return this.throwIfDisposed(),(0,en.o)(this)},(0,nr.tp)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Ka.U)(this,e)};var Ar=n(2520);(0,nr.tp)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Ar.I)(this)};var Rr=n(3062);(0,nr.tp)().prototype.fft=function(){return this.throwIfDisposed(),(0,Rr.h)(this)},(0,nr.tp)().prototype.flatten=function(){return this.throwIfDisposed(),(0,Ze.t)(this,[this.size])},(0,nr.tp)().prototype.floor=function(){return this.throwIfDisposed(),(0,Gn.R)(this)};var _r=n(3612);(0,nr.tp)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,_r.w)(this,e)},(0,nr.tp)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,Xa.k)(this,e,t,n)},(0,nr.tp)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Nt.D)(this,e)},(0,nr.tp)().prototype.greater=function(e){return this.throwIfDisposed(),(0,wn.r)(this,e)};var Fr=n(1405);(0,nr.tp)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Fr.K)(this)};var Dr=n(7307);(0,nr.tp)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Dr.g)(this)};var Or=n(9027);(0,nr.tp)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Or.M)(this)};var Mr=n(6005);(0,nr.tp)().prototype.isInf=function(){return this.throwIfDisposed(),(0,Mr.E)(this)};var zr=n(3467);(0,nr.tp)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,zr.y)(this)};var Lr=n(8076);(0,nr.tp)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Lr.H)(this,e)},(0,nr.tp)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,It.I)(this,e)},(0,nr.tp)().prototype.less=function(e){return this.throwIfDisposed(),(0,_n.M)(this,e)};var Pr=n(6584);(0,nr.tp)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,Pr.K)(this,e,t,n,a)};var Br=n(4824);(0,nr.tp)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Br.n)(this)};var Wr=n(1194);(0,nr.tp)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,Wr.H)(this,e)};var Vr=n(2175);(0,nr.tp)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,Vr.V)(this,e,t)},(0,nr.tp)().prototype.log=function(){return this.throwIfDisposed(),(0,$n.R)(this)};var Ur=n(1386);(0,nr.tp)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Ur.K)(this)},(0,nr.tp)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Ct.n)(this,e)},(0,nr.tp)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,ya.N)(this)};var Gr=n(7920);(0,nr.tp)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Gr.z)(this,e)};var jr=n(3708);(0,nr.tp)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,jr.r)(this,e)},(0,nr.tp)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,bt.N)(this,e,t,n)};var Hr=n(6044);(0,nr.tp)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Hr.j)(this,e,t,n,a)};var qr=n(891);(0,nr.tp)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,qr.T)(this,e,t)},(0,nr.tp)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Za.P)(this,e)};var Yr=n(3015);(0,nr.tp)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Yr.i)(this,e,t)};var Kr=n(1465);(0,nr.tp)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,Kr.j)(this,e,t)};var Xr=n(6561);(0,nr.tp)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Xr.B)(this,e)};var Zr=n(4252);(0,nr.tp)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Zr.F)(this,e,t)};var Qr=n(3617);(0,nr.tp)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Qr.z)(this,e)},(0,nr.tp)().prototype.mul=function(e){return this.throwIfDisposed(),(0,Pe.l)(this,e)},(0,nr.tp)().prototype.neg=function(){return this.throwIfDisposed(),(0,Ue.H)(this)};var Jr=n(2155);(0,nr.tp)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Jr.x)(this,e,t,n)};var $r=n(135);(0,nr.tp)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,$r.E)(this,e)};var es=n(6865);(0,nr.tp)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,es.M)(this,e,t,n)};var ts=n(4100);(0,nr.tp)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,ts.P)(this)},(0,nr.tp)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Ca.e)(this,e,t)};var ns=n(7751);(0,nr.tp)().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,ns.d)(this,e,t,n,a,r,s)},(0,nr.tp)().prototype.pow=function(e){return this.throwIfDisposed(),(0,ea.n)(this,e)};var as=n(9855);(0,nr.tp)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,as.N)(this,e)};var rs=n(9556);(0,nr.tp)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,rs._)(this,e,t)};var ss=n(6309);(0,nr.tp)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,ss.V)(this)};var os=n(5251);(0,nr.tp)().prototype.relu=function(){return this.throwIfDisposed(),(0,os.V)(this)};var is=n(9721);(0,nr.tp)().prototype.relu6=function(){return this.throwIfDisposed(),(0,is.j)(this)},(0,nr.tp)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,Ze.t)(this,e.shape)},(0,nr.tp)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,Ze.t)(this,e)};var cs=n(2214);(0,nr.tp)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,cs.v)(this,e,t,n)};var ls=n(2823);(0,nr.tp)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,ls.b)(this,e,t,n)},(0,nr.tp)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,ha.B)(this,e)};var us=n(9486);(0,nr.tp)().prototype.rfft=function(){return this.throwIfDisposed(),(0,us.z)(this)};var ds=n(6509);(0,nr.tp)().prototype.round=function(){return this.throwIfDisposed(),(0,ds.L)(this)},(0,nr.tp)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,cn.Z)(this)};var ps=n(2022);(0,nr.tp)().prototype.selu=function(){return this.throwIfDisposed(),(0,ps.W)(this)};var hs=n(3117);(0,nr.tp)().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,hs.w)(this,e,t,n,a,r,s)},(0,nr.tp)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,_a.r)(this)};var fs=n(5740);(0,nr.tp)().prototype.sign=function(){return this.throwIfDisposed(),(0,fs._)(this)},(0,nr.tp)().prototype.sin=function(){return this.throwIfDisposed(),(0,Vt.F)(this)},(0,nr.tp)().prototype.sinh=function(){return this.throwIfDisposed(),(0,Gt.L)(this)},(0,nr.tp)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Vn.d)(this,e,t)};var ms=n(6719);(0,nr.tp)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,ms.V)(this,e)};var gs=n(9973);(0,nr.tp)().prototype.softplus=function(){return this.throwIfDisposed(),(0,gs.l)(this)},(0,nr.tp)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,xt.e)(this,e,t)},(0,nr.tp)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,_t.l)(this,e,t)},(0,nr.tp)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,je.R)(this)},(0,nr.tp)().prototype.square=function(){return this.throwIfDisposed(),(0,He.E)(this)};var ys=n(208);(0,nr.tp)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,ys.P)(this,e)};var bs=n(613);(0,nr.tp)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,bs.r)(this,e)},(0,nr.tp)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof nr.qY?[this,e]:[this,...e];return(0,dn.t)(n,t)},(0,nr.tp)().prototype.step=function(e){return this.throwIfDisposed(),(0,Be.P)(this,e)};var vs=n(1231);(0,nr.tp)().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),(0,vs.Y)(this,e,t,n,a,r,s,o,i)},(0,nr.tp)().prototype.sub=function(e){return this.throwIfDisposed(),(0,qe.j)(this,e)},(0,nr.tp)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,Qe.c)(this,e,t)};var xs=n(4894);(0,nr.tp)().prototype.tan=function(){return this.throwIfDisposed(),(0,xs.M)(this)};var ws=n(6532);(0,nr.tp)().prototype.tanh=function(){return this.throwIfDisposed(),(0,ws.y)(this)},(0,nr.tp)().prototype.tile=function(e){return this.throwIfDisposed(),(0,ln.V)(this,e)},(0,nr.tp)().prototype.toBool=function(){return this.throwIfDisposed(),(0,Le.w)(this,"bool")},(0,nr.tp)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,Le.w)(this,"float32")},(0,nr.tp)().prototype.toInt=function(){return this.throwIfDisposed(),(0,Le.w)(this,"int32")};var ks=n(2765);(0,nr.tp)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,ks.r)(this,e,t)},(0,nr.tp)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Yt.m)(this,e)};var Ss=n(9694);(0,nr.tp)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Ss.A)(this,e)},(0,nr.tp)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,pn.z)(this,e,t)},(0,nr.tp)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Zn.K)(this,e)},(0,nr.tp)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,Et._)(e,this,t)},(0,nr.tp)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,et.P)(this)};class Ts extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ts.prototype)}}class Ns extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ns.prototype)}}class Is extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Is.prototype)}}class Cs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Cs.prototype)}}class Es extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Es.prototype)}}Error;class As{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Rs(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function _s(e,t){if(!e)throw new Es(t)}function Fs(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Ds(e){return 1===e.length?e[0]:e}function Os(e){return Array.isArray(e)?e:[e]}function Ms(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function zs(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Ls={};function Ps(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Bs(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Bs(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Bs(t):e[n]=t.value)}}}function Ws(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Ls)s=Ls[r];else if(s=t[r],null==s)throw new Is("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new Is("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in Ls?[i,c]=Ls.className:o in t&&([i,c]=t[o]),null==i)throw new Is("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(Ls))e[n]=Ls[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},Ls);for(const r of Object.keys(n))Ls[r]=n[r];Bs(s.config);const a=c(i,s.config,n,r);return Ls=Object.assign({},t),a}{const e=Object.assign({},Ls);for(const a of Object.keys(n))Ls[a]=n[a];const t=new i(s.config);return Ls=Object.assign({},e),t}}}function Vs(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Us(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Gs(e){if(null==e)throw new Is("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function js(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Is("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function Hs(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return _s(n>=0),_s(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function qs(e,t){Array.isArray(e)?(Me.util.assert(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>qs(e,"element ".concat(n+1," of ").concat(t))))):Me.util.assert(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(Ys(e),".")))}function Ys(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ys(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function Ks(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Xs=0;function Zs(){return Xs++}const Qs={};function Js(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Qs||(Qs[e]=0),Qs[e]+=1,e+Qs[e].toString()}const $s=["channelsFirst","channelsLast"],eo=["nearest","bilinear"],to=["valid","same","causal"],no=["max","avg"],ao=["sum","mul","concat","ave"],ro=new Map;function so(e){js($s,"DataFormat",e)}function oo(e){js(to,"PaddingMode",e)}function io(e){js(no,"PoolMode",e)}const co=[],lo="/";function uo(e,t){co.push(e);try{const e=t();return co.pop(),e}catch(NE){throw co.pop(),NE}}function po(e){if(!mo(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===co.length?"":co.join(lo)+lo)+e}function ho(e){if(!mo(e))throw new Error("Not a valid tensor name: '"+e+"'");ro.has(e)||ro.set(e,0);const t=ro.get(e);if(ro.set(e,ro.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return ro.set(n,1),n}return e}const fo=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function mo(e){return!!e.match(fo)}function go(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function yo(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function bo(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function vo(e,t){if(t<e)throw new Is("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let xo;function wo(){return null==xo&&(xo=(0,Me.backend)().epsilon()),xo}function ko(e,t){return Me.cast(e,t)}function So(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Me.reshape(e,n)}function To(e,t,n){return(0,Me.tidy)((()=>{switch(e.rank){case 1:return Me.slice1d(e,t,n);case 2:return Me.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return Me.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Me.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Me.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Me.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Is("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function No(e,t,n){return(0,Me.tidy)((()=>{switch(e.rank){case 1:return Me.slice1d(e,t,n);case 2:return Me.slice2d(e,[0,t],[e.shape[0],n]);case 3:return Me.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Me.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Is("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Io(e,t,n,a){return(0,Me.tidy)((()=>{switch(e.rank){case 1:return Me.slice1d(e,t,n);case 2:switch(a){case 1:return To(e,t,n);case 2:return No(e,t,n);default:throw new Is("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return To(e,t,n);case 2:return Me.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return No(e,t,n);default:throw new Is("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return To(e,t,n);case 2:return Me.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Me.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return No(e,t,n);default:throw new Is("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new Is("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function Co(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),Me.concat(e,n)}function Eo(e,t){switch(e.rank){case 1:return Me.concat1d([e,t]);case 2:return Me.concat2d([e,t],0);case 3:return Me.concat3d([e,t],0);case 4:return Me.concat4d([e,t],0);default:throw new Is("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function Ao(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Is("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return Me.tile(e,t)}function Ro(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return Me.randomNormal(e,t,n,a,r)}function _o(e,t,n,a){if(e.rank<2||t.rank<2)throw new Cs("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Cs("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const r=!1,s=!1;return Me.fused.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?Oo(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=Me.reshape(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Me.reshape(Me.transpose(t,u),[c,-1]);const d=[...r,...l],p=!1,h=!1;return Me.reshape(Me.fused.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:a?Oo(e.rank,a,"channelsLast"):null,activation:n}),d)}}function Fo(e,t,n){return(0,Me.tidy)((()=>(t=Array.isArray(t)?(0,Me.tensor1d)(t,"int32"):Me.cast(t,"int32"),Me.gather(e,t,n))))}function Do(e){return Me.mul(e,e)}function Oo(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new Is("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?Me.reshape(t,[1,a[0],1,1,1]):Me.reshape(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?Me.reshape(t,[1,1,1,1,a[0]]):Me.reshape(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?Me.reshape(t,[1,a[0],1,1]):Me.reshape(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?Me.reshape(t,[1,1,1,a[0]]):Me.reshape(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?Me.reshape(t,[1,a[0],1]):Me.reshape(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?Me.reshape(t,[1,1,a[0]]):Me.reshape(t,[1].concat(a))}else if(e<3)return t;throw new Is("Unsupported input rank by biasAdd: ".concat(t.rank))}function Mo(e,t,n){return(0,Me.tidy)((()=>(null==n&&(n="channelsLast"),so(n),Me.add(e,Oo(e.rank,t,n)))))}function zo(e,t,n,a){return(0,Me.tidy)((()=>Me.dropout(e,t,n,a)))}function Lo(e,t){return arguments.length>2&&void 0!==arguments[2]&&arguments[2]?e():t()}const Po=["fanIn","fanOut","fanAvg"],Bo=["normal","uniform","truncatedNormal"];class Wo extends Me.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Vo extends Wo{apply(e,t){return(0,Me.zeros)(e,t)}}Vo.className="Zeros",Me.serialization.registerClass(Vo);class Uo extends Wo{apply(e,t){return(0,Me.ones)(e,t)}}Uo.className="Ones",Me.serialization.registerClass(Uo);class Go extends Wo{constructor(e){if(super(),"object"!==typeof e)throw new Is("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new Is("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,Me.tidy)((()=>(0,Me.mul)((0,Me.scalar)(this.value),(0,Me.ones)(e,t))))}getConfig(){return{value:this.value}}}Go.className="Constant",Me.serialization.registerClass(Go);class jo extends Wo{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,Me.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}jo.className="RandomUniform",Me.serialization.registerClass(jo);class Ho extends Wo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Cs("randomNormal does not support dType ".concat(t,"."));return Ro(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ho.className="RandomNormal",Me.serialization.registerClass(Ho);class qo extends Wo{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Cs("truncatedNormal does not support dType ".concat(t,"."));return(0,Me.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qo.className="TruncatedNormal",Me.serialization.registerClass(qo);class Yo extends Wo{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,Me.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new Is("Identity matrix initializer can only be used for 2D square matrices.");return(0,Me.mul)(this.gain,(0,Me.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}Yo.className="Identity",Me.serialization.registerClass(Yo);class Ko extends Wo{constructor(e){if(super(),e.scale<0)throw new Is("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,js(Po,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){js(Bo,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(so(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=go(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=go(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=go(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Cs("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,Me.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return(0,Me.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ko.className="VarianceScaling",Me.serialization.registerClass(Ko);class Xo extends Ko{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}Xo.className="GlorotUniform",Me.serialization.registerClass(Xo);class Zo extends Ko{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}Zo.className="GlorotNormal",Me.serialization.registerClass(Zo);class Qo extends Ko{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}Qo.className="HeNormal",Me.serialization.registerClass(Qo);class Jo extends Ko{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}Jo.className="HeUniform",Me.serialization.registerClass(Jo);class $o extends Ko{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}$o.className="LeCunNormal",Me.serialization.registerClass($o);class ei extends Ko{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ko.className}}ei.className="LeCunUniform",Me.serialization.registerClass(ei);class ti extends Wo{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,Me.tidy)((()=>{if(e.length<2)throw new Cs("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=Me.util.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=Ro([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=Me.linalg.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=(0,Me.mul)(i,c.sign()),n<a&&(i=i.transpose()),(0,Me.mul)((0,Me.scalar)(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ti.className="Orthogonal",Me.serialization.registerClass(ti);const ni={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ai(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ws(e,Me.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function ri(e){return Ps(e)}function si(e){if("string"===typeof e){const t=e in ni?ni[e]:e;if("GlorotNormal"===t)return new Zo;if("GlorotUniform"===t)return new Xo;if("HeNormal"===t)return new Qo;if("HeUniform"===t)return new Jo;if("LeCunNormal"===t)return new $o;if("LeCunUniform"===t)return new ei;{const e={};return e.className=t,e.config={},ai(e)}}return e instanceof Wo?e:ai(e)}function oi(e){return Array.isArray(e)&&Array.isArray(e[0])}function ii(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function ci(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Is("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function li(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Is("Expected exactly 1 Shape; got ".concat(e.length))}return e}function ui(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const di="Variable";class pi{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:di,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Zs(),n=null==n?di:n,this.originalName=po(n),this.name=ho(this.originalName),this.trainable_=a,this.constraint=r,this.val=Me.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function hi(e){return e.map((e=>e.read()))}function fi(e){e.forEach((e=>{e[0].write(e[1])}))}class mi{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class gi{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=Zs(),null!=s&&(this.originalName=po(s),this.name=ho(this.originalName)),this.rank=t.length}}let yi=0;class bi{constructor(e,t){this.callArgs=t,this.id=yi++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let vi=0;class xi extends Me.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=vi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ms(e)+"_"+Js(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ns("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new Is("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return Ds(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Ds(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ts("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new Ts("Layer ".concat(this.name)+" is not connected, no input to return.");return Ds(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ts("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new Ts("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return Ds(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Os(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Os(this.inputSpec);if(t.length!==n.length)throw new Is("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new Is("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new Is("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new Is("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new Is("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new Is("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new Is("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Os(e),a=function(e){let t=!0;for(const n of Os(e))if(!(n instanceof gi)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of Os(e))if(n instanceof gi){t=!1;break}return t}(e);if(a===r)throw new Is("Arguments to apply() must be all SymbolicTensors or all Tensors");return uo(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Os(e))t.push(n.shape);this.build(Ds(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=Os(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Ds(s),null!=this.activityRegularizer)throw new Cs("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Os(e);const t=[];for(const n of e)t.push(n.shape);return Ds(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new gi(s,n,this,Os(e),t,this.name,a))):new gi(s,a,this,Os(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new Cs("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ts("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ts("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new Ns("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return ui(this.weights)}build(e){this.built=!0}getWeights(){return hi(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,Me.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new Is('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=hi(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!Me.util.arraysEqual(s.shape,i.shape))throw new Is("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}fi(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Is("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():si("zeros"));const c=a.apply(t,n),l=new pi(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Os(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=Os(t),s=Os(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=Os(e);t=Os(t),n=Os(n),a=Os(a),r=ii(r),s=ii(s);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new bi({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function wi(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=wi(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class ki extends xi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Js("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Is("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Is("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Is("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new gi(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new bi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Is("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ki.className="InputLayer",Me.serialization.registerClass(ki);class Si{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Si)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Is("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,Me.cast)(t,e.dtype)}catch(n){throw new Is("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof gi){if(null==this.id2Value[e.id])throw new Is("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Is("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof gi){if(null==this.id2Value[e.id])throw new Is("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Is("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,Me.dispose)(this.id2Mask)}}const Ti=new As,Ni=new As;function Ii(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?c.push(t.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let d,p=Ti.get(u);if(null==p){const e=function(e,t){Me.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Ei(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=Ei(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Ci(a)}}(o,t);p=e.sorted,d=e.recipientCounts,Ti.put(u,p),Ni.put(u,d)}d={},r||Object.assign(d,Ni.get(u));const h=new Si(t);for(let f=0;f<p.length;++f){if(null!=a){const e=(0,Me.memory)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=p[f],s=e.sourceLayer;if(s instanceof ki)continue;const o=[],l=[],u=[];let m=!1;for(const n of e.inputs){const e=h.getValue(n),a=h.getMask(n);o.push(e),l.push(a),null!=a&&(m=!0),r||(d[n.name]--,0!==d[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}m&&((n=n||{}).mask=l[0]);const g=Os(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=Ai(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){h.hasKey(v[t])||h.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(v[t].name);-1!==e&&(c[e]=g[t])}r||(0,Me.dispose)(u)}return h.disposeMasks(),s?c:c[0]}function Ci(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ei(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Ai(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Ri(e,t){return(0,Me.tidy)((()=>Me.sqrt(Me.sum(Me.mul(e,e),t,!0))))}(0,Me.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ti&&Ti.setMaxEntries(e),null!=Ni&&Ni.setMaxEntries(e)}));class _i extends Me.serialization.Serializable{getConfig(){return{}}}class Fi extends _i{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,Me.tidy)((()=>{const t=Ri(e,this.axis),n=Me.clipByValue(t,0,this.maxValue);return Me.mul(e,Me.div(n,Me.add(wo(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Fi.className="MaxNorm",Me.serialization.registerClass(Fi);class Di extends _i{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,Me.tidy)((()=>Me.div(e,Me.add(wo(),Ri(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Di.className="UnitNorm",Me.serialization.registerClass(Di);class Oi extends _i{apply(e){return Me.relu(e)}}Oi.className="NonNeg",Me.serialization.registerClass(Oi);class Mi extends _i{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,Me.tidy)((()=>{const t=Ri(e,this.axis),n=Me.add(Me.mul(this.rate,Me.clipByValue(t,this.minValue,this.maxValue)),Me.mul(1-this.rate,t));return Me.mul(e,Me.div(n,Me.add(wo(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Mi.className="MinMaxNorm",Me.serialization.registerClass(Mi);const zi={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Li(e){return Ps(e)}function Pi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ws(e,Me.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function Bi(e){if(null==e)return null;if("string"===typeof e){return Pi({className:e in zi?zi[e]:e,config:{}})}return e instanceof _i?e:Pi(e)}async function Wi(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,Me.dispose)(a)}}function Vi(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Ui;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ui||(Ui={}));class Gi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ji{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Hi extends Gi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=(0,Me.tidy)((()=>(0,Me.add)(this.totals[a],(0,Me.mul)(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,Me.tidy)((()=>{const e=(0,Me.mul)((0,Me.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,Me.keep)(t[n])})))}}class qi extends Gi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class Yi extends Gi{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Me.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Me.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():Me.util.now();return function(){const s=null!=n?n():Me.util.now();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await Wi(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Wi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Wi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Wi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Wi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Me.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Wi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Wi(e),await this.trainEnd(e))}}function Ki(e,t){if(null==e&&(e={}),e instanceof Gi)return[e];if(Array.isArray(e)&&e[0]instanceof Gi)return e;return Os(e).map((e=>new Yi(e,t)))}class Xi{constructor(){}static registerCallbackConstructor(e,t){Me.util.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),Xi.checkForDuplicate(t),null==Xi.constructors[e]&&(Xi.constructors[e]=[]),Xi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Xi.constructors){Xi.constructors[+t].forEach((t=>{if(t===e)throw new Is("Duplicate callback constructor.")}))}}static clear(){Xi.constructors={}}static createCallbacks(e){const t=[];for(const n in Xi.constructors){const a=+n;e>=a&&t.push(...Xi.constructors[a])}return t.map((e=>new e))}}function Zi(e,t,n,a,r,s,o,i,c){const l=new qi,u=[new Hi,...Xi.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new ji(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function Qi(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Ws(e,Me.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ji(e,t){return(0,Me.tidy)((()=>{"float32"!==e.dtype&&(e=Me.cast(e,"float32"));const n=Me.sum(Do(e),t,!0),a=Me.fill(n.shape,wo()),r=Me.sqrt(Me.maximum(n,a));return Me.div(e,r)}))}function $i(e,t){return(0,Me.tidy)((()=>Me.mean(Do(Me.sub(t,e)),-1)))}function ec(e,t){return(0,Me.tidy)((()=>Me.mean(Me.abs(Me.sub(t,e)),-1)))}function tc(e,t){return(0,Me.tidy)((()=>{const n=Me.sub(e,t),a=Me.clipByValue(Me.abs(e),wo(),Number.MAX_VALUE),r=Me.abs(Me.div(n,a));return Me.mul(100,Me.mean(r,-1))}))}function nc(e,t){return(0,Me.tidy)((()=>{const n=Me.clipByValue(t,wo(),Number.MAX_VALUE),a=Me.log(Me.add(1,n)),r=Me.clipByValue(e,wo(),Number.MAX_VALUE),s=Me.log(Me.add(1,r));return Me.mean(Do(Me.sub(a,s)),-1)}))}function ac(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,Me.tidy)((()=>{if(n)t=Me.softmax(t);else{const e=Me.sum(t,t.shape.length-1,!0);t=Me.div(t,e)}return t=Me.clipByValue(t,wo(),1-wo()),Me.neg(Me.sum(Me.mul(Me.cast(e,"float32"),Me.log(t)),t.shape.length-1))}))}function rc(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,Me.tidy)((()=>{const a=Me.cast(Me.floor(function(e){const t=[go(e.shape)];return Me.reshape(e,t)}(e)),"int32"),r=(t=Me.clipByValue(t,wo(),1-wo())).shape;return ac(Me.reshape(Me.oneHot(a,r[r.length-1]),r),t,n)}))}function sc(e,t){return(0,Me.tidy)((()=>{let n;return n=Me.clipByValue(t,wo(),1-wo()),n=Me.log(Me.div(n,Me.sub(1,n))),Me.mean(function(e,t){if(!Me.util.arraysEqual(e.shape,t.shape))throw new Is("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,Me.tidy)((()=>{const n=Me.relu(t),a=Me.neg(Me.abs(t));return Me.add(Me.sub(n,Me.mul(t,e)),Me.log1p(Me.exp(a)))}))}(e,n),-1)}))}function oc(e,t){return(0,Me.tidy)((()=>{const n=Me.clipByValue(e,wo(),1),a=Me.clipByValue(t,wo(),1);return Me.sum(Me.mul(e,Me.log(Me.div(n,a))),-1)}))}function ic(e,t){return(0,Me.tidy)((()=>{const n=Ji(e,-1),a=Ji(t,-1),r=Me.mul(n,a);return Me.neg(Me.sum(r,-1))}))}Xi.constructors={};const cc={meanSquaredError:$i,meanAbsoluteError:ec,meanAbsolutePercentageError:tc,meanSquaredLogarithmicError:nc,squaredHinge:function(e,t){return(0,Me.tidy)((()=>{const n=Me.maximum(0,Me.sub(1,Me.mul(e,t)));return Me.mean(Do(n),-1)}))},hinge:function(e,t){return(0,Me.tidy)((()=>{const n=Me.maximum(0,Me.sub(1,Me.mul(e,t)));return Me.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,Me.tidy)((()=>{const n=Me.sum(Me.mul(e,t),-1),a=Me.max(Me.mul(Me.sub(1,e),t),-1);return Me.maximum(0,Me.add(1,Me.sub(a,n)))}))},logcosh:function(e,t){return(0,Me.tidy)((()=>{const n=Math.log(2),a=Me.sub(t,e),r=Me.sub(Me.add(a,Me.softplus(Me.mul(-2,a))),n);return Me.mean(r,-1)}))},categoricalCrossentropy:ac,sparseCategoricalCrossentropy:rc,binaryCrossentropy:sc,kullbackLeiblerDivergence:oc,poisson:function(e,t){return(0,Me.tidy)((()=>{const n=Me.log(Me.add(wo(),t));return Me.mean(Me.sub(t,Me.mul(e,n)),-1)}))},cosineProximity:ic};function lc(e){if("string"===typeof e){if(e in cc)return cc[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new Is(t)}return e}function uc(e,t){return(0,Me.tidy)((()=>{const n=Me.mul(.5,Me.onesLike(t)),a=ko(Me.greater(t,n),e.dtype);return Me.mean(Me.equal(e,a),-1)}))}function dc(e,t){return(0,Me.tidy)((()=>ko(Me.equal(Me.argMax(e,-1),Me.argMax(t,-1)),"float32")))}function pc(e,t){return(0,Me.tidy)((()=>Me.cast(Me.sum(Me.logicalAnd(Me.equal(e,1),Me.equal(t,1))),"float32")))}function hc(e,t){return sc(e,t)}function fc(e,t){return e.rank===t.rank&&(e=Me.squeeze(e,[e.rank-1])),(t=Me.argMax(t,-1)).dtype!==e.dtype&&(t=Me.cast(t,e.dtype)),Me.cast(Me.equal(e,t),"float32")}const mc=ac,gc=rc,yc={binaryAccuracy:uc,categoricalAccuracy:dc,precision:function(e,t){return(0,Me.tidy)((()=>{const n=pc(e,t),a=function(e,t){return(0,Me.tidy)((()=>Me.cast(Me.sum(Me.logicalAnd(Me.equal(e,0),Me.equal(t,1))),"float32")))}(e,t),r=Me.add(n,a);return Me.cast(Me.where(Me.greater(r,0),Me.div(n,r),0),"float32")}))},categoricalCrossentropy:mc,sparseCategoricalCrossentropy:gc,mse:$i,MSE:$i,mae:ec,MAE:ec,mape:tc,MAPE:tc,cosine:ic};function bc(e){if("string"===typeof e&&e in yc)return yc[e];if("string"!==typeof e&&null!=e)return e;throw new Is("Unknown metric ".concat(e))}function vc(e){if(_s(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(cc))if(cc[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(yc))if(yc[n]===e){t=n;break}return void 0!==t?t:e.name}}const xc=1048576;function wc(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!kc(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>xc&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(xc,"."))}}function kc(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!kc(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!kc(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Sc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),Tc(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?Nc(i[u],n,a):Ic(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=function(e){let t;t=null!=e.collectedTrainableWeights?ui(e.collectedTrainableWeights):ui(e.trainableWeights);return t}(e),l=ui(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}function Tc(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Nc(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const s=e.name,o=e.getClassName();Tc(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function Ic(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(u){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];Tc(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let d=1;d<o.length;++d)Tc(["","","","",o[d]],t,a)}function Cc(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Ec(e,t){if(null===e)return null;if("string"===typeof e)return zs(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Cc(t,r,a)?n.push(a):n.push(Ec(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=zs(n);t[e]=Ec(a,e)}}return t}}function Ac(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Ms(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Cc(t,r,a)?n.push(a):n.push(Ac(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Ms(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?Ac(a,n):a}return t}}const Rc="4.19.0";class _c extends xi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Js(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Us(this.inputs).length!==this.inputs.length)throw new Is("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));Us(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;_s(0===t,"input layer has >1 nodes"),_s(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof ki))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new Ns("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(_c.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const p={};for(const y in a){const e=a[y];e in p||(p[e]=[]),p[e].push(r[y])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(Vs);this.layers=[];for(const y of h){const e=p[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof _c&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,h=Object.keys(d).map((e=>parseInt(e,10))).sort(Vs);const f=this.inputs.slice(),m=[];for(const y of h)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ns("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Ns('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new bi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Is("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new Is("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new Is("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Is("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}fi(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(Rc),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=Ac(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,Me.tidy)((()=>{e=Os(e);const n=new Si;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ii(this.outputs,n,t)}))}computeMask(e,t){return(0,Me.tidy)((()=>{let n;return e=Os(e),n=null==t?Rs(null,e.length):Os(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=ii(e);if(t.length!==this.inputLayers.length)throw new Is("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Vs);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=ii(e.computeOutputShape(Ds(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];_s(e in n),r.push(n[e])}return Ds(r)}runInternalGraph(e,t){null==t&&(t=Rs(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Vs);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=Os(e.call(t,l)),c=Os(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=Os(e.call(a,l)),c=Os(e.computeMask(a,o));if(e.activityRegularizer)throw new Cs("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){_s(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof _c?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=_c.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Is("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new Is("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new Is("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,Me.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=_c.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=_c.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let c=t[_c.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=_c.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=_c.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(Ds(n),r)}function i(e){const r=e.name,o=Qi(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Is("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!Gs(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],d=[],p=t.inputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];_s(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const h=t.outputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];_s(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new Is("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,Me.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fc(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Dc(e,t){return Fc(e,t,"classWeight")}async function Oc(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,Me.tidy)((()=>{if(1===e.shape.length)return(0,Me.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,Me.argMax)(e,t)}if(1===e.shape[1])return(0,Me.reshape)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());(0,Me.dispose)(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),(0,Me.tensor1d)(r,"float32")}return null}function Mc(e,t){return(0,Me.mul)(e,t)}function zc(e,t){let n,a;const r=t;n=r.xs,a=r.ys,Me.util.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Lc("input",e.inputNames,n),o=Lc("output",e.outputNames,a),i=s[0].shape[0];Me.util.assert(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),Me.util.assert(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<s.length;c++)Me.util.assert(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)Me.util.assert(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Lc(e,t,n){if(n instanceof Me.Tensor)return[n];if(Array.isArray(n))return Me.util.assert(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new Is("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Pc(e,t,n){const a=null!=n.batchesPerEpoch;if(Me.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Me.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Me.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),Me.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),Me.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(Bc(n.validationData))Me.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new Cs("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=Ki(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:h}=Zi(u,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let u=0,d=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=zc(e,t.value),s={};s.batch=d,s.size=a[0].shape[0],await p.onBatchBegin(d,s);const o=[];if(null!=n.classWeight){const t=Dc(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Oc(r[e],null,t[e]))}const l=a.concat(r).concat(o),h=i(l);Me.dispose(l);for(let e=0;e<c.length;++e){const t=c[e],n=h[e];s[t]=n,Me.keep(n)}await p.onBatchEnd(d,s),Vi(s),d++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=Bc(n.validationData)?Os(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Os(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Bc(e){return"function"===typeof e.iterator}function Wc(e){Me.util.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function Vc(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>To(e,t,n-t))):To(e,t,n-t)}function Uc(e,t){return Me.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>Uc(e,t))):Fo(e,"int32"===t.dtype?t:Me.cast(t,"int32"))))}function Gc(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function jc(e){const t=[];e instanceof Me.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(So(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Hc(e,t){if(null==e)return;const n=[];if(t instanceof Me.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Me.Tensor)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function qc(e){return Array.isArray(e)}function Yc(e){return!function(e){return e instanceof Me.Tensor}(e)&&!qc(e)}function Kc(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(qc(e)&&e.length>0)t=!0;else if(Yc(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Is("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(Yc(e)){a=[];for(const n of t){if(null==e[n])throw new Is('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(qc(e)){if(e.length!==t.length)throw new Is("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new Is("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=jc(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Is("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new Is("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function Xc(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new Is("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new Is("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new Is("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new Is("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class Zc extends _c{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new Is("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Sc(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Me.train.adagrad(.01),Adadelta:()=>Me.train.adadelta(1,.95,wo()),Adam:()=>Me.train.adam(.001,.9,.999,wo()),Adamax:()=>Me.train.adamax(.002,.9,.999,wo(),0),RMSProp:()=>Me.train.rmsprop(.001,.9,0,wo()),SGD:()=>Me.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Is("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Me.Optimizer))throw new Is("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Is("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>lc(e)))}else{const n=lc(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Is('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(lc(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],uo("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};uo("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===sc?-1!==["accuracy","acc"].indexOf(o)?a=uc:-1!==["crossentropy","ce"].indexOf(o)&&(a=hc):this.lossFunctions[e]===rc?-1!==["accuracy","acc"].indexOf(o)?a=fc:-1!==["crossentropy","ce"].indexOf(o)&&(a=gc):-1!==["accuracy","acc"].indexOf(o)?a=dc:-1!==["crossentropy","ce"].indexOf(o)&&(a=mc),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=bc(o);s=e,n=""+vc(o)}let t;uo(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Wc(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const e=r[0].concat(r[1]);this.makeTestFunction();const t=this.testFunction;return Ds(this.testLoop(t,e,a,n.verbose,n.steps))}finally{Hc(r[0],e),Hc(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new Cs("Verbose mode is not implemented yet.");Me.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await o.next();if(s=Me.tidy((()=>{if(t.value){const{xs:n,ys:a}=zc(e,t.value),o=n.concat(a),l=Me.tidy((()=>r(o)));if(Me.dispose(o),0===c)for(let e=0;e<l.length;++e)s.push((0,Me.scalar)(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Me.tidy((()=>Me.add(s[e],Me.mul(u,t)))),c>0&&Me.dispose(n)}Me.dispose(l),i+=u,++c}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=Me.div(s[l],i),Me.dispose(e)}return Ds(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new Is("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new Is("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Is("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new Si;if(e instanceof Me.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Is("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new Is("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=Ii(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Rs(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new Is("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Me.tidy((()=>{const a=this.checkNumSamples(e);if(n)throw new Cs("Verbose predictLoop() is not implemented yet.");const r=Gc(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){Me.tidy((()=>{const n=r[t][0],a=r[t][1],s=Vc(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new Si(o);return Ii(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return Ds(s.map((e=>Me.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=jc(e);Xc(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Wc(e),this.predictLoop(n,e)}finally{Hc(n,e)}}predictOnBatch(e){Xc(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new Ns("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===rc?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=Us(e.map((e=>e.shape[0])));a.sort();const r=Us(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new Is("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new Is("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!Me.util.arraysEqual(a,r))throw new Is("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=Kc(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Kc(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[$i,sc,ac];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===ac&&1===s.shape[s.shape.length-1])throw new Is("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new Is("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new Is("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=Dc(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await Oc(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return Me.tidy((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new Cs("Verbose mode is not implemented yet.");if(null!=r)throw new Cs("steps mode in testLoop() is not implemented yet");{const a=Gc(s,n),r=(0,Me.tensor1d)(vo(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=To(r,s,i-s),l=Uc(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push((0,Me.scalar)(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=Me.add(o[e],Me.mul(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=Me.div(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Fs(e,a)>1){const t=Fs(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new Si(e),i=Ii(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=Mc(e,r[n]));const s=Me.mean(e);t.push(s),c=0===n?e:Me.add(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=Me.mean(t(a[r],i[r]))}Me.keep(e),s.push(e)}return c=Me.mean(c),this.calculateLosses().forEach((e=>{c=Me.add(c,e)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>Me.tidy((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new Si(s),i=Ii(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=Me.mean(a(r[e],i[e]));n=0===e?s:Me.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=Me.mean(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,c,l,u,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const p=null==d.batchSize?32:d.batchSize;Wc(p);const h=!1,f=await this.standardizeUserData(e,t,d.sampleWeight,d.classWeight,h,p);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=d.validationData&&d.validationData.length>0){if(g=!0,2!==d.validationData.length)throw 3===d.validationData.length?new Cs("validationData including sample weights is not supported yet."):new Is("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(d.validationData," is invalid."));o=d.validationData[0],i=d.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,p);c=t[0],l=t[1],m=c.concat(l)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-d.validationSplit)),t=n[0].shape[0];c=Vc(n,e,t),r=n,n=Vc(n,0,e),l=Vc(a,e,t),s=a,a=Vc(a,0,e),m=c.concat(l)}else null!=d.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=Ki(d.callbacks,d.yieldEvery);return await this.fitLoop(b,y,v,p,d.epochs,d.verbose,k,x,m,d.shuffle,w,d.initialEpoch,null,null)}finally{this.isTraining=!1,Hc(n,e),Hc(a,t),Hc(r,e),Hc(s,t),Hc(c,o),Hc(l,i),null!=u&&Me.dispose(u)}}async fitLoop(e,t,n,a,r,s,o,i,c,l,u,d,p,h){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==d&&(d=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=h&&(f=!0,null==p))throw new Is("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,p,"steps_per_epoch");let g;null!=m&&(g=vo(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=Zi(o,s,r,d,m,p,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await y.onEpochBegin(v);const r={};if(null!=p)throw new Cs("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Cs("batch shuffling is not implemneted yet");l&&Me.util.shuffle(g);const s=(0,Me.tensor1d)(g),o=Gc(m,a);for(let l=0;l<o.length;++l){const u={};if(await y.onBatchBegin(l,u),Me.tidy((()=>{const d=o[l][0],p=o[l][1],h=To(s,d,p-d);u.batch=l,u.size=p-d;const m=Uc(t,h),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];u[t]=a,Me.keep(a)}if(l===o.length-1&&f){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];Me.keep(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,u),Vi(u),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(v,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Pc(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return Me.dispose(s),Hc(n[0],e),Hc(n[1],t),Ds(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Me.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Me.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Ms(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ms(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Ms(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Ms(vc(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ms(vc(e))));{const e={};for(const t in this.metrics)e[t]=Ms(vc(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Qi(Ec(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=zs(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>zs(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=zs(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>zs(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=zs(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Me.io.getSaveHandlers(e);if(0===t.length)throw new Is("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Is("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Is("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Me.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(Rc),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Me.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Me.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;wc(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){wc(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Zc.className="Model",Me.serialization.registerClass(Zc);class Qc extends Zc{}Qc.className="Functional",Me.serialization.registerClass(Qc);class Jc extends Zc{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Js("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Is("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Jc||e instanceof Zc;let n;if(t){if(n=e,1!==n.outputs.length)throw new Is("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Is("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Is("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Is("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new ki({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Is("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new Is("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=wi(this.outputs[0])}this.inboundNodes=[],new bi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Rs(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(li(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Zc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ns("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ns("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new Ns("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ns("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Is("Legacy serialization format not supported yet.");n=t}else Me.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof Jc))throw new Cs("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=Qi(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new Is("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Is("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Jc.className="Sequential",Me.serialization.registerClass(Jc);class $c extends Me.serialization.Serializable{getConfig(){return{}}}class el extends $c{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new Cs("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return Me.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}el.className="elu",Me.serialization.registerClass(el);class tl extends $c{apply(e){return Me.selu(e)}}tl.className="selu",Me.serialization.registerClass(tl);class nl extends $c{apply(e){return Me.relu(e)}}nl.className="relu",Me.serialization.registerClass(nl);class al extends $c{apply(e){return(0,Me.tidy)((()=>Me.minimum(6,Me.relu(e))))}}al.className="relu6",Me.serialization.registerClass(al);class rl extends $c{apply(e){return e}}rl.className="linear",Me.serialization.registerClass(rl);class sl extends $c{apply(e){return Me.sigmoid(e)}}sl.className="sigmoid",Me.serialization.registerClass(sl);class ol extends $c{apply(e){return function(e){return(0,Me.tidy)((()=>{const t=Me.add(.5,Me.mul(.2,e));return Me.clipByValue(t,0,1)}))}(e)}}ol.className="hardSigmoid",Me.serialization.registerClass(ol);class il extends $c{apply(e){return Me.softplus(e)}}il.className="softplus",Me.serialization.registerClass(il);class cl extends $c{apply(e){return function(e){return(0,Me.tidy)((()=>Me.div(e,Me.add(Me.abs(e),1))))}(e)}}cl.className="softsign",Me.serialization.registerClass(cl);class ll extends $c{apply(e){return Me.tanh(e)}}ll.className="tanh",Me.serialization.registerClass(ll);class ul extends $c{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return Me.softmax(e,t)}}ul.className="softmax",Me.serialization.registerClass(ul);class dl extends $c{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return Me.logSoftmax(e,t)}}dl.className="logSoftmax",Me.serialization.registerClass(dl);class pl extends $c{apply(e){return(0,Me.tidy)((()=>Me.tidy((()=>{const t=Math.sqrt(2),n=Me.mul(.5,Me.add(1,Me.erf(Me.div(e,t))));return Me.mul(e,n)}))))}}pl.className="gelu",Me.serialization.registerClass(pl);class hl extends $c{apply(e){return(0,Me.tidy)((()=>Me.mul(.5,Me.mul(e,Me.add(1,Me.tanh(Me.mul(Me.sqrt(Me.div(2,Math.PI)),Me.add(e,Me.mul(.044715,Me.pow(e,3))))))))))}}hl.className="gelu_new",Me.serialization.registerClass(hl);class fl extends $c{apply(e){return(0,Me.tidy)((()=>Me.mul(e,Me.tanh(Me.softplus(e)))))}}fl.className="mish",Me.serialization.registerClass(fl);class ml extends $c{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,Me.tidy)((()=>Me.mul(Me.sigmoid(Me.mul(e,t)),e)))}}function gl(e){return e.getClassName()}function yl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ws(e,Me.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function bl(e){if(null==e){const e={className:"linear",config:{}};return yl(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},yl(t)}return e instanceof $c?e:yl(e)}function vl(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}ml.className="swish",Me.serialization.registerClass(ml);class xl extends Me.serialization.Serializable{}class wl extends xl{constructor(e){super(),vl(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,Me.tidy)((()=>{let t=(0,Me.zeros)([1]);return this.hasL1&&(t=(0,Me.add)(t,(0,Me.sum)(Me.mul(this.l1,(0,Me.abs)(e))))),this.hasL2&&(t=(0,Me.add)(t,(0,Me.sum)(Me.mul(this.l2,Do(e))))),Me.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}wl.className="L1L2",Me.serialization.registerClass(wl);const kl={l1l2:"L1L2"};function Sl(e){return Ps(e)}function Tl(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Ws(e,Me.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function Nl(e){if(null==e)return null;if("string"===typeof e){return Tl({className:e in kl?kl[e]:e,config:{}})}return e instanceof xl?e:Tl(e)}class Il extends xi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=ci(e);let n=(0,Me.relu)(e);return null!=this.maxValue&&(n=(0,Me.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Il.className="ReLU",Me.serialization.registerClass(Il);class Cl extends xi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ci(e);return(0,Me.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Cl.className="LeakyReLU",Me.serialization.registerClass(Cl);class El extends xi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=si(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Nl(e.alphaRegularizer),this.alphaConstraint=Bi(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new Is("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=li(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new mi({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=ci(e),(0,Me.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ri(this.alphaInitializer),alphaRegularizer:Sl(this.alphaRegularizer),alphaConstraint:Li(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}El.className="PReLU",Me.serialization.registerClass(El);class Al extends xi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Cs("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=ci(e);return(0,Me.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Al.className="ELU",Me.serialization.registerClass(Al);class Rl extends xi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=ci(e);return(0,Me.mul)(n,(0,Me.cast)((0,Me.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Rl.className="ThresholdedReLU",Me.serialization.registerClass(Rl);class _l extends xi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ul).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,Me.tidy)((()=>{let n=ci(e);const a=t.mask;if(null!=a){const e=(0,Me.mul)((0,Me.sub)((0,Me.ones)(n.shape),(0,Me.cast)(a,n.dtype)),(0,Me.scalar)(-1e9));n=(0,Me.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,Me.exp)((0,Me.sub)(n,(0,Me.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Fl(e,t,n){if("number"===typeof e)return Rs(e,t);if(e.length!==t)throw new Is("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new Is("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function Dl(e,t,n,a){if(null==e)return e;let r;return r="same"===n?e:e-(t+(t-1)*((arguments.length>4&&void 0!==arguments[4]?arguments[4]:1)-1))+1,Math.floor((r+a-1)/a)}function Ol(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+bo([n-t,0]);else{if("same"!==a)throw new Is("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function Ml(e,t){return(0,Me.tidy)((()=>(so(t),"channelsFirst"===t?Me.transpose(e,[0,2,3,1]):e)))}function zl(e,t){return(0,Me.tidy)((()=>(so(t),"channelsFirst"===t?Me.transpose(e,[0,2,3,4,1]):e)))}function Ll(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,Me.tidy)((()=>{if(null==s&&(s="channelsLast"),so(s),3!==e.shape.length)throw new Is("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new Is("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new Is("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=Me.transpose(e,[0,2,1])),"causal"===r)throw new Cs("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Me.conv1d(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=Mo(i,n)),i}))}function Pl(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,Me.tidy)((()=>{if(null==s&&(s="channelsLast"),so(s),3!==e.rank&&4!==e.rank)throw new Is("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new Is("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=Ml(e,s);if("causal"===r)throw new Cs("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=Me.fused.conv2d({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=Me.transpose(c,[0,3,1,2])),c}))}function Bl(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return(0,Me.tidy)((()=>{if(null==s&&(s="channelsLast"),so(s),4!==e.rank&&5!==e.rank)throw new Is("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new Is("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=zl(e,s);if("causal"===r)throw new Cs("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=Me.conv3d(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=Mo(i,n)),"channelsFirst"===s&&(i=Me.transpose(i,[0,4,1,2,3])),i}))}_l.className="Softmax",Me.serialization.registerClass(_l);class Wl extends xi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Wl.verifyArgs(t),this.rank=e,qs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Cs("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=Fl(t.kernelSize,e,"kernelSize"),this.strides=Fl(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,oo(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,so(this.dataFormat),this.activation=bl(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=si(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Bi(t.biasConstraint),this.biasRegularizer=Nl(t.biasRegularizer),this.activityRegularizer=Nl(t.activityRegularizer),this.dilationRate=Fl(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Is("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Is("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Is("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(_s("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Hs(e.kernelSize,"number",1,3))throw new Is("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:gl(this.activation),useBias:this.useBias,biasInitializer:ri(this.biasInitializer),biasRegularizer:Sl(this.biasRegularizer),activityRegularizer:Sl(this.activityRegularizer),biasConstraint:Li(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Vl extends Wl{constructor(e,t){super(e,t),this.kernel=null,Vl.verifyArgs(t),this.filters=t.filters,qs(this.filters,"filters"),this.kernelInitializer=si(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Bi(t.kernelConstraint),this.kernelRegularizer=Nl(t.kernelRegularizer)}build(e){e=li(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Is("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,Me.tidy)((()=>{let t;e=ci(e);const n=null==this.bias?null:this.bias.read(),a=Ks(this.activation.getClassName());if(null!=a&&2===this.rank)t=Pl(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Ll(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Pl(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Cs("convolutions greater than 3D are not implemented yet.");t=Bl(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=li(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Dl(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:ri(this.kernelInitializer),kernelRegularizer:Sl(this.kernelRegularizer),kernelConstraint:Li(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new Is("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Ul extends Vl{constructor(e){super(2,e),Ul.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Hs(e.kernelSize,"number",1,2))throw new Is("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Ul.className="Conv2D",Me.serialization.registerClass(Ul);class Gl extends Vl{constructor(e){super(3,e),Gl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Is("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}Gl.className="Conv3D",Me.serialization.registerClass(Gl);class jl extends Ul{constructor(e){if(super(e),this.inputSpec=[new mi({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Is("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=li(e)).length)throw new Is("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Is("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new mi({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Me.tidy((()=>{let t=ci(e);if(4!==t.shape.length)throw new Is("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],d=this.strides[1],p=[a,Ol(o,u,c,this.padding),Ol(i,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Me.transpose(t,[0,2,3,1]));let h=Me.conv2dTranspose(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=Me.transpose(h,[0,3,1,2])),null!=this.bias&&(h=Mo(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=li(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=Ol(t[a],i,s,this.padding),t[r]=Ol(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}jl.className="Conv2DTranspose",Me.serialization.registerClass(jl);class Hl extends Gl{constructor(e){if(super(e),this.inputSpec=[new mi({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Is("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=li(e)).length)throw new Is("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Is("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new mi({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Me.tidy((()=>{let t=ci(e);if(5!==t.shape.length)throw new Is("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Ol(i,h,u,this.padding),Ol(c,f,d,this.padding),Ol(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Me.transpose(t,[0,2,3,4,1]));let y=Me.conv3dTranspose(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Me.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=Mo(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=li(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=Ol(t[a],l,o,this.padding),t[r]=Ol(t[r],u,i,this.padding),t[s]=Ol(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Hl.className="Conv3DTranspose",Me.serialization.registerClass(Hl);class ql extends Vl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Is("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Is("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Is("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=si(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Nl(t.depthwiseRegularizer),this.depthwiseConstraint=Bi(t.depthwiseConstraint),this.pointwiseInitializer=si(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Nl(t.pointwiseRegularizer),this.pointwiseConstraint=Bi(t.pointwiseConstraint)}build(e){if((e=li(e)).length<this.rank+2)throw new Is("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Is("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new mi({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,Me.tidy)((()=>{let t;if(e=ci(e),1===this.rank)throw new Cs("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Me.transpose(e,[0,2,3,1])),t=Me.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Mo(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Me.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ri(this.depthwiseInitializer),e.pointwiseInitializer=ri(this.pointwiseInitializer),e.depthwiseRegularizer=Sl(this.depthwiseRegularizer),e.pointwiseRegularizer=Sl(this.pointwiseRegularizer),e.depthwiseConstraint=Li(this.depthwiseConstraint),e.pointwiseConstraint=Li(this.pointwiseConstraint),e}}ql.className="SeparableConv";class Yl extends ql{constructor(e){super(2,e)}}Yl.className="SeparableConv2D",Me.serialization.registerClass(Yl);class Kl extends Vl{constructor(e){super(1,e),Kl.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Hs(e.kernelSize,"number",1,1))throw new Is("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Kl.className="Conv1D",Me.serialization.registerClass(Kl);class Xl extends xi{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,Me.tidy)((()=>{if(e=ci(e),"channelsLast"===this.dataFormat){const t=Io(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Io(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Io(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Io(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Xl.className="Cropping2D",Me.serialization.registerClass(Xl);class Zl extends xi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,so(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,js(eo,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Me.tidy((()=>{let t=ci(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Me.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?Me.image.resizeNearestNeighbor(t,[e,a]):Me.image.resizeBilinear(t,[e,a]);return Me.transpose(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Me.image.resizeNearestNeighbor(t,[e,a]):Me.image.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Zl.className="UpSampling2D",Me.serialization.registerClass(Zl);class Ql extends Wl{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=si(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Bi(e.depthwiseConstraint),this.depthwiseRegularizer=Nl(e.depthwiseRegularizer)}build(e){if((e=li(e)).length<4)throw new Is("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Is("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,Me.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return(0,Me.tidy)((()=>{null==r&&(r="channelsLast"),so(r);let o=Ml(e,r);if(4!==e.rank)throw new Is("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new Is("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=Me.depthwiseConv2d(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=Me.transpose(o,[0,3,1,2])),o}))}(e=ci(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Mo(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=li(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Dl(t,this.kernelSize[0],this.padding,this.strides[0]),s=Dl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ri(this.depthwiseInitializer),e.depthwiseRegularizer=Sl(this.depthwiseRegularizer),e.depthwiseConstraint=Li(this.depthwiseRegularizer),e}}function Jl(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new Is("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function $l(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return Me.tidy((()=>{const c=t.shape.length;if(c<3)throw new Is("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(vo(2,c));if(t=Me.transpose(t,l),null!=s)throw new Cs("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=Me.cast(Me.cast(r,"bool"),"float32"),r.rank===c-1&&(r=Me.expandDims(r,-1)),r=Me.transpose(r,l)),a&&(t=Me.reverse(t,0),null!=r&&(r=Me.reverse(r,0)));const u=[];let d,p=n;const h=t.shape[0],f=Me.unstack(t);let m,g;null!=r&&(m=Me.unstack(r));for(let t=0;t<h;++t){const n=f[t],a=Me.tidy((()=>e(n,p)));if(null==r)d=a[0],p=a[1];else{const e=Me.tidy((()=>{const e=m[t],n=Me.sub(Me.onesLike(e),e);return{output:Me.add(Me.mul(a[0],e),Me.mul(p[0],n)),newStates:p.map(((t,r)=>Me.add(Me.mul(a[1][r],e),Me.mul(t,n))))}}));d=e.output,p=e.newStates}i&&u.push(d)}if(i){const e=1;g=Me.stack(u,e)}return[d,g,p]}))}Ql.className="DepthwiseConv2D",Me.serialization.registerClass(Ql);class eu extends xi{constructor(e){let t;if(super(e),null==e.cell)throw new Is("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new cu({cells:e.cell}):e.cell,null==t.stateSize)throw new Is("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new mi({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return vo(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){oi(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return Me.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Cs("Constants support is not implemented in RNN yet.");oi(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new mi({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!Me.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Is("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new mi({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,Me.tidy)((()=>{if(!this.stateful)throw new Ts("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Is("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Me.zeros([n,e]))):this.states_=[Me.zeros([n,this.cell.stateSize])];else if(null==e)Me.dispose(this.states_),null!=this.keptStates&&(Me.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Me.zeros([n,e]))):this.states_[0]=Me.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Is("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):Me.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!Me.util.arraysEqual(a.shape,s))throw new Is("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>Me.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Jl(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new mi({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof gi){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,Me.tidy)((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=ci(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new Is("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=$l(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d}))}getInitialState(e){return(0,Me.tidy)((()=>{let t=Me.zeros(e.shape);return t=Me.sum(t,[1,2]),t=So(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ao(t,[1,e]):t)):this.cell.stateSize>1?[Ao(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===eu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Qi(t.cell,n);return new e(Object.assign(t,{cell:a}))}}eu.className="RNN",Me.serialization.registerClass(eu);class tu extends xi{}class nu extends tu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qs(this.units,"units"),this.activation=bl(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=si(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=si(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=si(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Nl(e.kernelRegularizer),this.recurrentRegularizer=Nl(e.recurrentRegularizer),this.biasRegularizer=Nl(e.biasRegularizer),this.kernelConstraint=Bi(e.kernelConstraint),this.recurrentConstraint=Bi(e.recurrentConstraint),this.biasConstraint=Bi(e.biasConstraint),this.dropout=yo([1,bo([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=yo([1,bo([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=li(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,Me.tidy)((()=>{if(2!==e.length)throw new Is("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lu({ones:()=>Me.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lu({ones:()=>Me.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=_o(null!=s?Me.mul(e,s):e,this.kernel.read()),null!=this.bias&&(r=Mo(r,this.bias.read())),null!=o&&(n=Me.mul(n,o));let i=Me.add(r,_o(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gl(this.activation),useBias:this.useBias,kernelInitializer:ri(this.kernelInitializer),recurrentInitializer:ri(this.recurrentInitializer),biasInitializer:ri(this.biasInitializer),kernelRegularizer:Sl(this.kernelRegularizer),recurrentRegularizer:Sl(this.recurrentRegularizer),biasRegularizer:Sl(this.biasRegularizer),activityRegularizer:Sl(this.activityRegularizer),kernelConstraint:Li(this.kernelConstraint),recurrentConstraint:Li(this.recurrentConstraint),biasConstraint:Li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}nu.className="SimpleRNNCell",Me.serialization.registerClass(nu);class au extends eu{constructor(e){e.cell=new nu(e),super(e)}call(e,t){return(0,Me.tidy)((()=>{null!=this.cell.dropoutMask&&(Me.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Me.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}au.className="SimpleRNN",Me.serialization.registerClass(au);class ru extends tu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Is("GRUCell does not support reset_after parameter set to true.");this.units=e.units,qs(this.units,"units"),this.activation=bl(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=bl(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=si(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=si(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=si(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Nl(e.kernelRegularizer),this.recurrentRegularizer=Nl(e.recurrentRegularizer),this.biasRegularizer=Nl(e.biasRegularizer),this.kernelConstraint=Bi(e.kernelConstraint),this.recurrentConstraint=Bi(e.recurrentConstraint),this.biasConstraint=Bi(e.biasConstraint),this.dropout=yo([1,bo([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=yo([1,bo([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=li(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,Me.tidy)((()=>{if(2!==e.length)throw new Is("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lu({ones:()=>Me.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lu({ones:()=>Me.onesLike(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=Me.mul(e,r[0]));let l=_o(e,this.kernel.read());this.useBias&&(l=Mo(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Me.mul(a,s[0]));const u=this.recurrentKernel.read(),[d,p]=Me.split(u,[2*this.units,this.units],u.rank-1),h=_o(a,d),[f,m,g]=Me.split(l,3,l.rank-1),[y,b]=Me.split(h,2,h.rank-1);o=this.recurrentActivation.apply(Me.add(f,y)),i=this.recurrentActivation.apply(Me.add(m,b));const v=_o(Me.mul(i,a),p);c=this.activation.apply(Me.add(g,v));const x=Me.add(Me.mul(o,a),Me.mul(Me.add(1,Me.neg(o)),c));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gl(this.activation),recurrentActivation:gl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ri(this.kernelInitializer),recurrentInitializer:ri(this.recurrentInitializer),biasInitializer:ri(this.biasInitializer),kernelRegularizer:Sl(this.kernelRegularizer),recurrentRegularizer:Sl(this.recurrentRegularizer),biasRegularizer:Sl(this.biasRegularizer),activityRegularizer:Sl(this.activityRegularizer),kernelConstraint:Li(this.kernelConstraint),recurrentConstraint:Li(this.recurrentConstraint),biasConstraint:Li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ru.className="GRUCell",Me.serialization.registerClass(ru);class su extends eu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ru(e),super(e)}call(e,t){return(0,Me.tidy)((()=>{null!=this.cell.dropoutMask&&(Me.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Me.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}su.className="GRU",Me.serialization.registerClass(su);class ou extends tu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qs(this.units,"units"),this.activation=bl(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=bl(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=si(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=si(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=si(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Nl(e.kernelRegularizer),this.recurrentRegularizer=Nl(e.recurrentRegularizer),this.biasRegularizer=Nl(e.biasRegularizer),this.kernelConstraint=Bi(e.kernelConstraint),this.recurrentConstraint=Bi(e.recurrentConstraint),this.biasConstraint=Bi(e.biasConstraint),this.dropout=yo([1,bo([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=yo([1,bo([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=li(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Wo{apply(t,a){const r=e.apply([n]),s=(new Uo).apply([n]),o=e.apply([2*n]);return Eo(Eo(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,Me.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Is("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lu({ones:()=>Me.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lu({ones:()=>Me.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=Me.mul(e,s[0]));let d=_o(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=Me.mul(a,o[0])),d=Me.add(d,_o(a,this.recurrentKernel.read())),this.useBias&&(d=Mo(d,this.bias.read()));const[p,h,f,m]=Me.split(d,4,d.rank-1);i=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(h),l=Me.add(Me.mul(c,r),Me.mul(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=Me.mul(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:gl(this.activation),recurrentActivation:gl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ri(this.kernelInitializer),recurrentInitializer:ri(this.recurrentInitializer),biasInitializer:ri(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Sl(this.kernelRegularizer),recurrentRegularizer:Sl(this.recurrentRegularizer),biasRegularizer:Sl(this.biasRegularizer),activityRegularizer:Sl(this.activityRegularizer),kernelConstraint:Li(this.kernelConstraint),recurrentConstraint:Li(this.recurrentConstraint),biasConstraint:Li(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}ou.className="LSTMCell",Me.serialization.registerClass(ou);class iu extends eu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ou(e),super(e)}call(e,t){return(0,Me.tidy)((()=>{null!=this.cell.dropoutMask&&(Me.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Me.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}iu.className="LSTM",Me.serialization.registerClass(iu);class cu extends tu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,Me.tidy)((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;oi(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{uo("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(Qi(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return hi(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}fi(t)}}function lu(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):zo(t(),n),i=()=>Lo(o,t,a);if(!r||r<=1)return Me.keep(i().clone());return Array(r).fill(void 0).map(i).map((e=>Me.keep(e.clone())))}cu.className="StackedRNNCells",Me.serialization.registerClass(cu);var uu=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class du extends eu{constructor(e){if(e.unroll)throw new Cs("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Cs("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new mi({ndim:5})]}call(e,t){return Me.tidy((()=>{if(null!=this.cell.dropoutMask&&(Me.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Me.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Is("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Me.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=Me.zeros(r);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Me.tidy((()=>{if(!this.stateful)throw new Ts("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new Is("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Me.zeros(r))):this.states_=[Me.zeros(r)];else if(null==e)Me.dispose(this.states_),null!=this.keptStates&&(Me.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Me.zeros(r))):this.states_[0]=Me.zeros(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Is("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):Me.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!Me.util.arraysEqual(n.shape,a))throw new Is("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>Me.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=Dl(c,a[0],r,s[0],o[0]),d=Dl(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}du.className="ConvRNN2D";class pu extends ou{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,qs(this.filters,"filters"),this.kernelSize=Fl(n,2,"kernelSize"),this.kernelSize.forEach((e=>qs(e,"kernelSize"))),this.strides=Fl(a||1,2,"strides"),this.strides.forEach((e=>qs(e,"strides"))),this.padding=r||"valid",oo(this.padding),this.dataFormat=s||"channelsLast",so(this.dataFormat),this.dilationRate=Fl(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>qs(e,"dilationRate")))}build(e){var t;e=li(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Is("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Wo{apply(e,t){return Co([n.apply([a]),Me.ones([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Me.tidy((()=>{if(3!==e.length)throw new Is("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lu({ones:()=>Me.onesLike(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?Me.mul(t[n],e):e;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),d=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lu({ones:()=>Me.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let h=i(r,p,0),f=i(r,p,1),m=i(r,p,2),g=i(r,p,3);const[y,b,v,x]=Me.split(this.kernel.read(),4,3),[w,k,S,T]=this.useBias?Me.split(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,v,S,this.padding),d=this.inputConv(d,x,T,this.padding);const[N,I,C,E]=Me.split(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,N),f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const A=this.recurrentActivation.apply(Me.add(c,h)),R=this.recurrentActivation.apply(Me.add(l,f)),_=Me.add(Me.mul(R,s),Me.mul(A,this.activation.apply(Me.add(u,m)))),F=Me.mul(this.recurrentActivation.apply(Me.add(d,g)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=uu(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=Me.conv2d(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Mo(r,n,this.dataFormat):r}recurrentConv(e,t){return Me.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}pu.className="ConvLSTM2DCell",Me.serialization.registerClass(pu);class hu extends du{constructor(e){const t=new pu(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}hu.className="ConvLSTM2D",Me.serialization.registerClass(hu);class fu extends xi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Lo((()=>zo(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}fu.className="Dropout",Me.serialization.registerClass(fu);class mu extends fu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}mu.className="SpatialDropout1D",Me.serialization.registerClass(mu);class gu extends xi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,qs(this.units,"units"),this.activation=bl(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=si(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=si(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Bi(e.kernelConstraint),this.biasConstraint=Bi(e.biasConstraint),this.kernelRegularizer=Nl(e.kernelRegularizer),this.biasRegularizer=Nl(e.biasRegularizer),this.activityRegularizer=Nl(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=li(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=li(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e),a=Ks(this.activation.getClassName());let r;return null!=a?r=_o(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=_o(n,this.kernel.read()),null!=this.bias&&(r=Mo(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:gl(this.activation),useBias:this.useBias,kernelInitializer:ri(this.kernelInitializer),biasInitializer:ri(this.biasInitializer),kernelRegularizer:Sl(this.kernelRegularizer),biasRegularizer:Sl(this.biasRegularizer),activityRegularizer:Sl(this.activityRegularizer),kernelConstraint:Li(this.kernelConstraint),biasConstraint:Li(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}gu.className="Dense",Me.serialization.registerClass(gu);class yu extends xi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=li(e);for(const t of e.slice(1))if(null==t)throw new Is('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],go(e,1)]}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);let n=ci(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,Me.transpose)(n,e)}return function(e){if(e.rank<=1)throw new Is("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],go(e.shape,1)];return Me.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}yu.className="Flatten",Me.serialization.registerClass(yu);class bu extends xi{constructor(e){super(e),this.supportsMasking=!0,this.activation=bl(e.activation)}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e);return this.activation.apply(n)}))}getConfig(){const e={activation:gl(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}bu.className="Activation",Me.serialization.registerClass(bu);class vu extends xi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,Me.tidy)((()=>{return e=ci(e),t=e,n=this.n,(0,Me.tidy)((()=>{if(2!==t.shape.length)throw new Is("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return Ao(So(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vu.className="RepeatVector",Me.serialization.registerClass(vu);class xu extends xi{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new Is("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=go(e);if(null!==s){if(0===r||o%r!==0)throw new Is(n);a[s]=o/r}else if(o!==r)throw new Is(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,Me.reshape)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}xu.className="Reshape",Me.serialization.registerClass(xu);class wu extends xi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=vo(1,e.dims.length+1);if(!Me.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new mi({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=li(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return(0,Me.transpose)(ci(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}wu.className="Permute",Me.serialization.registerClass(wu);class ku extends xi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=ci(e);return(0,Me.any)((0,Me.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e),a=(0,Me.any)((0,Me.notEqual)(n,this.maskValue),-1,!0);return(0,Me.mul)(n,(0,Me.cast)(a,n.dtype))}))}}ku.className="Masking",Me.serialization.registerClass(ku);class Su extends xi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Os(e.inputLength))}this.inputDim=e.inputDim,qs(this.inputDim,"inputDim"),this.outputDim=e.outputDim,qs(this.outputDim,"outputDim"),this.embeddingsInitializer=si(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Nl(e.embeddingsRegularizer),this.activityRegularizer=Nl(e.activityRegularizer),this.embeddingsConstraint=Bi(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,Me.tidy)((()=>this.maskZero?(e=ci(e),(0,Me.notEqual)(e,(0,Me.zerosLike)(e))):null))}computeOutputShape(e){if(e=li(e),null==this.inputLength)return[...e,this.outputDim];const t=Os(this.inputLength);if(t.length!==e.length-1)throw new Is('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new Is('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);let n=ci(e);"int32"!==n.dtype&&(n=ko(n,"int32"));const a=Fo(this.embeddings.read(),(0,Me.reshape)(n,[n.size]));return(0,Me.reshape)(a,li(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ri(this.embeddingsInitializer),embeddingsRegularizer:Sl(this.embeddingsRegularizer),activityRegularizer:Sl(this.activityRegularizer),embeddingsConstraint:Li(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Su.className="Embedding",Me.serialization.registerClass(Su);class Tu extends xi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Cs}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new Is("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[li(e)]),e.length<2)throw new Is("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Us(t),t.length>1)throw new Is("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Us(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,Me.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=bo(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=So(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=Me.reshape(s,[a].concat(go(e.slice(1))));o=Me.transpose(o,[1,0]),o=Me.reshape(o,r),t.push(o),n=!0}else if(e>1){const a=vo(1,e).concat([0]);t.push(Me.transpose(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=Me.reshape(Me.transpose(Me.reshape(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(vo(0,r-1));a=Me.transpose(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=Us(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Me.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Is("`mask` should be an Array");if(!Array.isArray(e))throw new Is("`inputs` should be an Array");if(t.length!==e.length)throw new Is("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Me.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Me.logicalAnd(n,t[e]);return n}))}}class Nu extends Tu{constructor(e){super(e)}mergeFunction(e){return(0,Me.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Me.add(t,e[n]);return t}))}}Nu.className="Add",Me.serialization.registerClass(Nu);class Iu extends Tu{constructor(e){super(e)}mergeFunction(e){return(0,Me.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Me.mul(t,e[n]);return t}))}}Iu.className="Multiply",Me.serialization.registerClass(Iu);class Cu extends Tu{constructor(e){super(e)}mergeFunction(e){return(0,Me.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Me.add(t,e[n]);return Me.mul(1/e.length,t)}))}}Cu.className="Average",Me.serialization.registerClass(Cu);class Eu extends Tu{constructor(e){super(e)}mergeFunction(e){return(0,Me.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Me.maximum(t,e[n]);return t}))}}Eu.className="Maximum",Me.serialization.registerClass(Eu);class Au extends Tu{constructor(e){super(e)}mergeFunction(e){return(0,Me.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Me.minimum(t,e[n]);return t}))}}Au.className="Minimum",Me.serialization.registerClass(Au);class Ru extends Tu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Is("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(Me.util.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new Is("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,Me.tidy)((()=>Co(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Is("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Is("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Is("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Is("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return Me.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(Me.cast(Me.onesLike(e[s]),"bool")):t[s].rank<e[s].rank?a.push(Me.expandDims(t[s],-1)):a.push(t[s]);const r=Me.concat(a,this.axis);return Me.all(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function _u(e,t){for(;e<0;)e+=t;return e}Ru.className="Concatenate",Me.serialization.registerClass(Ru);class Fu extends Tu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Me.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Cs("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new Is("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new Is("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>_u(t,e[n].shape.length))):[_u(this.axes,n.shape.length),_u(this.axes,a.shape.length)],this.normalize&&(n=Ji(n,t[0]),a=Ji(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Cs("batchDot is not implemented for tensors of 4D or higher rank yet");if(Me.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),Me.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Cs("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return Me.tidy((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Me.reshape(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=Me.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?Me.sum(Me.mul(e,t),s[0]):Me.sum(Me.mul(Me.transpose(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=Me.matMul(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=Me.squeeze(o,t)}return 1===o.shape.length&&(o=Me.expandDims(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[_u(this.axes,e.length),_u(this.axes,t.length)],n}computeOutputShape(e){Me.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Cs("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Fu.className="Dot",Me.serialization.registerClass(Fu);class Du extends xi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e);return Lo((()=>(0,Me.add)(Ro(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Du.className="GaussianNoise",Me.serialization.registerClass(Du);class Ou extends xi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t);const n=ci(e);if(this.rate>0&&this.rate<1){return Lo((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,Me.mul)(n,Ro(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Ou.className="GaussianDropout",Me.serialization.registerClass(Ou);class Mu extends xi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||ci(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,Me.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=ci(e),a=-1.7580993408473766;let r=(0,Me.greaterEqual)((0,Me.randomUniform)(n),this.rate);r=ko(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=(0,Me.add)((0,Me.mul)(t,r),(0,Me.mul)((0,Me.add)(r,-1),a));return(0,Me.add)((0,Me.mul)(i,s),o)};return Lo(a,(()=>ci(e)),t.training||!1)}return e}))}}function zu(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=Me.batchNorm2d(e,t,n,a,r,o);else if(3===e.rank)s=Me.batchNorm3d(e,t,n,a,r,o);else{if(4!==e.rank)throw new Cs("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=Me.batchNorm4d(e,t,n,a,r,o)}return s}function Lu(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Me.util.arraysEqual(a.slice().sort(),vo(0,e.rank-1))?function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,Me.tidy)((()=>{const s=Me.moments(e,a),o=s.mean,i=s.variance;return[zu(e,o,i,n,t,r),o,i]}))}(e,t,n,a,r):function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,Me.tidy)((()=>{const s=Me.moments(e,a),o=s.mean,i=s.variance,c=[];for(const t of vo(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=(0,Me.reshape)(o,c),u=(0,Me.reshape)(i,c),d=null==t?null:(0,Me.reshape)(t,c),p=null==n?null:(0,Me.reshape)(n,c);return[zu(e,l,u,p,d,r),o,i]}))}(e,t,n,a,r)}Mu.className="AlphaDropout",Me.serialization.registerClass(Mu);class Pu extends xi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=si(e.betaInitializer||"zeros"),this.gammaInitializer=si(e.gammaInitializer||"ones"),this.movingMeanInitializer=si(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=si(e.movingVarianceInitializer||"ones"),this.betaConstraint=Bi(e.betaConstraint),this.gammaConstraint=Bi(e.gammaConstraint),this.betaRegularizer=Nl(e.betaRegularizer),this.gammaRegularizer=Nl(e.gammaRegularizer)}build(e){e=li(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Is("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new mi({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,Me.tidy)((()=>{const n=null!=t.training&&t.training,a=ci(e),r=a.shape,s=r.length,o=vo(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=Rs(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!Me.util.arraysEqual(l,vo(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const e=(0,Me.reshape)(this.movingMean.read(),c),t=(0,Me.reshape)(this.movingVariance.read(),c),n=this.center?(0,Me.reshape)(this.beta.read(),c):null,r=this.scale?(0,Me.reshape)(this.gamma.read(),c):null;return zu(a,e,t,n,r,this.epsilon)}return zu(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,h]=Lu(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{Me.tidy((()=>{const a=1-n,r=e.read(),s=Me.mul(Me.sub(r,t),a);e.write(Me.sub(r,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,h,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ri(this.betaInitializer),gammaInitializer:ri(this.gammaInitializer),movingMeanInitializer:ri(this.movingMeanInitializer),movingVarianceInitializer:ri(this.movingVarianceInitializer),betaRegularizer:Sl(this.betaRegularizer),gammaRegularizer:Sl(this.gammaRegularizer),betaConstraint:Li(this.betaConstraint),gammaConstraint:Li(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Pu.className="BatchNormalization",Me.serialization.registerClass(Pu);class Bu extends xi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=si(e.betaInitializer||"zeros"),this.gammaInitializer=si(e.gammaInitializer||"ones"),this.betaRegularizer=Nl(e.betaRegularizer),this.gammaRegularizer=Nl(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=li(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==Us(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t])),a=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(e,t){const n=ci(e),a=n.shape,r=a.length;return(0,Me.tidy)((()=>{let{mean:e,variance:t}=(0,Me.moments)(n,this.axis,!0);const s=Rs(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?Me.reshape(e,s):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=Me.tile(e,l),t=Me.tile(t,l),null!=i&&(i=Me.tile(i,u)),null!=c&&(c=Me.tile(c,u)),zu(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ri(this.betaInitializer),gammaInitializer:ri(this.gammaInitializer),betaRegularizer:Sl(this.betaRegularizer),gammaRegularizer:Sl(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Bu.className="LayerNormalization",Me.serialization.registerClass(Bu);class Wu extends xi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Is("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Is("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new Is("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new mi({ndim:4})]}computeOutputShape(e){let t,n;return e=li(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,Me.tidy)((()=>{return t=ci(e),n=this.padding,a=this.dataFormat,(0,Me.tidy)((()=>{if(4!==t.rank)throw new Is("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Is("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new Is("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Me.pad(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Vu(e,t,n,a,r,s){return(0,Me.tidy)((()=>{let o;so(r),io(s),oo(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Ml(e,r);const i="same"===a?"same":"valid";return o="max"===s?Me.maxPool(e,t,n,i):Me.avgPool(e,t,n,i),"channelsFirst"===r&&(o=Me.transpose(o,[0,3,1,2])),o}))}function Uu(e,t,n,a,r,s){return(0,Me.tidy)((()=>{let o;so(r),io(s),oo(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=zl(e,r);const i="same"===a?"same":"valid";return o="max"===s?Me.maxPool3d(e,t,n,i):Me.avgPool3d(e,t,n,i),"channelsFirst"===r&&(o=Me.transpose(o,[0,4,1,2,3])),o}))}Wu.className="ZeroPadding2D",Me.serialization.registerClass(Wu);class Gu extends xi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new Is("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(qs(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new Is("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}qs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,oo(this.padding),this.inputSpec=[new mi({ndim:3})]}computeOutputShape(e){const t=Dl((e=li(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,Me.tidy)((()=>{this.invokeCallHook(e,t),e=So(ci(e),2);const n=this.poolingFunction(ci(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Me.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ju extends Gu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Vu(e,t,n,a,r,"max")}}ju.className="MaxPooling1D",Me.serialization.registerClass(ju);class Hu extends Gu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Vu(e,t,n,a,r,"avg")}}Hu.className="AveragePooling1D",Me.serialization.registerClass(Hu);class qu extends xi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Is("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];qs(this.poolSize,"poolSize"),qs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,so(this.dataFormat),oo(this.padding),this.inputSpec=[new mi({ndim:4})]}computeOutputShape(e){e=li(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Dl(t,this.poolSize[0],this.padding,this.strides[0]),n=Dl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,Me.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ci(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Yu extends qu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Vu(e,t,n,a,r,"max")}}Yu.className="MaxPooling2D",Me.serialization.registerClass(Yu);class Ku extends qu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Vu(e,t,n,a,r,"avg")}}Ku.className="AveragePooling2D",Me.serialization.registerClass(Ku);class Xu extends xi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Is("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];qs(this.poolSize,"poolSize"),qs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,so(this.dataFormat),oo(this.padding),this.inputSpec=[new mi({ndim:5})]}computeOutputShape(e){e=li(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Dl(t,this.poolSize[0],this.padding,this.strides[0]),n=Dl(n,this.poolSize[1],this.padding,this.strides[1]),a=Dl(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,Me.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(ci(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zu extends Xu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Uu(e,t,n,a,r,"max")}}Zu.className="MaxPooling3D",Me.serialization.registerClass(Zu);class Qu extends Xu{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return so(r),oo(a),Uu(e,t,n,a,r,"avg")}}Qu.className="AveragePooling3D",Me.serialization.registerClass(Qu);class Ju extends xi{constructor(e){super(e),this.inputSpec=[new mi({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Cs}}class $u extends Ju{constructor(e){super(e||{})}call(e,t){return(0,Me.tidy)((()=>{const t=ci(e);return Me.mean(t,1)}))}}$u.className="GlobalAveragePooling1D",Me.serialization.registerClass($u);class ed extends Ju{constructor(e){super(e||{})}call(e,t){return(0,Me.tidy)((()=>{const t=ci(e);return Me.max(t,1)}))}}ed.className="GlobalMaxPooling1D",Me.serialization.registerClass(ed);class td extends xi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,so(this.dataFormat),this.inputSpec=[new mi({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Cs}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class nd extends td{call(e,t){return(0,Me.tidy)((()=>{const t=ci(e);return"channelsLast"===this.dataFormat?Me.mean(t,[1,2]):Me.mean(t,[2,3])}))}}nd.className="GlobalAveragePooling2D",Me.serialization.registerClass(nd);class ad extends td{call(e,t){return(0,Me.tidy)((()=>{const t=ci(e);return"channelsLast"===this.dataFormat?Me.max(t,[1,2]):Me.max(t,[2,3])}))}}ad.className="GlobalMaxPooling2D",Me.serialization.registerClass(ad);class rd extends xi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Qi(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class sd extends rd{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=li(e)).length<3)throw new Is("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=li(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,Me.tidy)((()=>$l(((e,n)=>[ci(this.layer.call(e,t)),[]]),e=ci(e),[],!1,null,null,!1,!0)[1]))}}sd.className="TimeDistributed",Me.serialization.registerClass(sd);class od extends rd{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Qi(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Qi(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,js(ao,"BidirectionalMergeMode",r),e.weights)throw new Cs("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Ds(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Jl(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new Is("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new mi({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new Cs("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof gi;for(const c of s)if(c instanceof gi!==i)throw new Is("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,Me.tidy)((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Me.reverse(r,1)),"concat"===this.mergeMode?o=Co([a,r]):"sum"===this.mergeMode?o=Me.add(a,r):"ave"===this.mergeMode?o=Me.mul(.5,Me.add(a,r)):"mul"===this.mergeMode?o=Me.mul(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){uo(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),uo(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Qi(t.layer);if(delete t.layer,null!=t.numConstants)throw new Cs("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}od.className="Bidirectional",Me.serialization.registerClass(od);class id extends xi{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,Me.tidy)((()=>("float32"!==(e=ci(e)).dtype&&(e=ko(e,"float32")),(0,Me.add)((0,Me.mul)(e,this.scale),this.offset))))}}id.className="Rescaling",Me.serialization.registerClass(id);const{resizeBilinear:cd,cropAndResize:ld}=Me.image;class ud extends xi{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return(0,Me.tidy)((()=>{let c,l=!1;const u=[t/s,n/o,(a+t)/s,(r+n)/o],d=[];3===e.rank?(l=!0,c=(0,Me.stack)([e])):c=e;for(let e=0;e<c.shape[0];e++)d.push(u);const p=(0,Me.tensor)(d,[d.length,4]),h=(0,Me.range)(0,d.length,1,"int32"),f=ld(c,p,h,[a,r],"nearest");return ko(l?ci((0,Me.unstack)(f)):f,i)}))}upsize(e,t,n,a){return(0,Me.tidy)((()=>ko(cd(e,[t,n]),a)))}call(e,t){return(0,Me.tidy)((()=>{const t=ci(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=li(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}ud.className="CenterCrop",Me.serialization.registerClass(ud);class dd extends xi{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=li(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,Me.tidy)((()=>{let n;if("int32"!==(e=ci(e)).dtype&&(e=ko(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new Is("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=ci(t.countWeights)}const a=(0,Me.max)(e),r=(0,Me.min)(e),s=(0,Me.greater)(this.numTokens,a).bufferSync().get(0),o=(0,Me.greaterEqual)(r,0).bufferSync().get(0);if(!s||!o)throw new Is("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=ci(e);if("int32"!==r.dtype&&(r=ko(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=(0,Me.expandDims)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,Me.expandDims)(r,-1)),r.rank>2)throw new Is("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let c;if(c="undefined"!==typeof a&&"count"===t?(0,Me.denseBincount)(i,a,n,o):(0,Me.denseBincount)(i,[],n,o),"tfIdf"!==t)return c;if(a)return(0,Me.mul)(c,a);throw new Is("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}dd.className="CategoryEncoding",Me.serialization.registerClass(dd);const pd=new Set(["bilinear","nearest"]);class hd extends xi{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!pd.has(e.interpolation))throw new Is("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=li(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,Me.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Me.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Me.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...pd]," are supported"))}))}}hd.className="Resizing",Me.serialization.registerClass(hd);class fd{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}fd.className="RandomSeed";class md extends xi{constructor(e){super(e),this.randomGenerator=new fd(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}md.className="BaseRandomLayer";const gd=new Set(["bilinear","nearest"]);class yd extends md{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Is("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Is("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new Is("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!gd.has(n))throw new Is("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=li(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,Me.tidy)((()=>{const t=ci(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,Me.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Me.image.resizeBilinear(e,r);case"nearest":return Me.image.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...gd]," are supported"))}}))}}yd.className="RandomWidth",Me.serialization.registerClass(yd);var bd,vd=n(5452),xd=n(4334);function wd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Nd(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=wd(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function kd(e){return Sd(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:Td)}function Sd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Nd(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=Sd(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function Td(e){return null===e?null:Nd(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function Nd(e){let t=!1;if(Me.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(551);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Me.Tensor)&&!(e instanceof Promise)&&!t)}function Id(e){return function(e,t){return wd(e,t)}(e,Cd)}function Cd(e){return e instanceof Me.Tensor?{value:e.clone(),recurse:!1}:Nd(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Ed{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Ad extends Ed{constructor(){super(Ad.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Rd(e){return new Od(e)}function _d(e,t){return new Hd(e,t)}Ad.INITIAL_CAPACITY=32;class Fd{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Vd(this,e)}filter(e){return new Bd(this,e)}map(e){return new Wd(this,e)}mapAsync(e){return new Ud(this,e)}serialMapAsync(e){return new Ud(this,e).serial()}flatmap(e){return new jd(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new Pd(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Td;return this.rowMajorBatch(e,t).map((e=>kd(e,n)))}concatenate(e,t){return new Hd(new Dd([this,e]),t)}take(e){return e<0||null==e?this:new Ld(this,e)}skip(e){return e<0||null==e?this:new zd(this,e)}prefetch(e){return new qd(this,e)}shuffle(e,t){return new Yd(this,e,t)}serial(){return new Md(this)}}class Dd extends Fd{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Id(e),done:!1}}}class Od extends Fd{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(NE){throw NE.message="Error thrown while iterating through a dataset: ".concat(NE.message),NE}}}class Md extends Fd{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class zd extends Fd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Me.dispose(e.value)}return this.upstream.next()}}class Ld extends Fd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Pd extends Fd{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Bd extends Fd{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Me.dispose(e.value)}}}class Wd extends Fd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Me.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=Me.tensor_util.getTensorsInContainer(n);for(const r of t)Me.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Vd extends Fd{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(NE){if(!this.handler(NE))return{value:null,done:!0}}}}class Ud extends Fd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Me.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),a=Me.tensor_util.getTensorsInContainer(n);for(const r of t)Me.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Gd extends Fd{constructor(){super(),this.outputQueue=new Ad,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class jd extends Gd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Me.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=Me.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)Me.tensor_util.isTensorInList(r,a)||r.dispose();return!0}}class Hd extends Fd{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(bd||(bd={}));class qd extends Fd{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Ed(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Yd extends qd{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xd.alea(n||Me.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Kd{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return Me.util.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Xd((async()=>(await n.iterator()).columnMajorBatch(e,t,Zd)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Xd((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Xd((async()=>(await t.iterator()).filter((t=>Me.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Xd((async()=>(await t.iterator()).map((t=>Me.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Xd((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Xd((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Xd((async()=>_d(Rd((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Xd((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=xd.alea(t||Me.util.now().toString());return Xd((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Xd((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Xd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Kd{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Zd(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Me.Tensor||Me.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Me.Tensor?Me.stack(e):Me.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Kd.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Qd(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Me.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const Jd=Me.kernel_impls.whereImpl;class $d extends Me.KernelBackend{nextDataId(){return $d.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Me.DataStorage(this,(0,Me.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,Me.env)().get("IS_NODE")&&Me.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Me.util.isString(n[0])){const r=n.map((e=>Me.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Me.backend_util.mergeRealAndImagArrays(e,t)}return Me.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Me.util.decodeString(e)));return(0,Me.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,Me.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,Me.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Me.util.now();e();return{kernelMs:Me.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Qd([e],"where");const t=this.readSync(e.dataId);return Jd(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}$d.nextDataId=0;function ep(e){return(t,n,a)=>{const r=Me.util.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function tp(e,t,n){return np(e,ep(t),n)}function np(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;Qd(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Me.backend_util.fromUint8ToStringArray(l)}else u=l;const d=n||i.dtype,p=t(u,d,s);return c.makeTensorInfo(i.shape,d,p)}}(0,Me.registerBackend)("cpu",(()=>new $d),1);const ap=tp(Me.Elu,(e=>e>=0?e:Math.exp(e)-1)),rp={kernelName:Me.Elu,backendName:"cpu",kernelFunc:ap};function sp(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const op={kernelName:Me.Identity,backendName:"cpu",kernelFunc:sp};function ip(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;Qd([r],"leakyRelu");const o=Me.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,c=Me.util.getTypedArrayFromDType("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const cp={kernelName:Me.LeakyRelu,backendName:"cpu",kernelFunc:ip};function lp(e){return(t,n,a,r,s)=>{const o=Me.backend_util.assertAndGetBroadcastShape(t,n),i=o.length,c=Me.util.computeStrides(o),l=Me.util.sizeFromShape(o),u=Me.util.getTypedArrayFromDType(s,l),d=t.length,p=n.length,h=Me.util.computeStrides(t),f=Me.util.computeStrides(n),m=Me.backend_util.getBroadcastDims(t,o),g=Me.backend_util.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const t=Me.util.indexToLoc(y,i,c),n=t.slice(-d);m.forEach((e=>n[e]=0));const s=Me.util.locToIndex(n,d,h),o=t.slice(-p);g.forEach((e=>o[e]=0));const l=Me.util.locToIndex(o,p,f);u[y]=e(a[s],r[l])}return[u,o]}}const up=lp(((e,t)=>e<0?t*e:e));function dp(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Qd([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=up(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const pp={kernelName:Me.Prelu,backendName:"cpu",kernelFunc:dp},hp=tp(Me.Relu,(e=>Math.max(0,e))),fp={kernelName:Me.Relu,backendName:"cpu",kernelFunc:hp},mp=tp(Me.Relu6,(e=>Math.min(Math.max(0,e),6))),gp={kernelName:Me.Relu6,backendName:"cpu",kernelFunc:mp},yp=ep((e=>1/(1+Math.exp(-e)))),bp=tp(Me.Sigmoid,(e=>1/(1+Math.exp(-e)))),vp={kernelName:Me.Sigmoid,backendName:"cpu",kernelFunc:bp};function xp(e,t,n,a,r){if("linear"===n)return sp({inputs:{x:t},backend:e});if("relu"===n)return hp({inputs:{x:t},backend:e});if("elu"===n)return ap({inputs:{x:t},backend:e});if("relu6"===n)return mp({inputs:{x:t},backend:e});if("prelu"===n)return dp({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return ip({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return bp({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function wp(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const kp={kernelName:Me.Complex,backendName:"cpu",kernelFunc:wp};function Sp(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return wp({inputs:{real:Sp(e,t,"float32"),imag:Sp(e,t,"float32")},backend:e})}const a=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function Tp(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Np={kernelName:Me.Real,backendName:"cpu",kernelFunc:Tp};function Ip(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=Me.util.toTypedArray([0],n),[r,s]=lp(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function Cp(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return sp({inputs:{x:r},backend:n});const e=Sp(n,r.shape,r.dtype),t=Cp({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=wp({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=Tp({inputs:{input:r},backend:n}),t=Cp({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Me.util.hasEncodingLoss(r.dtype,s)){const e=sp({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=Ip(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const Ep={kernelName:Me.Cast,backendName:"cpu",kernelFunc:Cp};function Ap(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;Qd([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,d="string"===o.dtype?Me.backend_util.fromUint8ToStringArray(l):l,p="string"===o.dtype?Me.backend_util.fromUint8ToStringArray(u):u,h=a||o.dtype,[f,m]=t(o.shape,i.shape,d,p,h);return c.makeTensorInfo(m,h,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=Cp({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=Cp({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(u.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=c.data.get(p.dataId).values,m=c.data.get(h.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),v=c.makeTensorInfo(b,"float32",g),x=c.makeTensorInfo(b,"float32",y),w=wp({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function Rp(e){return(t,n,a,r,s,o)=>{const i=Me.backend_util.assertAndGetBroadcastShape(t,n),c=Me.util.sizeFromShape(i),l=i.length,u=Me.util.computeStrides(i),d=Me.util.getTypedArrayFromDType("float32",c),p=Me.util.getTypedArrayFromDType("float32",c),h=Me.backend_util.getBroadcastDims(t,i),f=Me.backend_util.getBroadcastDims(n,i),m=Me.backend_util.mergeRealAndImagArrays(a,r),g=Me.backend_util.mergeRealAndImagArrays(s,o),y=t.length,b=Me.util.computeStrides(t),v=n.length,x=Me.util.computeStrides(n);if(h.length+f.length===0)for(let w=0;w<d.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);d[w]=a.real,p[w]=a.imag}else for(let w=0;w<d.length;w++){const t=Me.util.indexToLoc(w,l,u),n=t.slice(-y);h.forEach((e=>n[e]=0));const a=Me.util.locToIndex(n,y,b),r=t.slice(-v);f.forEach((e=>r[e]=0));const s=Me.util.locToIndex(r,v,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);d[w]=o.real,p[w]=o.imag}return[d,p,i]}}const _p=lp(((e,t)=>e+t)),Fp=Rp(((e,t,n,a)=>({real:e+n,imag:t+a}))),Dp=Ap(Me.Add,_p,Fp),Op={kernelName:Me.Add,backendName:"cpu",kernelFunc:Dp};function Mp(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=Me.util.sizeFromShape(r.shape),i=Me.util.inferFromImplicitShape(s,o),c=Me.util.sizeFromShape(i);Me.util.assert(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const zp={kernelName:Me.Reshape,backendName:"cpu",kernelFunc:Mp};function Lp(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;Qd([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],d=i?s.shape[l-1]:s.shape[l-2],p=o?r.shape[c-1]:r.shape[c-2],h=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=Me.util.sizeFromShape(f),y=Me.util.sizeFromShape(m),b=Me.broadcast_util.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);Me.util.assert(u===d,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(d,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const v=i?[y,h,d]:[y,d,h],x=Mp({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,p]:[g,p,u]}}),w=Mp({inputs:{x:s},backend:n,attrs:{shape:v}}),k=o?x.shape[1]:x.shape[2],S=o?x.shape[2]:x.shape[1],T=i?w.shape[1]:w.shape[2],N=Math.max(g,y),I=n.data.get(x.dataId).values,C=n.data.get(w.dataId).values,E=Me.util.computeStrides(x.shape),A=Me.util.computeStrides(w.shape),[R,_,F]=o?[E[0],1,E[1]]:[E[0],E[1],1],[D,O,M]=i?[1,A[1],A[0]]:[A[1],1,A[0]],z=S*T,L=(0,Me.buffer)([N,S,T],x.dtype),P=L.values,B=n.blockSize;for(let W=0;W<N;W++){const e=W%g,t=W%y;for(let n=0;n<S;n+=B){const a=Math.min(n+B,S);for(let r=0;r<T;r+=B){const s=Math.min(r+B,T);for(let o=0;o<k;o+=B){const i=Math.min(o+B,k);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=I[e*R+c*_+r*F]*C[r*D+n*O+t*M]}P[W*z+(c*T+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,L.dtype,L.values)}const Pp={kernelName:Me.BatchMatMul,backendName:"cpu",kernelFunc:Lp};const Bp={kernelName:Me._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let p,h,f;const m=[];p=Lp({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(h=Dp({inputs:{a:p,b:o},backend:n}),m.push(p),p=h),u&&(f=xp(n,p,u,i,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};function Wp(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Vp={kernelName:Me.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Qd(t,"abs");let a=new Float32Array(Me.util.sizeFromShape(t.shape));return a=Wp(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},Up=tp(Me.Acos,(e=>Math.acos(e))),Gp={kernelName:Me.Acos,backendName:"cpu",kernelFunc:Up},jp=tp(Me.Acosh,(e=>Math.acosh(e))),Hp={kernelName:Me.Acosh,backendName:"cpu",kernelFunc:jp};const qp={kernelName:Me.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Qd(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=(0,Me.buffer)(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Yp(e,t,n,a,r){const s=t.length,o=Me.util.sizeFromShape(t),i=Me.util.computeStrides(t),c=Me.util.computeStrides(r),l=Me.util.getTypedArrayFromDType(n,Me.util.sizeFromShape(r));for(let u=0;u<o;++u){const t=Me.util.indexToLoc(u,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[Me.util.locToIndex(n,s,c)]=e[u]}return l}function Kp(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;Qd(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=Yp(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const Xp={kernelName:Me.Transpose,backendName:"cpu",kernelFunc:Kp};const Zp={kernelName:Me.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Qd(r,"all");const i=Me.util.parseAxisParam(s,r.shape);let c=i;const l=Me.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Kp({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Me.backend_util.getInnerMostAxes(c.length,r.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("all",c,u.shape.length);const[d,p]=Me.backend_util.computeOutAndReduceShapes(u.shape,c),h=Me.util.sizeFromShape(p),f=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Mp({inputs:{x:g},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Qp={kernelName:Me.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Qd(r,"any");const i=Me.util.parseAxisParam(s,r.shape);let c=i;const l=Me.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Kp({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Me.backend_util.getInnerMostAxes(c.length,r.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("any",c,u.shape.length);const[d,p]=Me.backend_util.computeOutAndReduceShapes(u.shape,c),h=Me.util.sizeFromShape(p),f=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t||a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Mp({inputs:{x:g},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Jp={kernelName:Me.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Qd(r,"argMax");let o=Me.util.parseAxisParam(s,r.shape);const i=Me.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Kp({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Me.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],Me.backend_util.assertAxesAreInnerMostDims("argMax",o,c.shape.length);const[u,d]=Me.backend_util.computeOutAndReduceShapes(c.shape,o),p=Me.util.sizeFromShape(u),h=Me.util.makeZerosTypedArray(p,"int32"),f=Me.util.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r>t&&(t=r,n=a)}h[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",h)}};const $p={kernelName:Me.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Qd(r,"argMin");let o=Me.util.parseAxisParam(s,r.shape);const i=Me.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Kp({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Me.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],Me.backend_util.assertAxesAreInnerMostDims("argMin",o,c.shape.length);const[u,d]=Me.backend_util.computeOutAndReduceShapes(c.shape,o),p=Me.util.sizeFromShape(u),h=Me.util.makeZerosTypedArray(p,"int32"),f=Me.util.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r<t&&(t=r,n=a)}h[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",h)}},eh=tp(Me.Asin,(e=>Math.asin(e))),th={kernelName:Me.Asin,backendName:"cpu",kernelFunc:eh},nh=tp(Me.Asinh,(e=>Math.asinh(e))),ah={kernelName:Me.Asinh,backendName:"cpu",kernelFunc:nh},rh=tp(Me.Atan,(e=>Math.atan(e))),sh={kernelName:Me.Atan,backendName:"cpu",kernelFunc:rh},oh=lp(((e,t)=>Math.atan2(e,t))),ih=Ap(Me.Atan2,oh),ch={kernelName:Me.Atan2,backendName:"cpu",kernelFunc:ih},lh=tp(Me.Atanh,(e=>Math.atanh(e))),uh={kernelName:Me.Atanh,backendName:"cpu",kernelFunc:lh};function dh(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,Me.buffer)(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const t=x*y,n=x*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const x=y*o-p,w=Math.max(0,x),k=Math.min(r.inHeight,u+x),S=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-h,u=Math.max(0,o),p=Math.min(r.inWidth,d+o);let y=f,b=0,x=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=u;t<p;t+=l){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,x++)}if(isNaN(y))break}g[S+t*v+m]="avg"===s?b/x:y}}}return m}function ph(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,Me.buffer)(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m=(0,Me.buffer)(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-h;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,d+n);for(let i=0;i<a.outWidth;++i){const d=i*c-f;let h=d;for(;h<0;)h+=u;const v=Math.min(a.inWidth,p+d);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=h;n<v;n+=u){const i=n-d,c=m.get(g,t,n,e);c>x&&(x=c,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*p+i)}}o.set(w,g,t,i,e)}}return o}function hh(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,Me.buffer)(r.outShape,n),x=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],S=r.outShape[3]*r.outShape[4],T=r.outShape[4];for(let N=0;N<r.batchSize;++N){const t=N*w,n=N*a[0];for(let v=0;v<r.inChannels;++v)for(let w=0;w<r.outDepth;++w){const N=w*o-m;let I=N;for(;I<0;)I+=l;const C=Math.min(r.inDepth,p+N),E=t+w*k;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let p=o;for(;p<0;)p+=u;const m=Math.min(r.inHeight,h+o),w=E+t*S;for(let t=0;t<r.outWidth;++t){const o=t*c-y;let i=o;for(;i<0;)i+=d;const h=Math.min(r.inWidth,f+o),g=w+t*T;let k=b,S=0,N=0;for(let t=I;t<C;t+=l){const r=n+t*a[1];for(let t=p;t<m;t+=u){const n=r+t*a[2];for(let t=i;t<h;t+=d){const r=e[n+t*a[3]+v];if("max"===s&&r>k?k=r:"avg"===s&&(S+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+v]="avg"===s?S/Math.max(N,1):k}}}}return v}const fh={kernelName:Me.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Qd(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Me.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&Me.util.arraysEqual(l.inShape,l.outShape))u=sp({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Me.util.computeStrides(r.shape),a=dh(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const mh={kernelName:Me.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Qd(r,"avgPool3d");const u=Me.backend_util.computePool3DInfo(r.shape,s,o,1,i,c,l),d=hh(n.data.get(r.dataId).values,r.shape,r.dtype,Me.util.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const gh={kernelName:Me.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Qd([r,s],"avgPool3DGrad");const u=Me.backend_util.computePool3DInfo(s.shape,o,i,1,c,l),d=u.strideDepth,p=u.strideHeight,h=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,v=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,S=x-1-u.padInfo.front,T=k-1-u.padInfo.left,N=w-1-u.padInfo.top,I=(0,Me.buffer)(s.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(r);for(let A=0;A<u.batchSize;++A)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-S,s=n-N,o=a-T;let i=0;for(let t=0;t<x;t+=y){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/p;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=v){const r=(o+t)/h;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=E.get(A,n,a,r,e)}}}I.set(i*C,A,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const yh={kernelName:Me.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;Qd([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Me.backend_util.computePool2DInfo(o.shape,i,c,1,l),d=u.strideHeight,p=u.strideWidth,h=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,v=b-1-u.padInfo.left,x=y-1-u.padInfo.top,w=(0,Me.buffer)(o.shape,"float32"),k=1/(h*f),S=n.data.get(r.dataId).values,T=(0,Me.buffer)(r.shape,"float32",S);for(let N=0;N<u.batchSize;++N)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-x,r=n-v;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/d;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/p;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=T.get(N,n,a,e)}}w.set(s*k,N,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const bh={kernelName:Me.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:c}=t;Me.util.assert(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Me.util.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Me.util.assert(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Qd([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(c.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=h.length,b=p.length,v=d.length;let x=0,w=0,k=0,S=0;for(let T=0;T<u.length;++T)m[T]=f[x++]+(u[T]-d[w++])*h[k++]/Math.sqrt(p[S++]+l),x>=g&&(x=0),w>=v&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function vh(e,t,n,a,r){const s=Me.slice_util.isSliceContinous(a,t,n),o=Me.util.sizeFromShape(n),i=Me.util.computeStrides(a);if(s){const n=Me.slice_util.computeFlatOffset(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const c="string"===r?Me.backend_util.fromUint8ToStringArray(e):e,l=(0,Me.buffer)(a,r,c),u=(0,Me.buffer)(n,r);for(let d=0;d<u.size;++d){const e=u.indexToLoc(d),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===r?Me.backend_util.fromStringArrayToUint8(u.values):u.values}function xh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;Qd(r,"slice");const[i,c]=Me.slice_util.parseSliceParams(r,s,o);Me.slice_util.assertParamsValid(r,i,c);const l=vh(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const wh={kernelName:Me.Slice,backendName:"cpu",kernelFunc:xh};const kh={kernelName:Me.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;Qd([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),c=Me.backend_util.getReshaped(r.shape,s,i),l=Me.backend_util.getPermuted(c.length,s.length),u=Me.backend_util.getReshapedPermuted(r.shape,s,i),d=Me.backend_util.getSliceBeginCoords(o,s.length),p=Me.backend_util.getSliceSize(u,o,s.length),h=Mp({inputs:{x:r},backend:n,attrs:{shape:c}}),f=Kp({inputs:{x:h},backend:n,attrs:{perm:l}}),m=Mp({inputs:{x:f},backend:n,attrs:{shape:u}}),g=xh({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function Sh(e,t,n,a,r){const s=Me.util.sizeFromShape(a),o=Me.util.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function Th(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=(0,Me.buffer)([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const Nh={kernelName:Me.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=Sh(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},Ih=lp(((e,t)=>e&t)),Ch=Ap(Me.BitwiseAnd,Ih),Eh={kernelName:Me.BitwiseAnd,backendName:"cpu",kernelFunc:Ch};const Ah={kernelName:Me.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=Me.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},Rh=ep((e=>Math.ceil(e))),_h=np(Me.Ceil,Rh),Fh={kernelName:Me.Ceil,backendName:"cpu",kernelFunc:_h},Dh=tp(Me.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Oh={kernelName:Me.ClipByValue,backendName:"cpu",kernelFunc:Dh},Mh={kernelName:Me.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(Me.util.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function zh(e,t,n,a){const r=Me.util.getArrayFromDType(n,Me.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=Me.util.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?Me.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function Lh(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Ph={kernelName:Me.Imag,backendName:"cpu",kernelFunc:Lh};function Bh(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Me.util.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));Me.backend_util.assertParamsConsistent(o,s);let i=Me.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===Me.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter((e=>Me.util.sizeFromShape(e.shape)>0));if(1===c.length)return sp({inputs:{x:c[0]},backend:n});if("complex64"===c[0].dtype){const e=c.map((e=>Tp({inputs:{input:e},backend:n}))),t=c.map((e=>Lh({inputs:{input:e},backend:n}))),a=Bh({inputs:e,backend:n,attrs:{axis:s}}),r=Bh({inputs:t,backend:n,attrs:{axis:s}}),o=wp({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const l=c.map((e=>{const t=Me.util.sizeFromShape(e.shape.slice(s));return Mp({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Me.backend_util.computeOutShape(l.map((e=>e.shape)),1);const d=1===l[0].shape[0],p=zh(u,i,t[0].dtype,d),h=Me.backend_util.computeOutShape(c.map((e=>e.shape)),s),f=n.makeTensorInfo(h,t[0].dtype,p);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Wh={kernelName:Me.Concat,backendName:"cpu",kernelFunc:Bh};function Vh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;Qd([r,s],"conv2d");const d=Me.backend_util.convertConv2DDataFormat(c),p=Me.backend_util.computeConv2DInfo(r.shape,s.shape,o,l,i,u,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,v="channelsLast"===p.dataFormat,x=new Me.TensorBuffer(p.outShape,r.dtype),w=Me.util.computeStrides(r.shape),k=Me.util.computeStrides(s.shape),S=w[0],T=v?w[1]:w[2],N=v?w[2]:1,I=v?1:w[1],C=x.strides[0],E=v?x.strides[1]:x.strides[2],A=v?x.strides[2]:1,R=v?1:x.strides[1],_=n.data.get(r.dataId).values,F=n.data.get(s.dataId).values,D=x.values;for(let O=0;O<p.batchSize;++O){const e=O*S,t=O*C;for(let n=0;n<p.outHeight;++n){const a=t+n*E,r=n*p.strideHeight-b;for(let t=0;t<h;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const s=t*k[0],o=e+n*T;for(let e=0;e<p.outWidth;++e){const t=a+e*A,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=p.inWidth)continue;const r=o+a*N;let i=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=_[r+e*I];for(let e=0;e<p.outChannels;++e)D[t+e*R]+=n*F[i+e];i+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,D)}const Uh={kernelName:Me.Conv2D,backendName:"cpu",kernelFunc:Vh};const Gh={kernelName:Me.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;Qd([r,s],"conv2dBackpropFilter");const d=Me.backend_util.convertConv2DDataFormat(c),p=Me.backend_util.computeConv2DInfo(r.shape,u,o,1,i,l,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Me.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=new Me.TensorBuffer(r.shape,r.dtype,w),T=new Me.TensorBuffer(s.shape,s.dtype,k);for(let N=0;N<m;++N){const e=Math.max(0,Math.ceil((x-N)/h)),t=Math.min(p.outHeight,(p.inHeight+x-N)/h);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((v-n)/f)),r=Math.min(p.outWidth,(p.inWidth+v-n)/f);for(let s=0;s<p.inChannels;++s)for(let o=0;o<p.outChannels;++o){let i=0;for(let c=0;c<p.batchSize;++c)for(let l=e;l<t;++l){const e=N+l*h-x;for(let t=a;t<r;++t){const a=n+t*f-v;i+=y?S.get(c,e,a,s)*T.get(c,l,t,o):S.get(c,s,e,a)*T.get(c,o,l,t)}}b.set(i,N,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const jh={kernelName:Me.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;Qd([r,s],"conv2dBackpropInput");const d=Me.util.computeStrides(s.shape),p=Me.util.computeStrides(r.shape);let h=Me.backend_util.convertConv2DDataFormat(l);const f=Me.backend_util.computeConv2DInfo(o,s.shape,i,1,c,u,!1,h),m=new Me.TensorBuffer(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[v,x,w]=d,{batchSize:k,filterHeight:S,filterWidth:T,inChannels:N,inHeight:I,inWidth:C,outChannels:E,outHeight:A,outWidth:R,strideHeight:_,strideWidth:F}=f;h=f.dataFormat;const D=S-1-f.padInfo.top,O=T-1-f.padInfo.left,M="channelsLast"===h,z=m.strides[0],L=M?m.strides[1]:m.strides[2],P=M?m.strides[2]:1,B=M?1:m.strides[1],W=p[0],V=M?p[1]:p[2],U=M?p[2]:1,G=M?1:p[1];for(let j=0;j<k;++j)for(let e=0;e<N;++e)for(let t=0;t<I;++t){const n=t-D,a=Math.max(0,Math.ceil(n/_)),r=Math.min(A,(S+n)/_);for(let s=0;s<C;++s){const o=s-O,i=Math.max(0,Math.ceil(o/F)),c=Math.min(R,(T+o)/F);let l=0;for(let t=a;t<r;++t){const a=t*_-n;for(let n=i;n<c;++n){const r=W*j+V*t+U*n,s=v*(S-1-a)+x*(T-1-(n*F-o))+w*e;for(let e=0;e<E;++e){l+=y[r+G*e]*b[s+e]}}}g[z*j+L*t+P*s+B*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Hh={kernelName:Me.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a;Qd([r,s],"conv3d");const l=Me.backend_util.computeConv3DInfo(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,v=g.top,x=new Me.TensorBuffer(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,S=x.values,T=Me.util.computeStrides(r.shape),N=Me.util.computeStrides(s.shape);for(let I=0;I<l.batchSize;++I){const e=I*T[0],t=I*x.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*x.strides[1],r=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=r+t*h;if(n<0||n>=l.inDepth)continue;const s=t*N[0],o=e+n*T[1];for(let e=0;e<l.outHeight;++e){const t=a+e*x.strides[2],n=e*l.strideHeight-v;for(let e=0;e<d;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*N[1],i=o+a*T[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*N[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const qh={kernelName:Me.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a;Qd([r,s],"conv3dBackpropFilterV2");const l=Me.util.computeStrides(r.shape),u=Me.util.computeStrides(s.shape),d=Me.backend_util.computeConv3DInfo(r.shape,c,o,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new Me.TensorBuffer(d.filterShape,"float32"),v=b.values,[x,w,k,S]=b.strides,T=n.data.get(s.dataId).values,[N,I,C,E]=u,A=n.data.get(r.dataId).values,[R,_,F,D]=l,O=d.padInfo.front,M=d.padInfo.left,z=d.padInfo.top;for(let L=0;L<m;++L){const e=Math.max(0,Math.ceil((O-L)/p)),t=Math.min(d.outDepth,(d.inDepth+O-L)/p),n=L*x;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((z-a)/h)),s=Math.min(d.outHeight,(d.inHeight+z-a)/h),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((M-n)/f)),c=Math.min(d.outWidth,(d.inWidth+M-n)/f),l=n*k+o;for(let o=0;o<d.inChannels;++o){const u=o*S+l;for(let l=0;l<d.outChannels;++l){let m=0;for(let u=0;u<d.batchSize;++u){const d=u*R,g=u*N;for(let u=e;u<t;++u){const e=(L+u*p-O)*_+d,t=u*I+g;for(let u=r;u<s;++u){const r=(a+u*h-z)*F+e,s=u*C+t;for(let e=i;e<c;++e){const t=e*E+s;m+=A[(n+e*f-M)*D+r+o]*T[t+l]}}}}v[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Yh={kernelName:Me.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a;Qd([r],"conv3dBackpropInputV2");const l=Me.util.computeStrides(r.shape),u=Me.util.computeStrides(s.shape),d=Me.backend_util.computeConv3DInfo(c,s.shape,i,1,o),p=new Me.TensorBuffer(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[v,x,w,k]=l,S=n.data.get(s.dataId).values,[T,N,I,C]=u,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:_,inChannels:F,inDepth:D,inHeight:O,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=d,G=A-1-d.padInfo.front,j=R-1-d.padInfo.top,H=_-1-d.padInfo.left;for(let q=0;q<E;++q)for(let e=0;e<F;++e)for(let t=0;t<D;++t){const n=t-G,a=Math.max(0,Math.ceil(n/W)),r=Math.min(L,(A+n)/W);for(let s=0;s<O;++s){const o=s-j,i=Math.max(0,Math.ceil(o/V)),c=Math.min(P,(R+o)/V);for(let l=0;l<M;++l){const u=l-H,d=Math.max(0,Math.ceil(u/U)),p=Math.min(B,(_+u)/U);let E=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<c;++n){const r=n*V-o;for(let s=d;s<p;++s){const o=v*q+x*t+w*n+k*s,i=T*(A-1-a)+N*(R-1-r)+I*(_-1-(s*U-u))+C*e;for(let e=0;e<z;++e){E+=b[o+e]*S[i+e]}}}}h[f*q+m*t+g*s+y*l+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Kh=tp(Me.Cos,(e=>Math.cos(e))),Xh={kernelName:Me.Cos,backendName:"cpu",kernelFunc:Kh},Zh=tp(Me.Cosh,(e=>Math.cosh(e))),Qh={kernelName:Me.Cosh,backendName:"cpu",kernelFunc:Zh};const Jh={kernelName:Me.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,d,p,h]=r.shape,f=s.shape[0],[m,g]=i,y=(0,Me.buffer)([f,m,g,h],"float32"),b=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(r.dataId).values,w=Me.util.computeStrides(r.shape),k=Me.util.computeStrides(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=v[S];if(s>=u)continue;const o=m>1?(a-t)*(d-1)/(m-1):0,i=g>1?(r-n)*(p-1)/(g-1):0;for(let u=0;u<m;u++){const e=m>1?t*(d-1)+u*o:.5*(t+a)*(d-1);if(e<0||e>d-1)for(let t=0;t<g;t++)for(let e=0;e<h;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const c=g>1?n*(p-1)+e*i:.5*(n+r)*(p-1);if(c<0||c>p-1){for(let t=0;t<h;t++){const n=t+e*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const d=Math.floor(c),f=Math.ceil(c),m=c-d;for(let n=0;n<h;n++){let r=n+d*w[2]+t*w[1]+s*w[0];const i=x[r];r=n+f*w[2]+t*w[1]+s*w[0];const c=x[r];r=n+d*w[2]+a*w[1]+s*w[0];const l=x[r];r=n+f*w[2]+a*w[1]+s*w[0];const p=i+(c-i)*m,h=l+(x[r]-l)*m;r=n+e*k[2]+u*k[1]+S*k[0],y.values[r]=p+(h-p)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(p-1)+t*i:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let e=0;e<h;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<h;e++){const n=e+o*w[2]+c*w[1]+s*w[0],a=e+t*k[2]+u*k[1]+S*k[0];y.values[a]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const $h={kernelName:Me.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Qd(r,"cumprod");const c=Me.backend_util.getAxesPermutation([s],r.shape.length);let l=r;null!=c&&(l=Kp({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Me.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const d=(0,Me.upcastType)(l.dtype,"int32"),p=Me.util.makeOnesTypedArray(Me.util.sizeFromShape(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=o?1:h[t];else{const n=m(y,e-1);p[t]=o?h[n]*p[n]:h[t]*p[n]}}const g=n.makeTensorInfo(l.shape,d,p);if(null!=c){const e=Kp({inputs:{x:g},backend:n,attrs:{perm:Me.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const ef={kernelName:Me.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Qd(r,"cumsum");const c=Me.backend_util.getAxesPermutation([s],r.shape.length);let l=r;null!=c&&(l=Kp({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=Me.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const d=(0,Me.upcastType)(l.dtype,"int32"),p=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=o?0:h[t];else{const n=m(y,e-1);p[t]=o?h[n]+p[n]:h[t]+p[n]}}const g=n.makeTensorInfo(l.shape,d,p);if(null!=c){const e=Kp({inputs:{x:g},backend:n,attrs:{perm:Me.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const tf={kernelName:Me.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=Sh(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=Th(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const nf={kernelName:Me.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;Me.util.assert("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],d=c*s,p=l*s,h=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*p*h);let g=0;for(let y=0;y<i;++y)for(let e=0;e<d;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<p;++e){const a=Math.floor(e/s),r=(n*s+e%s)*h;for(let e=0;e<h;++e){const n=e+r+u*(a+l*(t+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,d,p,h],r.dtype,m)}};function af(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;Qd([r,s],"depthwiseConv2DNative");const u=Me.util.computeStrides(r.shape),d=Me.util.computeStrides(s.shape);let p=c;null==p&&(p=[1,1]),Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,p),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(p,"'")));const h=Me.backend_util.computeConv2DInfo(r.shape,s.shape,o,p,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,v=b.left,x=b.top,w=h.outChannels/h.inChannels,k=new Me.TensorBuffer(h.outShape,r.dtype),S=n.data.get(r.dataId).values,T=n.data.get(s.dataId).values,N=k.values;for(let I=0;I<h.batchSize;++I){const e=I*u[0],t=I*k.strides[0];for(let n=0;n<h.outHeight;++n){const a=t+n*k.strides[1],r=n*h.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=h.inHeight)continue;const s=t*d[0],o=e+n*u[1];for(let e=0;e<h.outWidth;++e){const t=a+e*k.strides[2],n=e*h.strideWidth-v;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=h.inWidth)continue;const r=s+e*d[1],i=o+a*h.inChannels;let c=t,l=r;for(let e=0;e<h.inChannels;++e){const t=S[i+e];for(let e=0;e<w;++e)N[c+e]+=t*T[l+e];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const rf={kernelName:Me.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:af};const sf={kernelName:Me.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;Qd([r,s],"depthwiseConv2dNativeBackpropFilter");const d=Me.backend_util.computeConv2DInfo(r.shape,u,o,i,c,l,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new Me.TensorBuffer(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,v=d.outChannels/d.inChannels,x=n.data.get(r.dataId).values,w=new Me.TensorBuffer(r.shape,r.dtype,x),k=n.data.get(s.dataId).values,S=new Me.TensorBuffer(s.shape,s.dtype,k);for(let T=0;T<f;++T){const e=Math.max(0,Math.ceil((b-T)/p)),t=Math.min(d.outHeight,(d.inHeight+b-T)/p);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/h)),r=Math.min(d.outWidth,(d.inWidth+y-n)/h);for(let s=0;s<d.outChannels;++s){const o=Math.trunc(s/v),i=s%v;let c=0;for(let l=0;l<d.batchSize;++l)for(let i=e;i<t;++i){const e=T+i*p-b;for(let t=a;t<r;++t){const a=n+t*h-y;c+=w.get(l,e,a,o)*S.get(l,i,t,s)}}g.set(c,T,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const of={kernelName:Me.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;Qd([r,s],"depthwiseConv2DNativeBackpropInput");const d=Me.util.computeStrides(r.shape),p=Me.util.computeStrides(s.shape),h=Me.backend_util.computeConv2DInfo(u,s.shape,o,i,c,l,!0),f=new Me.TensorBuffer(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(r.dataId).values,[x,w,k]=d,S=n.data.get(s.dataId).values,[T,N,I]=p,{batchSize:C,filterHeight:E,filterWidth:A,inChannels:R,inHeight:_,inWidth:F,outChannels:D,outHeight:O,outWidth:M,strideHeight:z,strideWidth:L}=h,P=E-1-h.padInfo.top,B=A-1-h.padInfo.left,W=D/R;for(let V=0;V<C;++V)for(let e=0;e<R;++e)for(let t=0;t<_;++t){const n=t-P,a=Math.max(0,Math.ceil(n/z)),r=Math.min(O,(E+n)/z);for(let s=0;s<F;++s){const o=s-B,i=Math.max(0,Math.ceil(o/L)),c=Math.min(M,(A+o)/L);let l=0;for(let t=a;t<r;++t){const a=t*z-n;for(let n=i;n<c;++n){const r=x*V+w*t+k*n,s=T*(E-1-a)+N*(A-1-(n*L-o))+I*e;for(let t=0;t<W;++t){l+=v[r+(e*W+t)]*S[s+t]}}}m[g*V+y*t+b*s+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const cf={kernelName:Me.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=Me.util.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,o=(0,Me.buffer)([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},lf={kernelName:Me.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,d=r.shape.length,p=l.data.get(s.dataId).values,h=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:S,filterWidth:T,dilationHeight:N,dilationWidth:I,outShape:C}=Me.backend_util.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c),E=Me.util.sizeFromShape(C),A=C.length,R=Me.util.getArrayFromDType(r.dtype,E);for(let _=0;_<f;++_)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<S;++e){const n=t+e*N;if(n>=0&&n<m)for(let t=0;t<T;++t){const c=a+t*I;if(c>=0&&c<g){const a=Me.util.locToIndex([_,n,c,o],d,Me.util.computeStrides(r.shape)),l=Me.util.locToIndex([e,t,o],h,Me.util.computeStrides(s.shape)),f=u[a]+p[l];f>i&&(i=f)}}}R[Me.util.locToIndex([_,e,n,o],A,Me.util.computeStrides(C))]=i}}}return{dataId:l.write(Me.util.toTypedArray(R,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},uf={kernelName:Me.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=Me.util.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Me.util.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:T,dilationWidth:N,outShape:I}=Me.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);Me.util.assert(o.rank===I.length,(()=>"Error in ".concat(Me.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(I.length,", but got ")+"".concat(o.rank)));const C=Me.util.toNestedArray(I,u.data.get(o.dataId).values),E=Me.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let A=0;A<h;++A)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<k;++e){const n=t+e*T;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*N;if(c>=0&&c<m){const a=d[A][n][c][r]+p[e][t][r];a>s&&(s=a,o=e,i=t)}}}E[o][i][r]+=C[A][e][n][r]}}}return{dataId:u.write(Me.util.toTypedArray(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},df={kernelName:Me.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=Me.util.toNestedArray(r.shape,u.data.get(r.dataId).values),p=Me.util.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:S,dilationHeight:T,dilationWidth:N,outShape:I}=Me.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);Me.util.assert(o.rank===I.length,(()=>"Error in ".concat(Me.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(I.length,", but got ")+"".concat(o.rank)));const C=Me.util.toNestedArray(I,u.data.get(o.dataId).values),E=Me.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let A=0;A<h;++A)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*T;if(n>=0&&n<f)for(let t=0;t<S;++t){const c=a+t*N;if(c>=0&&c<m){const a=d[A][n][c][r]+p[e][t][r];a>s&&(s=a,o=n,i=c)}}}E[A][o][i][r]+=C[A][e][n][r]}}}return{dataId:u.write(Me.util.toTypedArray(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const pf={kernelName:Me.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[p,h]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(h*p*4);for(let v=0;v<p*h;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=h,s.height=p;const b=new ImageData(y,h,p);return d.putImageData(b,0,0),r}},hf=lp(((e,t)=>e*t)),ff=Rp(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),mf=Ap(Me.Multiply,hf,ff),gf={kernelName:Me.Multiply,backendName:"cpu",kernelFunc:mf};function yf(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;Qd(r,"sum"),i="bool"===r.dtype?Cp({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):sp({inputs:{x:r},backend:n});const c=i.shape.length,l=Me.util.parseAxisParam(s,i.shape),u=Me.backend_util.getAxesPermutation(l,c);let d=l,p=i;null!=u&&(p=Kp({inputs:{x:i},backend:n,attrs:{perm:u}}),d=Me.backend_util.getInnerMostAxes(d.length,c)),Me.backend_util.assertAxesAreInnerMostDims("sum",d,p.shape.length);const[h,f]=Me.backend_util.computeOutAndReduceShapes(p.shape,d);let m=Sp(n,h,Me.backend_util.upcastType(p.dtype,"int32"));const g=Me.util.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let v=0;v<y.length;++v){const e=v*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[v]=t}if(o){const e=m;m=Mp({inputs:{x:m},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(p),m}const bf={kernelName:Me.Sum,backendName:"cpu",kernelFunc:yf};const vf={kernelName:Me.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=Me.backend_util.decodeEinsumEquation(r,s.length);Me.backend_util.checkEinsumDimSizes(o.length,c,s);const{path:l,steps:u}=Me.backend_util.getEinsumComputePath(i,c),d=u.length;let p=null,h=o.length;const f=[];for(let m=0;m<d;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=Me.backend_util.getEinsumPermutation(h,c[e]);let r;Me.backend_util.isIdentityPermutation(t)?r=s[e]:(r=Kp({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);Me.util.arraysEqual(r.shape,o)||(r=Mp({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===p?p=r:(p=mf({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=yf({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}};const xf={kernelName:Me.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;Qd([a,r],"eluGrad");const s=new Float32Array(Me.util.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];s[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},wf=lp(((e,t)=>e===t?1:0)),kf=Ap(Me.Equal,wf,null,"bool"),Sf={kernelName:Me.Equal,backendName:"cpu",kernelFunc:kf},Tf=Me.backend_util.ERF_P,Nf=Me.backend_util.ERF_A1,If=Me.backend_util.ERF_A2,Cf=Me.backend_util.ERF_A3,Ef=Me.backend_util.ERF_A4,Af=Me.backend_util.ERF_A5,Rf=tp(Me.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+Tf*n);return t*(1-((((Af*a+Ef)*a+Cf)*a+If)*a+Nf)*a*Math.exp(-n*n))})),_f={kernelName:Me.Erf,backendName:"cpu",kernelFunc:Rf},Ff=ep((e=>Math.exp(e))),Df=np(Me.Exp,Ff,"float32"),Of={kernelName:Me.Exp,backendName:"cpu",kernelFunc:Df};function Mf(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(Me.util.assert(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),Mp({inputs:{x:r},backend:n,attrs:{shape:i}})}const zf={kernelName:Me.ExpandDims,backendName:"cpu",kernelFunc:Mf},Lf=ep((e=>Math.expm1(e))),Pf=np(Me.Expm1,Lf),Bf={kernelName:Me.Expm1,backendName:"cpu",kernelFunc:Pf},Wf=lp(((e,t)=>e/t)),Vf=Ap(Me.RealDiv,Wf),Uf={kernelName:Me.RealDiv,backendName:"cpu",kernelFunc:Vf},Gf=lp(((e,t)=>e-t)),jf=Rp(((e,t,n,a)=>({real:e-n,imag:t-a}))),Hf=Ap(Me.Sub,Gf,jf),qf={kernelName:Me.Sub,backendName:"cpu",kernelFunc:Hf};function Yf(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=Me.util.sizeFromShape(l),d=Me.util.getTypedArrayFromDType("float32",u),p=Me.util.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){const e=xh({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=xh({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=wp({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=Kf(r,t,n),u=Me.backend_util.mergeRealAndImagArrays(o,l);for(let t=0;t<s;t++){const e=Me.backend_util.getComplexWithIndex(u,t);d[g*s+t]=e.real,p[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const h=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",p),m=wp({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function Kf(e,t,n){const a=Me.util.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=Xf(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",Me.util.createScalarValue(a,"float32")),o=sp({inputs:{x:s},backend:n}),c=Uf.kernelFunc({inputs:{a:e,b:s},backend:n}),l=Uf.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:d}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=Me.backend_util.exponent(r*a,t,n),c=Me.backend_util.getComplexWithIndex(e,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=t,o/=t),Me.backend_util.assignToTypedArray(a,s,o,r)}return a}(Me.backend_util.mergeRealAndImagArrays(s,o),a,t);return Me.backend_util.splitRealAndImagArrays(e)}var i}function Xf(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=Me.backend_util.mergeRealAndImagArrays(e,t),o=n/2,i=Me.backend_util.complexWithEvenIndex(s),c=i.real,l=i.imag,u=[c.length],d=r.makeTensorInfo(u,"float32",c),p=r.makeTensorInfo(u,"float32",l),h=wp({inputs:{real:d,imag:p},backend:r}),f=Me.backend_util.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),v=r.makeTensorInfo(y,"float32",g),x=wp({inputs:{real:b,imag:v},backend:r}),w=Xf(c,l,o,a,r),k=w.real,S=w.imag,T=[k.length],N=r.makeTensorInfo(T,"float32",k),I=r.makeTensorInfo(T,"float32",S),C=wp({inputs:{real:N,imag:I},backend:r}),E=Xf(m,g,o,a,r),A=E.real,R=E.imag,_=[A.length],F=r.makeTensorInfo(_,"float32",A),D=r.makeTensorInfo(_,"float32",R),O=wp({inputs:{real:F,imag:D},backend:r}),M=Me.backend_util.exponents(n,a),z=[M.real.length],L=r.makeTensorInfo(z,"float32",M.real),P=r.makeTensorInfo(z,"float32",M.imag),B=wp({inputs:{real:L,imag:P},backend:r}),W=mf({inputs:{a:B,b:O},backend:r}),V=Dp({inputs:{a:C,b:W},backend:r}),U=Hf({inputs:{a:C,b:W},backend:r}),G=Tp({inputs:{input:V},backend:r}),j=Tp({inputs:{input:U},backend:r}),H=Lh({inputs:{input:V},backend:r}),q=Lh({inputs:{input:U},backend:r}),Y=Bh({inputs:[G,j],backend:r,attrs:{axis:0}}),K=Bh({inputs:[H,q],backend:r,attrs:{axis:0}}),X=r.data.get(Y.dataId).values,Z=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(I),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(Y),r.disposeIntermediateTensorInfo(K),{real:X,imag:Z}}const Zf={kernelName:Me.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Me.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=Mp({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=Yf(o,!1,n),c=Mp({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function Qf(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||Me.util.inferDtype(r),i=Me.util.getArrayFromDType(o,Me.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const Jf={kernelName:Me.Fill,backendName:"cpu",kernelFunc:Qf};const $f={kernelName:Me.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=Me.util.getTypedArrayFromDType(r.dtype,Me.util.sizeFromShape(r.shape)),[i,c,l,u]=r.shape,d=s.data.get(r.dataId).values;for(let p=0;p<i;p++){const e=p*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const s=Math.round(l-t-1),i=e+n+a+r;let c=d[i];if(s>=0&&s<l){c=d[e+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},em=ep((e=>Math.floor(e))),tm=np(Me.Floor,em),nm={kernelName:Me.Floor,backendName:"cpu",kernelFunc:tm},am=lp(((e,t)=>Math.floor(e/t))),rm=Ap(Me.FloorDiv,am,null,"int32"),sm={kernelName:Me.FloorDiv,backendName:"cpu",kernelFunc:rm};const om={kernelName:Me.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=Vh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=Mp({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Dp({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Dp({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(h){const e=m;if("NCHW"===u&&"prelu"===h&&1===i.shape.length&&1!==i.shape[0]){const e=Mp({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=xp(n,m,h,e,f),n.disposeIntermediateTensorInfo(e)}else m=xp(n,m,h,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const im={kernelName:Me.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=af({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}});if(o){const e=m;m=Dp({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=xp(n,m,h,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function cm(e,t,n,a,r,s,o,i,c){const l=(0,Me.buffer)([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[u*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)l.values[u*s+e]=t.get(...t.indexToLoc(a*s+e))}return l}const lm={kernelName:Me.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=Me.util.sizeFromShape(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,d]=Me.backend_util.prepareAndValidate(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const p=cm(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,d,a.shape,s);return n.makeTensorInfo(c,a.dtype,p.values)}};function um(e,t,n){const a=(0,Me.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const dm={kernelName:Me.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;Qd([r,s],"gatherV2");const c=Me.util.parseAxisParam(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let v=0;v<l.length;++v){const e=l[v];Me.util.assert(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let d=i;null==i&&(d=0);const p=Me.util.sizeFromShape(s.shape),h=Me.backend_util.segment_util.collectGatherOpShapeInfo(r,s,c,d),f=Mp({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=Mp({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),b=um(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,b.dtype,b.values)}},pm=lp(((e,t)=>e>t?1:0)),hm=Ap(Me.Greater,pm,null,"bool"),fm={kernelName:Me.Greater,backendName:"cpu",kernelFunc:hm},mm=lp(((e,t)=>e>=t?1:0)),gm=Ap(Me.GreaterEqual,mm,null,"bool"),ym={kernelName:Me.GreaterEqual,backendName:"cpu",kernelFunc:gm};const bm={kernelName:Me.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=Me.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=Mp({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=Yf(o,!0,n),c=Mp({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},vm=tp(Me.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),xm={kernelName:Me.IsFinite,backendName:"cpu",kernelFunc:vm},wm=tp(Me.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),km={kernelName:Me.IsInf,backendName:"cpu",kernelFunc:wm},Sm=tp(Me.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Tm={kernelName:Me.IsNan,backendName:"cpu",kernelFunc:Sm},Nm=lp(((e,t)=>e<t?1:0)),Im=Ap(Me.Less,Nm,null,"bool"),Cm={kernelName:Me.Less,backendName:"cpu",kernelFunc:Im},Em=lp(((e,t)=>e<=t?1:0)),Am=Ap(Me.LessEqual,Em,null,"bool"),Rm={kernelName:Me.LessEqual,backendName:"cpu",kernelFunc:Am};function _m(e,t,n){const a=(t-e)/(n-1),r=Me.util.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const Fm={kernelName:Me.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=_m(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},Dm=ep((e=>Math.log(e))),Om=np(Me.Log,Dm),Mm={kernelName:Me.Log,backendName:"cpu",kernelFunc:Om},zm=tp(Me.Log1p,(e=>Math.log1p(e))),Lm={kernelName:Me.Log1p,backendName:"cpu",kernelFunc:zm},Pm=lp(((e,t)=>e&&t)),Bm=Ap(Me.LogicalAnd,Pm,null,"bool"),Wm={kernelName:Me.LogicalAnd,backendName:"cpu",kernelFunc:Bm},Vm=tp(Me.LogicalNot,(e=>e?0:1),"bool"),Um={kernelName:Me.LogicalNot,backendName:"cpu",kernelFunc:Vm},Gm=lp(((e,t)=>e||t)),jm=Ap(Me.LogicalOr,Gm,null,"bool"),Hm={kernelName:Me.LogicalOr,backendName:"cpu",kernelFunc:jm};const qm={kernelName:Me.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a;Qd(r,"LRN");const l=r.shape[3],u=l-1,d=n.data.get(r.dataId).values,p=Me.util.sizeFromShape(r.shape),h=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,u);let r=0;for(;n<=a;n++){const e=d[n];r+=e*e}return r}for(let m=0;m<p;m++){const e=f(m),t=d[m]*Math.pow(o+i*e,-c);h[m]=t}return n.makeTensorInfo(r.shape,r.dtype,h)}};const Ym={kernelName:Me.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;Qd(o,"LRNGrad");const d=Me.util.sizeFromShape(o.shape),p=o.shape[3],h=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){const e=b%p,t=b-e+Math.max(0,e-i),n=b-e+Math.min(p,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-u)),e*=h[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function Km(e,t,n,a){const r=Me.util.getTypedArrayFromDType(a,Me.util.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function Xm(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=Me.util.parseAxisParam(s,c);let d=u;const p=Me.backend_util.getAxesPermutation(d,l);let h=i.data.get(r.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[p[t]];h=Yp(h,c,r.dtype,p,e),d=Me.backend_util.getInnerMostAxes(d.length,l),c=e}Qd(r,"max"),Me.backend_util.assertAxesAreInnerMostDims("max",d,l);const[f,m]=Me.backend_util.computeOutAndReduceShapes(c,d),g=Km(h,Me.util.sizeFromShape(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=Me.backend_util.expandShapeToKeepDim(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const Zm={kernelName:Me.Max,backendName:"cpu",kernelFunc:Xm},Qm=lp(((e,t)=>Math.max(e,t))),Jm=Ap(Me.Maximum,Qm),$m={kernelName:Me.Maximum,backendName:"cpu",kernelFunc:Jm};const eg={kernelName:Me.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Qd(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Me.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&Me.util.arraysEqual(l.inShape,l.outShape))u=sp({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=Me.util.computeStrides(r.shape),a=dh(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const tg={kernelName:Me.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Qd(r,"maxPool3d");const u=Me.backend_util.computePool3DInfo(r.shape,s,o,1,i,c,l),d=hh(n.data.get(r.dataId).values,r.shape,r.dtype,Me.util.computeStrides(r.shape),u,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const ng={kernelName:Me.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Qd([r,s],"maxPool3DGrad");const u=Me.backend_util.computePool3DInfo(s.shape,o,i,1,c,l),d=function(e,t){const n=(0,Me.buffer)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-p;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-h;let p=l;for(;p<0;)p+=i;const w=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const h=r*s-f;let k=h;for(;k<0;)k+=c;const S=Math.min(t.inWidth,d+h);let T=Number.NEGATIVE_INFINITY,N=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let a=p;a<w;a+=i){const r=a-l;for(let s=k;s<S;s+=c){const o=s-h,i=e.get(m,t,a,s,g);i>=T&&(T=i,N=n*u*d+r*u+o)}}}n.set(N,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),p=u.strideDepth,h=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,x=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=x-1-u.padInfo.left,S=v-1-u.padInfo.top,T=(0,Me.buffer)(s.shape,"float32"),N=n.bufferSync(r);for(let I=0;I<u.batchSize;++I)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-w,s=n-S,o=a-k;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/p;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<v;a+=g){const r=(s+a)/h;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*v*x-1-d.get(I,n,r,c,e)===t*v*x+a*x+s?1:0;if(0===l)continue;i+=N.get(I,n,r,c,e)*l}}}T.set(i,I,t,n,a,e)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}};const ag={kernelName:Me.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;Qd([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,p=Me.backend_util.computePool2DInfo(i.shape,c,l,1,u,d),h=n.data.get(i.dataId).values,f=(0,Me.buffer)(p.outShape,i.dtype,ph(h,i.shape,i.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,v=p.effectiveFilterHeight,x=p.effectiveFilterWidth,w=x-1-p.padInfo.left,k=v-1-p.padInfo.top,S=(0,Me.buffer)(i.shape,"float32"),T=n.data.get(r.dataId).values,N=(0,Me.buffer)(r.shape,"float32",T);for(let I=0;I<p.batchSize;++I)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-k,r=n-w;let s=0;for(let t=0;t<v;t+=y){const n=(a+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<x;a+=b){const o=(r+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const i=v*x-1-f.get(I,n,o,e)===t*x+a?1:0;if(0===i)continue;s+=N.get(I,n,o,e)*i}}S.set(s,I,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const rg={kernelName:Me.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;Qd(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,d=Me.backend_util.computePool2DInfo(r.shape,s,o,[1,1],i),[p,h]=function(e,t,n,a,r){const s=dh(e,0,n,Me.util.computeStrides(t),r,"max"),o=ph(e,t,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,d),f=l.write(p,d.outShape,r.dtype),m=l.write(h,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};const sg={kernelName:Me.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=Me.util.parseAxisParam(s,r.shape),c=Me.backend_util.computeOutAndReduceShapes(r.shape,i)[1],l=Me.util.sizeFromShape(c),u=[],d=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(d);const p=Cp({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(p);const h=Vf({inputs:{a:p,b:d},backend:n});u.push(h);const f=yf({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:o}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const og={kernelName:Me.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Qd(r,"min");const i=Me.util.parseAxisParam(s,r.shape);let c=i;const l=Me.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Kp({inputs:{x:r},backend:n,attrs:{perm:l}}),c=Me.backend_util.getInnerMostAxes(c.length,r.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("min",c,u.shape.length);const[d,p]=Me.backend_util.computeOutAndReduceShapes(u.shape,c),h=Me.util.sizeFromShape(p),f=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Mp({inputs:{x:g},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ig=lp(((e,t)=>Math.min(e,t))),cg=Ap(Me.Minimum,ig),lg={kernelName:Me.Minimum,backendName:"cpu",kernelFunc:cg};const ug={kernelName:Me.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;Qd(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===o?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=Me.util.computeStrides(r.shape),f=Me.util.sizeFromShape(i),m=i.length,g=Me.util.computeStrides(i),y=Me.util.getTypedArrayFromDType(r.dtype,f);for(let b=0;b<f;b++){let e=Me.util.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=Me.util.locToIndex(e,p,h);y[b]=d[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},dg=lp(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),pg=Ap(Me.Mod,dg),hg={kernelName:Me.Mod,backendName:"cpu",kernelFunc:pg};function fg(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=Me.util.parseAxisParam([i],r.shape),l=Xm({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=Me.backend_util.expandShapeToKeepDim(l.shape,c),d=Mp({inputs:{x:l},backend:n,attrs:{shape:u}}),p=Hf({inputs:{a:r,b:d},backend:n}),h=Df({inputs:{x:p},backend:n}),f=yf({inputs:{x:h},backend:n,attrs:{axis:c,keepDims:!1}}),m=Mp({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Vf({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const mg={kernelName:Me.Softmax,backendName:"cpu",kernelFunc:fg};const gg={kernelName:Me.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;Qd(r,"multinomial");const c=i?r:fg({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],d=n.data.get(c.dataId).values,p=[l,s],h=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(p),"int32");for(let f=0;f<l;++f){const e=f*u,t=new Float32Array(u-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=xd.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();h[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){h[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(p,"int32",h)}};function yg(e,t,n){const a=Me.util.createScalarValue(-1,n);return hf([],t,a,e,n)}const bg={kernelName:Me.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Qd(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=yg(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},vg=Me.kernel_impls.nonMaxSuppressionV3Impl;const xg={kernelName:Me.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;Qd(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=vg(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},wg=Me.kernel_impls.nonMaxSuppressionV4Impl;const kg={kernelName:Me.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;Qd(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=wg(u,d,o,i,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},Sg=Me.kernel_impls.nonMaxSuppressionV5Impl;const Tg={kernelName:Me.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;Qd(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,p=o,h=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=Sg(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},Ng=lp(((e,t)=>e!==t?1:0)),Ig=Ap(Me.NotEqual,Ng,null,"bool"),Cg={kernelName:Me.NotEqual,backendName:"cpu",kernelFunc:Ig};const Eg={kernelName:Me.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a;Qd(r,"oneHot");const l=Me.util.sizeFromShape(r.shape),u=new Float32Array(l*o);u.fill(c);const d=n.data.get(r.dataId).values;for(let p=0;p<l;++p)d[p]>=0&&d[p]<o&&(u[p*o+d[p]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function Ag(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=Tp({inputs:{input:a},backend:n}),t=Ag({inputs:{x:e},backend:n}),r=Lh({inputs:{input:a},backend:n}),s=Ag({inputs:{x:r},backend:n}),o=wp({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return Qf({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const Rg={kernelName:Me.ZerosLike,backendName:"cpu",kernelFunc:Ag};const _g={kernelName:Me.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=Tp({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Lh({inputs:{input:r},backend:a}),o=Ag({inputs:{x:s},backend:a}),i=wp({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return Qf({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Fg(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Mf({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{Me.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Me.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=Bh({inputs:t.map((e=>{const t=Mf({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Dg={kernelName:Me.Pack,backendName:"cpu",kernelFunc:Fg};const Og={kernelName:Me.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;Qd(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=n.data.get(r.dataId).values,u=Me.util.sizeFromShape(r.shape),d=r.shape.length,p=Me.util.computeStrides(r.shape),h=Me.util.sizeFromShape(i),f=i.length,m=Me.util.computeStrides(i),g=Me.util.getTypedArrayFromDType(r.dtype,h);0!==o&&g.fill(o);for(let y=0;y<u;y++){const e=Me.util.indexToLoc(y,d,p).map(((e,t)=>e+c[t]));g[Me.util.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},Mg=lp(((e,t)=>Math.pow(e,t))),zg=Ap(Me.Pow,Mg),Lg={kernelName:Me.Pow,backendName:"cpu",kernelFunc:zg};function Pg(e,t,n,a){const[r,s]=Me.backend_util.computeOutAndReduceShapes(e,a),o=(0,Me.upcastType)(t,"int32"),i=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(r),o),c=Me.util.sizeFromShape(s);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:o}}const Bg={kernelName:Me.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Qd(r,"prod");const i=r.shape.length,c=Me.util.parseAxisParam(s,r.shape),l=Me.backend_util.getAxesPermutation(c,i);let u=c,d=r;const p=[];null!=l&&(d=Kp({inputs:{x:r},backend:n,attrs:{perm:l}}),p.push(d),u=Me.backend_util.getInnerMostAxes(u.length,i));const h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=Pg(d.shape,d.dtype,h,u);let y=m;return o&&(y=Me.backend_util.expandShapeToKeepDim(m,c)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Wg(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function Vg(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function Ug(e,t,n,a,r){const s=t.slice();s[0]=r;const o=Me.util.getArrayFromDType(n,Me.util.sizeFromShape(s)),i=e.length;return function(e,t,n,a,r,s){const o=Vg(t,2)[1],i=Vg(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function Gg(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=Me.util.indexToLoc(a,t.length,Me.util.computeStrides(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:d}=Wg(s,o,e,c),p=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,r=Me.util.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),h=Ug(n,a,r,u,d);return[p,h[0],h[1]]}const jg={kernelName:Me.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[p,h,f]=Gg(c,l,u,s.shape,s.dtype,d,o.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}},Hg=2147483647;function qg(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(o[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===u.length?1:u[0],p=Me.util.getArrayFromDType("int32",d+1);p[0]=0;for(let g=0;g<d;++g){const t=i?e[0]:e[g],n=c?a[0]:a[g],r=l?s[0]:s[g];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>Hg)throw new Error("Requires ((limit - start) / delta) <= ".concat(Hg));p[g+1]=p[g]+o}const h=p[d],f=Me.util.getArrayFromDType(n,h);let m=0;for(let g=0;g<d;++g){const t=p[g+1]-p[g];let n=i?e[0]:e[g];const a=l?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=a}return[p,f]}const Yg={kernelName:Me.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=qg(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var Kg=Me.backend_util.RowPartitionType;class Xg{constructor(e,t,n,a,r,s,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Me.backend_util.getRowPartitionTypesHelper(l),this.raggedRank=Me.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Kg.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Kg.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Kg.VALUE_ROWIDS:return Xg.getMaxWidthValueRowID(t);case Kg.ROW_SPLITS:return Xg.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(Kg[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Qg(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;Me.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Me.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return Me.util.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Kg.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case Kg.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(Kg[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Kg.FIRST_DIM_SIZE:return e[0];case Kg.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Kg.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(Kg[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=Qg(t,!1),r=Me.util.getArrayFromDType(this.valuesDType,Me.util.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=Me.util.sizeFromShape(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;(0,Me.tidy)((()=>{const t=(0,Me.reshape)(l,e),n=(0,Me.broadcastTo)(t,o);l=n.dataSync()}))}let u=0,d=0,p=0;for(let h=0;h<=c;++h){let e=h<c?t[h]:-1;if(e!==p){if(d<p){const e=r.subarray(u*i);Zg(s.subarray(d*i),e,(p-d)*i)}if(h>=c){const t=n.length;e=Math.floor(t/i)}if(e>p)if(1===this.defaultValue.length)s.subarray(p*i,e*i).fill(this.defaultValue[0]),p=e;else for(;e>p;){Zg(s.slice(p*i),l,i),++p}e<0?(u=h+1,d=p):(u=h,d=p,p=d+1)}else++p}}}function Zg(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function Qg(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function Jg(e,t,n,a,r,s,o,i,c,l){return new Xg(e,t,n,a,r,s,o,i,c,l).compute()}const $g={kernelName:Me.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,p=i.map((e=>n.data.get(e.dataId).values)),h=i.map((e=>e.shape)),[f,m]=Jg(l,r.shape,u,s.shape,s.dtype,d,o.shape,p,h,c);return n.makeTensorInfo(f,s.dtype,m)}};function ey(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return Me.util.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((t-e)/n)),s=Me.util.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let o=1;o<s.length;o++)s[o]=s[o-1]+n;return s}const ty={kernelName:Me.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=ey(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},ny=tp(Me.Reciprocal,(e=>1/e)),ay={kernelName:Me.Reciprocal,backendName:"cpu",kernelFunc:ny};const ry={kernelName:Me.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Qd(r,"resizeBilinear");const c=Me.util.computeStrides(r.shape),[l,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(Me.util.sizeFromShape([d,l,u,f])),y=[s&&l>1?p-1:p,s&&u>1?h-1:h],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<d;k++)for(let e=0;e<l;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(h-1,Math.ceil(t)),u=s+n*c[2],d=i+n*c[2],p=s+l*c[2],y=i+l*c[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[d+e],s=t+(m[p+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[v++]=o}}}return n.makeTensorInfo([d,l,u,f],"float32",g)}};const sy={kernelName:Me.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Qd([s,r],"resizeBilinearGrad");const i=Me.util.computeStrides(r.shape),[c,l,u,d]=r.shape,[,p,h]=s.shape,f=new Float32Array(c*l*u*d),m=[o&&p>1?l-1:l,o&&h>1?u-1:u],g=[o&&p>1?p-1:p,o&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(s.dataId).values;let x=0;for(let w=0;w<c;w++){const e=w*i[0];for(let t=0;t<p;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=e+a*i[1],o=e+r*i[1],c=n-a,p=1-c;for(let e=0;e<h;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,h=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=p*l,k=p*r,S=c*l,T=c*r;for(let e=0;e<d;e++){const t=v[x++];f[h+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*T}}}}return n.makeTensorInfo([c,u,l,d],"float32",f)}};const oy={kernelName:Me.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Qd(r,"resizeNearestNeighbor");const c=Me.util.computeStrides(r.shape),[l,u]=i,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*l*u*f),y=[s&&l>1?p-1:p,s&&u>1?h-1:h],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let k=0;k<d;k++){const e=k*c[0];for(let t=0;t<l;t++){const n=o?v*(t+.5):v*t;let a=Math.min(p-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=o?x*(e+.5):x*e;let n=Math.min(h-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([d,l,u,f],r.dtype,g)}};const iy={kernelName:Me.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Qd([s,r],"resizeNearestNeighborGrad");const i=Me.util.computeStrides(r.shape),c=Me.util.computeStrides(s.shape),[l,u,d,p]=r.shape,[,h,f]=s.shape,m=new Float32Array(l*u*d*p),g=n.data.get(s.dataId).values,y=[o&&h>1?u-1:u,o&&f>1?d-1:d],b=[o&&h>1?h-1:h,o&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,S=2*Math.ceil(w)+2,T=2*Math.ceil(k)+2;for(let N=0;N<l;N++){const e=N*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-S/2);for(let s=0;s<d;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-T/2);for(let n=0;n<p;n++){let i=0;for(let a=0;a<S;a++){const l=a+r;if(l<0||l>=h)continue;const p=e+l*c[1],m=l*v;if(t===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<T;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*c[2],r=t*x;s===Math.min(d-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const cy={kernelName:Me.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;Qd(r,"reverse");const o=r.shape.length,i=Me.util.parseAxisParam(s,r.shape);if(0===o)return sp({inputs:{x:r},backend:n});const c=new Me.TensorBuffer(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},ly={kernelName:Me.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=Me.util.getTypedArrayFromDType(r.dtype,Me.util.sizeFromShape(r.shape)),[u,d,p,h]=r.shape,[f,m]=Me.backend_util.getImageCenter(i,d,p),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let v=0;v<u;v++){const e=v*p*d*h;for(let t=0;t<d;t++){const n=t*(p*h);for(let a=0;a<p;a++){const r=a*h;for(let s=0;s<h;s++){const i=[u,t,a,s],c=i[2],v=i[1];let x=(c-f)*y-(v-m)*g,w=(c-f)*g+(v-m)*y;x=Math.round(x+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),x>=0&&x<p&&w>=0&&w<d){k=b[e+w*(p*h)+x*h+s]}l[e+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},uy=tp(Me.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),dy={kernelName:Me.Round,backendName:"cpu",kernelFunc:uy},py=ep((e=>1/Math.sqrt(e))),hy=np(Me.Rsqrt,py),fy={kernelName:Me.Rsqrt,backendName:"cpu",kernelFunc:hy};function my(e,t,n,a,r,s,o,i,c,l){const u=[a/r,r],d=e.values,p=t.values;if(0===a)return(0,Me.buffer)(n,t.dtype);const h=c instanceof Me.TensorBuffer?c:(0,Me.buffer)(u,t.dtype);"string"===typeof c||"number"===typeof c?h.values.fill(c):"boolean"===typeof c&&h.values.fill(+c);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=d[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?h.values[s*r+n]+=p[f*r+n]:h.values[s*r+n]=0===t.rank?p[0]:p[f*r+n]}return h}const gy={kernelName:Me.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=Me.backend_util.calculateShapes(s,r,o),p=my(n.bufferSync(r),n.bufferSync(s),o,d,l,c,i,u,0,!0);return n.makeTensorInfo(o,p.dtype,p.values)}};function yy(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function by(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const vy={kernelName:Me.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=Me.util.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?yy(n,t[e+c]):by(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const xy={kernelName:Me.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;Qd([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=(0,Me.upcastType)(r.dtype,s.dtype),d=Me.util.makeZerosTypedArray(Me.util.sizeFromShape(r.shape),u);let p=0;const h=0===o||o>1||1===r.shape.length?1:Me.util.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<h;e++)1===i[f]?d[p++]=c[f]:d[p++]=l[f];return n.makeTensorInfo(r.shape,u,d)}},wy=Me.backend_util.SELU_SCALEALPHA,ky=Me.backend_util.SELU_SCALE,Sy=tp(Me.Selu,(e=>e>=0?ky*e:wy*(Math.exp(e)-1))),Ty={kernelName:Me.Selu,backendName:"cpu",kernelFunc:Sy},Ny=tp(Me.Sign,(e=>e<0?-1:e>0?1:0)),Iy={kernelName:Me.Sign,backendName:"cpu",kernelFunc:Ny},Cy=tp(Me.Sin,(e=>Math.sin(e))),Ey={kernelName:Me.Sin,backendName:"cpu",kernelFunc:Cy},Ay=tp(Me.Sinh,(e=>Math.sinh(e))),Ry={kernelName:Me.Sinh,backendName:"cpu",kernelFunc:Ay},_y=Math.log(1.1920928955078125e-7)+2,Fy=tp(Me.Softplus,(e=>{const t=e>-_y,n=e<_y,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),Dy={kernelName:Me.Softplus,backendName:"cpu",kernelFunc:Fy};const Oy={kernelName:Me.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;Qd([r],"spaceToBatchND");const i=Me.util.sizeFromShape(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=Og.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=Me.backend_util.getReshaped(l.shape,s,i,!1),d=Me.backend_util.getPermuted(u.length,s.length,!1),p=Me.backend_util.getReshapedPermuted(l.shape,s,i,!1),h=Mp({inputs:{x:l},backend:n,attrs:{shape:u}}),f=Kp({inputs:{x:h},backend:n,attrs:{perm:d}}),m=Mp({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};function My(e,t,n,a,r,s,o){const i=t[0],c=s[0],l=new Array(c),u=new Array(i),d=t[1];if(0===c){if(0!==i)throw new Error(Me.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));return[Me.util.getArrayFromDType(n,0),[0,d],Me.util.getArrayFromDType(r,0),l,u]}let p=!0,h=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*d];if(t<0)throw new Error(Me.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=c)throw new Error(Me.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,c));++f[t],p=p&&t>=h,h=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,d],n,l,u]}{const t=f[c-1],s=Me.util.getArrayFromDType(n,t*d),p=Me.util.getArrayFromDType(r,t),h=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*d],r=h[t],o=(0===t?0:f[t-1])+r;h[t]++;for(let a=0;a<d;++a)s[o*d+a]=e[n*d+a];p[o]=a[n],u[n]=o}for(let e=0;e<c;++e){if(0===h[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;p[t]=o}}return[s,[t,d],p,l,u]}}const zy={kernelName:Me.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[d,p,h,f,m]=My(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(p,a.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function Ly(e,t,n,a,r){const s=Me.util.sizeFromShape(a),o=t[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==u)throw new Error(Me.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,m));u=m,c.push(1)}else{if(e<0)throw new Error(Me.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(m,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error(Me.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/l);if(l*e!==s)throw new Error(Me.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[u]=e}if(Me.util.sizeFromShape(c)!==s)throw new Error(Me.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const d=a.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const h=[];if(i>0){h[i-1]=1;for(let e=i-2;e>=0;--e)h[e]=h[e+1]*c[e+1]}const f=Me.util.getArrayFromDType(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/h[e]),t%=h[e]}return[f,[o,i],c]}const Py={kernelName:Me.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,d]=Ly(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function By(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0;if(u<0)throw new Error(Me.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=u;const p=d.reduce(((e,t)=>e*t),1),h=Me.util.getArrayFromDType(n,p);if(0===i)return u>0&&h.fill(o),[h,d];if(u<=0)throw new Error(Me.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<i){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(Me.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=u)throw new Error(Me.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,u));y>g&&h.fill(o,g*l,y*l);for(let n=f;n<m;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(Me.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],c[0]));for(let n=0;n<l;n++)h[y*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)h[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>i)break}return g<u&&h.fill(o,g*l,u*l),[h,d]}const Wy={kernelName:Me.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=By(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const Vy={kernelName:Me.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=By(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const Uy={kernelName:Me.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Me.backend_util.calculateShapes(s,r,i),h=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=my(f,n.bufferSync(s),i,p,u,l,c,d,Boolean(n.data.get(o.dataId).values[0]),h);break;case"float32":m=my(f,n.bufferSync(s),i,p,u,l,c,d,n.data.get(o.dataId).values[0],h);break;case"int32":m=my(f,n.bufferSync(s),i,p,u,l,c,d,n.data.get(o.dataId).values[0],h);break;case"string":m=my(f,n.bufferSync(s),i,p,u,l,c,d,Me.util.decodeString(n.data.get(o.dataId).values[0]),h);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const Gy={kernelName:Me.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Me.util.parseAxisParam(o,r.shape)[0],c=Me.backend_util.prepareSplitSize(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=xh({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},jy=ep((e=>Math.sqrt(e))),Hy=tp(Me.Sqrt,(e=>Math.sqrt(e))),qy={kernelName:Me.Sqrt,backendName:"cpu",kernelFunc:Hy},Yy={kernelName:Me.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;Qd(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Ky=lp(((e,t)=>{const n=e-t;return n*n})),Xy=Ap(Me.SquaredDifference,Ky),Zy={kernelName:Me.SquaredDifference,backendName:"cpu",kernelFunc:Xy},Qy=ep(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),Jy=np(Me.StaticRegexReplace,Qy),$y={kernelName:Me.StaticRegexReplace,backendName:"cpu",kernelFunc:Jy},eb=tp(Me.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),tb={kernelName:Me.Step,backendName:"cpu",kernelFunc:eb};function nb(e,t,n,a){const r=(0,Me.buffer)(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const ab={kernelName:Me.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=a;Qd(r,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Me.slice_util.sliceInfo(r.shape,s,o,i,c,l,u,d,p);let w;if(m)w=Mp({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){Me.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Me.slice_util.computeOutShape(b,v,x),t=xh({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=Mp({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=nb(h,n.bufferSync(r),x,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class rb{constructor(e,t,n,a,r,s){this.separator=Me.util.encodeString(e),this.nGramWidths=t,this.leftPad=Me.util.encodeString(n),this.rightPad=Me.util.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),d=t+(c>0?0:o-i);let p=0;p+=c*this.leftPad.length;for(let t=0;t<u;++t)p+=e[d+t].length;p+=l*this.rightPad.length;p+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(p);const h=n[a+o];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=Me.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function sb(e,t,n,a,r,s,o,i){return new rb(n,a,r,s,o,i).compute(e,t)}const ob={kernelName:Me.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,p=n.data.get(u.dataId).values,h=n.data.get(d.dataId).values,[f,m]=sb(p,h,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function ib(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function cb(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let p=0;p<a;++p){const a=r.length;ib(e[p],t,n,r);const c=r.length-a;i[p]=c,s+=c,o=Math.max(o,c)}const c=Me.util.getArrayFromDType("int32",2*s),l=new Array(s),u=[a,o];let d=0;for(let p=0;p<a;++p)for(let e=0;e<i[p];++e)c[2*d]=p,c[2*d+1]=e,l[d]=r[d],++d;return[c,l,u]}const lb={kernelName:Me.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=cb(i,c,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function ub(e,t){const n=Me.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Me.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const db={kernelName:Me.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=ub(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},pb=tp(Me.Tan,(e=>Math.tan(e))),hb={kernelName:Me.Tan,backendName:"cpu",kernelFunc:pb},fb=tp(Me.Tanh,(e=>Math.tanh(e))),mb={kernelName:Me.Tanh,backendName:"cpu",kernelFunc:fb};const gb={kernelName:Me.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=Me.backend_util.calculateShapes(s,r,a.shape),d=n.bufferSync(r),p=n.bufferSync(s),h=n.bufferSync(a),f=my(d,p,a.shape,u,c,i,o,l,h,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function yb(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,Me.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const bb={kernelName:Me.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;Qd(r,"tile");const o=yb(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},vb=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function xb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);xb(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(Me.util.swap(e,n,t),vb(e[a],r)>0&&Me.util.swap(e,n,a);s<o;){for(Me.util.swap(e,s,o),s++,o--;vb(e[s],r)<0;)s+=1;for(;vb(e[o],r)>0;)o-=1}0===vb(e[n],r)?Me.util.swap(e,n,o):(o+=1,Me.util.swap(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function wb(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],c=Me.util.getTypedArrayFromDType(n,o*a),l=Me.util.getTypedArrayFromDType("int32",o*a);for(let d=0;d<o;d++){const t=d*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(xb(s,a),s=s.slice(0,a)),r&&s.sort(vb);const o=d*a,u=c.subarray(o,o+a),p=l.subarray(o,o+a);for(let e=0;e<a;e++)u[e]=s[e].value,p[e]=s[e].index}const u=t.slice();return u[u.length-1]=a,[(0,Me.buffer)(u,n,c),(0,Me.buffer)(u,"int32",l)]}const kb={kernelName:Me.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;Qd(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=wb(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Sb={kernelName:Me.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,d,p,h]=r.shape,[f,m]=null!=l?l:[d,p],g=[u,f,m,h],y=Me.util.computeStrides(r.shape),b=y[0],v=y[1],x=y[2],w=Me.util.computeStrides(g),k=w[0],S=w[1],T=w[2],N=Me.util.getTypedArrayFromDType(r.dtype,Me.util.sizeFromShape(g));N.fill(c);const I=a.data.get(r.dataId).values,C=a.data.get(s.dataId).values;for(let E=0;E<u;++E){const e=1===s.shape[0]?C:C.subarray(8*E,8*E+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<h;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[0]*n+e[1]*t+e[2])/s,u=(e[3]*n+e[4]*t+e[5])/s,h=Tb(l,p,i),f=Tb(u,d,i);switch(o){case"nearest":r=Ib(I,d,p,b,v,x,E,f,h,a,c);break;case"bilinear":r=Cb(I,d,p,b,v,x,E,f,h,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}N[E*k+t*S+n*T+a]=r}return a.makeTensorInfo(g,r.dtype,N)}return{dataId:a.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function Tb(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Me.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Me.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Me.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Nb(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function Ib(e,t,n,a,r,s,o,i,c,l,u){return Nb(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function Cb(e,t,n,a,r,s,o,i,c,l,u){const d=Math.floor(i),p=Math.floor(c),h=d+1,f=p+1;return(h-i)*((f-c)*Nb(e,t,n,a,r,s,o,d,p,l,u)+(c-p)*Nb(e,t,n,a,r,s,o,d,f,l,u))+(i-d)*((f-c)*Nb(e,t,n,a,r,s,o,h,p,l,u)+(c-p)*Nb(e,t,n,a,r,s,o,h,f,l,u))}function Eb(e,t,n,a){const r=Me.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),c=new Me.TensorBuffer(s,a,e),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(u)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,l.push(f)}}const d=s.slice();d[1]=o.size;const p=new Me.TensorBuffer(d,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)p.set(c.get(n,e,a),n,t,a)}));const h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:i}}const Ab={kernelName:Me.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Qd(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=Eb(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const Rb={kernelName:Me.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let h=0;h<o;h++)h!==s&&(c[l++]=r.shape[h]);const u=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const p=new Array(i);for(let h=0;h<p.length;h++){u[s]=h;const e=xh({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});p[h]=Mp({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return p}};const _b={kernelName:Me.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;Qd(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let p=0;p<l;++p){const e=Mf({inputs:{input:u},backend:n,attrs:{dim:p+1}});u=e,c.push(e)}for(let p=0;p<o;++p){const e=Me.util.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=kf({inputs:{a:t,b:u},backend:n}),s=Cp({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=mf({inputs:{a:s,b:r},backend:n}),l=yf({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(s),c.push(o),c.push(l)}const d=Fg({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Fb=[Bp,Vp,Gp,Hp,Op,qp,Zp,Qp,Jp,$p,th,ah,sh,ch,uh,fh,mh,gh,yh,Pp,bh,kh,Nh,Eh,Ah,Ep,Fh,Oh,kp,Mh,Wh,Uh,Gh,jh,Hh,qh,Yh,Xh,Qh,Jh,$h,ef,tf,nf,rf,sf,of,cf,lf,uf,df,pf,vf,rp,xf,Sf,_f,Of,zf,Bf,Zf,Jf,$f,nm,sm,om,im,lm,dm,fm,ym,op,bm,Ph,xm,km,Tm,cp,Cm,Rm,Fm,Mm,Lm,Wm,Um,Hm,qm,Ym,Zm,$m,eg,tg,ng,ag,rg,sg,og,lg,ug,hg,gg,gf,bg,xg,kg,Tg,Cg,Eg,_g,Dg,Og,Lg,pp,Bg,jg,Yg,$g,ty,Np,Uf,ay,fp,gp,zp,ry,sy,oy,iy,cy,ly,dy,fy,gy,vy,xy,Ty,vp,Iy,Ey,Ry,wh,mg,Dy,Oy,zy,Py,Wy,Vy,Uy,Gy,qy,Yy,Zy,$y,tb,ab,ob,lb,db,qf,bf,hb,mb,gb,bb,kb,Sb,Xp,Ab,Rb,_b,Rg];for(const n of Fb)(0,Me.registerKernel)(n);const Db={},Ob={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Mb(e,t){if(!(e in Db)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,Me.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Db[e]}),!1),(0,Me.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ob.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",Ob)||n.getContext("experimental-webgl",Ob);return n.getContext("webgl2",Ob)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Db[e]=n}const n=Db[e];return null==n||n.isContextLost()?(delete Db[e],Mb(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Db[e])}var zb,Lb,Pb;function Bb(e,t){return[t,e]}function Wb(e){const t=Me.util.sizeFromShape(e),n=Math.ceil(t/4);return Me.util.sizeToSquarishShape(n)}function Vb(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Ub(e,t){const n=e;let a,r,s,o,i,c,l,u,d,p;return 2===(0,Me.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,d=n.HALF_FLOAT,p=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function Gb(e,t){const n=t();return(0,Me.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(zb||(zb={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Lb||(Lb={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Pb||(Pb={}));function jb(e){return!!((0,Me.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Hb(e,t){return ev(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const qb=/ERROR: [0-9]+:([0-9]+):/g;function Yb(e,t){const n=qb.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>Me.util.rightPad((t+1).toString(),s)+e));let i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(Me.util.rightPad(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function Kb(e,t){if(Gb(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Xb(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(Gb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),Gb(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),Gb(e,(()=>e.enableVertexAttribArray(i))),!0)}function Zb(e,t,n,a){Gb(e,(()=>function(e,t,n){tv(e,n),Gb(e,(()=>e.activeTexture(e.TEXTURE0+n))),Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),Gb(e,(()=>e.uniform1i(n,a)))}function Qb(e,t,n){Gb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Gb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Jb(e,t){Gb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Gb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function $b(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function ev(e,t,n){const a=Gb(e,(()=>t()));if(null==a)throw new Error(n);return a}function tv(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function nv(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Me.util.sizeFromShape(e.slice(0,e.length-t))}function av(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function rv(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[nv(e),...av(e)]),t}function sv(e){return e%2===0}function ov(e,t){if(e=e.slice(-2),t=t.slice(-2),Me.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(sv(n)&&sv(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&sv(e[0])&&sv(t[0])}let iv,cv;function lv(e,t){return null!=e.getExtension(t)}function uv(e){try{if(null!=Mb(e))return!0}catch(NE){return console.log("Error when getting WebGL context: ",NE),!1}return!1}function dv(e){if(0===e)return!1;const t=Mb(e);if(1!==e){if(lv(t,"EXT_color_buffer_float"))return pv(t);const e="EXT_color_buffer_half_float";if(lv(t,e)){const n=t.getExtension(e);return function(e,t){const n=Ub(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!lv(t,"OES_texture_float"))return!1;if(!lv(t,"WEBGL_color_buffer_float"))return!1;return pv(t)}function pv(e){const t=Ub(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function hv(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Me.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const fv=(0,Me.env)();function mv(){let e,t,n,a,r,s,o,i,c,l;return 2===(0,Me.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=(0,Me.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function gv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Me.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function yv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=Me.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function bv(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=function(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}function vv(e){const t=Me.util.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}fv.registerFlag("HAS_WEBGL",(()=>fv.getNumber("WEBGL_VERSION")>0)),fv.registerFlag("WEBGL_VERSION",(()=>uv(2)?2:uv(1)?1:0)),fv.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),fv.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===fv.get("WEBGL_VERSION"))),fv.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),fv.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),fv.registerFlag("WEBGL_PACK",(()=>fv.getBool("HAS_WEBGL"))),fv.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_CLIP",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_REDUCE",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_LAZILY_UNPACK",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_CONV_IM2COL",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>fv.getBool("WEBGL_PACK"))),fv.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==iv){const t=Mb(e);iv=t.getParameter(t.MAX_TEXTURE_SIZE)}return iv}(fv.getNumber("WEBGL_VERSION")))),fv.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==cv){const t=Mb(e);cv=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,cv)}(fv.getNumber("WEBGL_VERSION")))),fv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=fv.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Mb(e);return t=lv(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:lv(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),fv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>fv.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Me.device_util.isMobile())),fv.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Mb(e);if(1===e){if(!lv(t,"OES_texture_float"))return!1}else if(!lv(t,"EXT_color_buffer_float"))return!1;return pv(t)}(fv.getNumber("WEBGL_VERSION")))),fv.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!fv.getBool("WEBGL_FORCE_F16_TEXTURES")&&fv.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),fv.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>dv(fv.getNumber("WEBGL_VERSION")))),fv.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=fv.getNumber("WEBGL_VERSION"))&&null!=Mb(e).fenceSync;var e})),fv.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>fv.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),fv.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),fv.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Me.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),fv.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),fv.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),fv.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),fv.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),fv.registerFlag("WEBGL_EXP_CONV",(()=>!1)),fv.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>fv.getBool("IS_TEST"))),fv.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),fv.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),fv.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),fv.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const xv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:wv}=Me.backend_util;function kv(e,t,n){const a=[];if(e.forEach((e=>{const t=Me.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=Fv(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?Tv(e,a):Sv(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=wv(e.shapeInfo.logicalShape,t.logicalShape),c=_v(o),l=o-s;let u;const d=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(d[e+l]," = 0;"))).join("\n");let p="";p=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(d[t+l]))).join(", ");let h="return outputValue;";const f=1===Me.util.sizeFromShape(e.shapeInfo.logicalShape),m=Me.util.sizeFromShape(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)h=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(p,");\n      ").concat(h,"\n    }\n  ")}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&Me.util.arraysEqual(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=_v(c),u=wv(e.shapeInfo.logicalShape,t.logicalShape),d=c-i;let p;const h=["x","y","z","w","u","v"];p=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(h[e+d]," = 0;"))).join("\n");let f="";f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(h[t+d]))).join(", ");return"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=mv(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,d=function(e){const t="".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Nv,"\n    ").concat(Iv,"\n    ").concat(Cv,"\n  ");return t}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Me.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(Me.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=yv(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=gv(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=yv(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=gv(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=gv(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=gv(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(d+=Ev);return[d,c,u,r,l,s,n.userCode].join("\n")}function Sv(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=Av(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(Rv(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=Av(n);if(1===o)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(1===s)return t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(t)return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&Me.util.arraysEqual(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=Me.util.squeezeShape(n),c=o;if(c.length<n.length){const n=Dv(e,c),a=["row","col"];return"\n      ".concat(Sv(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Ov(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Rv(e),"\n      }\n    ");const l=s[0],u=s[1],d=Av(a);if(1===u)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(1===l)return t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");if(t)return"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(d,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=Me.util.squeezeShape(n),l=i;if(l.length<n.length){const n=Dv(e,l),a=["row","col","depth"];return"\n        ".concat(Sv(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Ov(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(Rv(e),"\n      }\n    ");const u=e.shapeInfo.texShape,d=u[0],p=u[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(p,".0, ").concat(d,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(p===o&&null==h)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(p,".0, ").concat(d,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=Av(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    ");return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(p,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=Me.util.squeezeShape(n);if(c.length<n.length){const n=Dv(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(Sv(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Ov(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(Rv(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(h===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(h===s&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=Av(a);if(t)return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:c,keptDims:l}=Me.util.squeezeShape(t);if(c.length<t.length){const t=Dv(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Sv(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(Ov(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(Rv(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(h===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(h,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=Av(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(h,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=Me.util.squeezeShape(t);if(r.length<t.length){const t=Dv(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Sv(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(Ov(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(Rv(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=Av(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function Tv(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=mv();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=mv();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],c=mv();if(null!=s&&Me.util.arraysEqual(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=Dv(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(Tv(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Ov(o,a),");\n        }\n      ")}const i=mv();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=mv();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(s[o-1]/2);let p=d*Math.ceil(s[o-2]/2),h="int b, int row, int col",f="b * ".concat(p," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)h="int b".concat(m,", ")+h,p*=s[o-m-1],f="b".concat(m," * ").concat(p," + ")+f;return"\n    vec4 ".concat(a,"(").concat(h,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const Nv="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Iv="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Cv="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ev="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Av(e){return"offset".concat(e)}function Rv(e){const t=e.name,n=Me.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function _v(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function Fv(e,t,n){const{newShape:a,keptDims:r}=Me.util.squeezeShape(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,c=!e&&s>1&&!Me.util.arraysEqual(t,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function Dv(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Ov(e,t){return t.map((t=>e[t])).join(", ")}function Mv(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=kv(r,o,t),c=function(e,t){const n=ev(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Gb(e,(()=>e.shaderSource(n,t))),Gb(e,(()=>e.compileShader(n))),(0,Me.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Yb(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return(0,Me.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},zv(e,t,l)))}function zv(e,t,n){const a=[],r=[];let s,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===(0,Me.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const d of t.variableNames){const r={name:d,uniform:e.getUniformLocation(n,d,u),offset:e.getUniformLocation(n,"offset".concat(d),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(d,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(d,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const d of t.customUniforms)r.push(e.getUniformLocation(n,d.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function Lv(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!Me.util.arraysEqual(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!Me.util.arraysEqual(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function Pv(e){return(0,Me.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Bv{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=zb.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=mv();this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?yv(["r","c","d"],e):gv(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Wv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=zb.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=mv();this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?yv(["r","c","d"],e):gv(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Vv{constructor(e){this.variableNames=["A"],this.outTexUsage=Lb.DOWNLOAD;const t=mv();this.outputShape=e,this.userCode="\n      ".concat(xv,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class Uv{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Lb.DOWNLOAD;const t=mv();this.outputShape=e,this.userCode="\n      ".concat(xv,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const Gv={R:0,G:1,B:2,A:3};class jv{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=mv();this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(Gv[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class Hv{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=mv();this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function qv(e){const t=mv();return function(e,t){const n=ev(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Gb(e,(()=>e.shaderSource(n,t))),Gb(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function Yv(e){return function(e,t){const n=ev(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Gb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Gb(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Kv(e){return function(e,t){const n=ev(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Gb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Gb(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Xv(e,t,n,a,r,s){!function(e,t){const n=(0,Me.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return ev(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return Gb(e,(()=>e.bindTexture(i,o))),Gb(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Gb(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Gb(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),Gb(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,Me.env)().getNumber("WEBGL_VERSION")?Gb(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):Gb(e,(()=>e.texStorage2D(i,1,a,t,n))),Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function Zv(e){return e.internalFormatFloat}function Qv(e){return e.internalFormatHalfFloat}function Jv(e){return e.downloadTextureFormat}function $v(e){return e.internalFormatPackedFloat}function ex(e){return e.internalFormatPackedHalfFloat}function tx(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=Vb(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class nx{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,Me.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Db[e]=t}(t,e)):this.gl=Mb(t),e=this.gl,2===(0,Me.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Gb(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>Gb(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>Gb(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>Gb(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Gb(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>Gb(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>Gb(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>Gb(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,Me.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Hb(this.gl,e),lv(this.gl,t))this.textureHalfFloatExtension=Hb(this.gl,t);else if((0,Me.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),lv(this.gl,a))this.colorBufferHalfFloatExtension=Hb(this.gl,a);else if((0,Me.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",lv(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!lv(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=Yv(this.gl),this.indexBuffer=Kv(this.gl),this.framebuffer=function(e){return ev(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Ub(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,Me.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Gb(e,(()=>e.finish())),Gb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Gb(e,(()=>e.deleteFramebuffer(this.framebuffer))),Gb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Gb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Gb(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Bb(t,n);return Xv(e,r,s,Zv(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Bb(t,n);return Xv(e,r,s,Qv(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Bb(t,n);return Xv(e,r,s,Jv(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,Me.env)().getNumber("WEBGL_VERSION")?Gb(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Gb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,Me.env)().getNumber("WEBGL_VERSION")?Gb(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Gb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,c;Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===(0,Me.env)().getNumber("WEBGL_VERSION")?Gb(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):Gb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,o))),Gb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Vb(t,n);return Xv(e,r,s,ex(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Vb(t,n);return Xv(e,r,s,$v(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Jb(this.gl,this.framebuffer),this.outputTexture=null),Gb(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=Bb(t,n),o=new Uint8Array(t*n*4);return Gb(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return tx(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();Gb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return Gb(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),Gb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Gb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,Me.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return Gb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=qv(t));const n=function(e){return ev(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);Gb(t,(()=>t.attachShader(n,this.vertexShader))),Gb(t,(()=>t.attachShader(n,e))),function(e,t){if(Gb(e,(()=>e.linkProgram(t))),!(0,Me.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Kb(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Gb(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){Gb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Xb(e,t,"clipSpacePos",n,3,20,0)&&Xb(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Gb(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Kb(this.gl,this.program),Gb(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return ev(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Gb(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Zb(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=Vb(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Kb(this.gl,this.program),$b(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Gb(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Gb(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Hb(this.gl,2===(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Me.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,Me.env)().platform&&(n=(0,Me.env)().platform.setTimeoutCustom.bind((0,Me.env)().platform)),Me.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Qb(this.gl,e,this.framebuffer),this.debug&&$b(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Qb(this.gl,this.outputTexture,this.framebuffer),this.debug&&$b(this.gl)):Jb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;Qb(a,e,this.framebuffer),this.debug&&$b(a),this.outputTexture=e,Gb(a,(()=>a.viewport(0,0,t,n))),Gb(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),Gb(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:ax,bincountImpl:rx,bincountReduceImpl:sx,bitwiseAndImpl:ox,castImpl:ix,ceilImpl:cx,concatImpl:lx,equalImpl:ux,expImpl:dx,expm1Impl:px,floorImpl:hx,gatherNdImpl:fx,gatherV2Impl:mx,greaterImpl:gx,greaterEqualImpl:yx,lessImpl:bx,lessEqualImpl:vx,linSpaceImpl:xx,logImpl:wx,maxImpl:kx,maximumImpl:Sx,minimumImpl:Tx,multiplyImpl:Nx,negImpl:Ix,notEqualImpl:Cx,prodImpl:Ex,raggedGatherImpl:Ax,raggedRangeImpl:Rx,raggedTensorToTensorImpl:_x,rangeImpl:Fx,rsqrtImpl:Dx,scatterImpl:Ox,sigmoidImpl:Mx,simpleAbsImpl:zx,sliceImpl:Lx,sparseFillEmptyRowsImpl:Px,sparseReshapeImpl:Bx,sparseSegmentReductionImpl:Wx,sqrtImpl:Vx,staticRegexReplaceImpl:Ux,stridedSliceImpl:Gx,stringNGramsImpl:jx,stringSplitImpl:Hx,stringToHashBucketFastImpl:qx,subImpl:Yx,tileImpl:Kx,topKImpl:Xx,transposeImpl:Zx,uniqueImpl:Qx}=e;function Jx(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function $x(e,t){return 1===t?[e]:Jx(e,t)}class ew{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Pv(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=$x("rc",this.rank),t=_v(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class tw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?bv(["r","c","d"],"inputShape"):gv(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":vv(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class nw{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=rw(t,n),r=sw(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=aw(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===Pb.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Pb.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Pb.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Pb.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Pb.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=rw(n,a),s=sw(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=aw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=(0,Me.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function aw(e,t,n,a,r){const s=function(e,t){switch(e){case Pb.PACKED_2X2_FLOAT32:return $v(t);case Pb.PACKED_2X2_FLOAT16:return ex(t);case Pb.UNPACKED_FLOAT32:return Zv(t);case Pb.UNPACKED_FLOAT16:return Qv(t);case Pb.PACKED_4X1_UNSIGNED_BYTE:return Jv(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=Vb(e[0],e[1]);o=t*n}else{const[t,n]=Bb(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function rw(e,t){if(e===Lb.UPLOAD)return Pb.PACKED_2X2_FLOAT32;if(e===Lb.RENDER||null==e)return function(e){return(0,Me.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Pb.PACKED_2X2_FLOAT32:Pb.UNPACKED_FLOAT32:e?Pb.PACKED_2X2_FLOAT16:Pb.UNPACKED_FLOAT16}(t);if(e===Lb.DOWNLOAD||e===Lb.PIXELS)return Pb.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function sw(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class ow{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const iw="if (isnan(x)) return x;",cw="return x;",lw="return abs(x);";const uw="return (x >= 0.0) ? x : (exp(x) - 1.0);",dw=iw+"\n  return (x < 0.0) ? 0.0 : x;\n",pw=iw+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hw="return x;",fw="return 1.0 / (1.0 + exp(-1.0 * x));",mw="return x;",gw="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",yw="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bw="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",vw="return 1.0 / (1.0 + exp(-1.0 * x));";class xw{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class ww{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length);const t=e.length,n=$x("rc",t),a=_v(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const kw=Me.kernel_impls.whereImpl,Sw={};const Tw=(0,Me.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Nw extends Me.KernelBackend{nextDataId(){return Nw.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,Me.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof nx)t=e;else{const n=Mb((0,Me.env)().getNumber("WEBGL_VERSION"),e);t=new nx(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Mb((0,Me.env)().getNumber("WEBGL_VERSION"));t=new nx(e),this.binaryCache=((n=(0,Me.env)().getNumber("WEBGL_VERSION"))in Sw||(Sw[n]={}),Sw[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new nw(this.gpgpu),this.numMBBeforeWarning=null==(0,Me.env)().global.screen?1024:(0,Me.env)().global.screen.height*(0,Me.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Me.DataStorage(this,(0,Me.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=rv(t),l=new jv(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if(((0,Me.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,Me.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:Lb.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,Me.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:Lb.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new xw(o,hw):new ow(o,hw);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=Me.util.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=Me.backend_util.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Me.util.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new xw(a,hw):new ow(a,hw);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,Me.env)().getBool("DEBUG")&&!(0,Me.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,Me.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&(0,Me.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...Wb(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];l=Me.backend_util.mergeRealAndImagArrays(t,n)}else if(null==u)l=this.getValuesFromTexture(e);else{const e=Me.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;Gb(e,(()=>e.deleteBuffer(u)))}const d=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,Me.engine)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new xw(r,hw):new ow(r,hw);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=(0,Me.engine)().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:u},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>Me.util.decodeString(e)));return(0,Me.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,Me.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!jb(n)){if((0,Me.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=Me.util.sizeFromShape(t);if((0,Me.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...Wb(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=(0,Me.env)().getBool("WEBGL_PACK")&&!0===a,o=s?rv(t):t,i=s?new Uv(o):new Vv(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Me.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=Me.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=Me.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Me.util.now(),endMs:null}}endTimer(e){return(0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Me.util.now(),e)}async getQueryTime(e){if((0,Me.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Tw;return(0,Me.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Me.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Me.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return kw(e.shape,t)}packedUnaryOp(e,t,n){const a=new xw(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,Me.engine)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=zx(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,Me.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,lw,e.dtype);const t=new ow(e.shape,lw),n=this.compileAndRun(t,[e]);return(0,Me.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Me.util.isString(n[0])){const r=n.map((e=>Me.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,Me.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new ww(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new ew(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[nv(e.shape),...av(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[nv(t),...av(t)],s=new tw(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){const e=Me.util.sizeFromShape(r),n=t[0]*t[1]*4;Me.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=rv(r);let i;i=a?new Wv(o):new Bv(o);const c=[null!=t?t:Wb(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===zb.DENSE){const t=null!=s?s:Wb(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===Me.util.sizeFromShape(o.shape))return i.values=Me.util.getTypedArrayFromDType(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Me.util.sizeFromShape(t.shape)<=(0,Me.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!ov(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},d=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=Fv(e.packedInputs,t.shape,s);let l="",u="",d="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=Me.util.computeStrides(i);d="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const p=t.shape.length,h=2===i.length&&Me.util.arraysEqual(t.shape,s),f=1===Me.util.sizeFromShape(t.shape),m=Me.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&Me.util.arraysEqual(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(p,"_").concat(g,"_").concat(o?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(h,"_").concat(l,"_").concat(u,"_").concat(d,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat((0,Me.env)().getNumber("WEBGL_VERSION")),s}(e,l,u),p=this.getAndSaveBinary(d,(()=>Mv(this.gpgpu,e,l,u))),h=null!=this.activeTimers;let f;h&&(f=this.startTimer()),(0,Me.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(Lv(t.inShapeInfos,n),Lv([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,Me.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=Fv(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(Me.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=Me.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],s=r[c];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,p,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,Me.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Me.util.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,Me.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,Me.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,Me.tidy)((()=>{if(!(0,Me.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,Me.env)().getBool("DEBUG");(0,Me.env)().set("DEBUG",!1);const t=this.abs((0,Me.scalar)(1e-8)).dataSync()[0];if((0,Me.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=Me.util.now());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,Me.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,Me.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,Me.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Me.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=Me.util.squeezeShape(e);e=t.newShape}let r=Me.util.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=nv(e);let n=2,a=2;e.length&&([n,a]=av(e)),r=t*(n/2)*(a/2),s=Me.util.sizeToSquarishShape(r).map((e=>2*e))}else s=Me.util.sizeToSquarishShape(r);return s}(n,i),t.texShape=u),null!=r){const e=rv(n);let s,o=u[1],d=u[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&p||([o,d]=Vb(u[0],u[1])),s=i?new Hv(e,p):new jv(e,p);const h=p?[d,o]:u,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);m.usage=p?Lb.PIXELS:Lb.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,r);const g=[[d,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,(0,Me.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=Me.util.now()-l)}else{const e=this.acquireTexture(u,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*Me.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,Me.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Yb(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=zv(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=(0,Me.engine)().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,s,o);return(0,Me.engine)().makeTensorFromDataId(c,t,n,i)}}Nw.nextDataId=0;Me.device_util.isBrowser()&&(0,Me.registerBackend)("webgl",(()=>new Nw),2);const Iw="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Cw{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Me.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Pv(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Ew="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Aw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Me.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Pv(r);let s="";if(a)if(0===r||1===Me.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=_v(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=$x("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Rw(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const _w={kernelName:Me.Identity,backendName:"webgl",kernelFunc:Rw};function Fw(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=Rw({inputs:{x:a},backend:n}),c=Rw({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const Dw={kernelName:Me.Complex,backendName:"webgl",kernelFunc:Fw},Ow="return (a < 0.) ? b * a : a;",Mw="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const zw={kernelName:Me.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",Me.util.createScalarValue(s,"float32")),i=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Aw(Mw,r.shape,o.shape):new Cw(Ow,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},Lw="return (a < 0.) ? b * a : a;",Pw="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Bw={kernelName:Me.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Aw(Pw,a.shape,r.shape):new Cw(Lw,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}},Ww="if (isnan(x)) return x;";function Vw(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=(0,Me.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new xw(i.shape,n):new ow(i.shape,t),c.runWebGLProgram(u,[i],l)}}function Uw(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,d=c;if(r&&"complex64"===l.dtype){const e=d.texData.get(l.dataId),n=d.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new Cw(t,l.shape,u.shape);return d.runWebGLProgram(o,[r,s],(0,Me.upcastType)(n.dtype,a.dtype))})),s=Fw({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),s}const p=o||(0,Me.upcastType)(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||d.shouldExecuteOnCPU([l,u]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(u.dataId).values,n="string"===l.dtype?Me.backend_util.fromUint8ToStringArray(e):e,a="string"===l.dtype?Me.backend_util.fromUint8ToStringArray(t):t,[r,o]=s(l.shape,u.shape,n,a,p),i=d.makeTensorInfo(o,p);return d.texData.get(i.dataId).values=r,i}let h;return h=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Aw(n,l.shape,u.shape,a):new Cw(t,l.shape,u.shape),d.runWebGLProgram(h,[l,u],p)}}function Gw(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?mw:cw;if("relu"===e)return t?yw:dw;if("elu"===e)return t?gw:uw;if("relu6"===e)return t?bw:pw;if("prelu"===e)return t?Pw:Lw;if("leakyrelu"===e)return t?Mw:Ow;if("sigmoid"===e)return t?vw:fw;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class jw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Pv(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(p,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(h[0]," * ").concat(f[0],");\n          result += (").concat(h[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const Hw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class qw{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Me.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const Yw="return a * b;";function Kw(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=Me.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new qw(Hw.REAL,a.shape,r.shape),o=new qw(Hw.IMAG,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=Fw({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=Nx(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Aw(Yw,a.shape,r.shape):new Cw(Yw,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const Xw={kernelName:Me.Multiply,backendName:"webgl",kernelFunc:Kw};function Zw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=Me.util.sizeFromShape(r.shape),c=Me.util.inferFromImplicitShape(s,i),l=Me.util.sizeFromShape(c);Me.util.assert(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||ov(r.shape,c)||null!==u.texture&&ov(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[nv(e.shape),...av(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[nv(t),...av(t)],o=new tw(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,o)}const Qw={kernelName:Me.Reshape,backendName:"webgl",kernelFunc:Zw};class Jw{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(Me.util.isInt(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class $w{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";r%n>0&&(h="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(h,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(p," values = ").concat(p,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function ek(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=Me.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,d;u="mean"===n?0===o?new Jw({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new Jw({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new $w({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=a.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}class tk{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=_v(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class nk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=_v(this.rank),r=Jx("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function ak(e,t,n){const a=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nk(e.shape,t):new tk(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function rk(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=Me.util.parseAxisParam(r,e.shape);let i=o;const c=Me.backend_util.getAxesPermutation(i,s),l=null!=c;let u=e;l&&(u=ak(e,c,a),i=Me.backend_util.getInnerMostAxes(i.length,s)),Me.backend_util.assertAxesAreInnerMostDims("sum",i,s);const[d,p]=Me.backend_util.computeOutAndReduceShapes(u.shape,i);let h=d;n&&(h=Me.backend_util.expandShapeToKeepDim(d,o));const f=Me.util.sizeFromShape(p),m=Zw({inputs:{x:u},attrs:{shape:[Me.util.sizeFromShape(e.shape)/f,f]},backend:a}),g=ek(m,(0,Me.sumOutType)(e.dtype),"sum",a),y=Zw({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const sk={kernelName:Me.Sum,backendName:"webgl",kernelFunc:rk};function ok(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=Zx(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=ak(r,s,o);return l}const ik={kernelName:Me.Transpose,backendName:"webgl",kernelFunc:ok},ck=1e3;function lk(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,d=n.shape.length,p=a?t.shape[u-2]:t.shape[u-1],h=r?n.shape[d-1]:n.shape[d-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[d-2]:n.shape[d-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=Me.util.sizeFromShape(g),v=Me.util.sizeFromShape(y),x=Me.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);Me.util.assert(p===h,(()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(h,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,p,f]:[b,f,p],k=r?[v,m,h]:[v,h,m],S=Zw({inputs:{x:t},backend:s,attrs:{shape:w}}),T=Zw({inputs:{x:n},backend:s,attrs:{shape:k}}),N=[S,T],I=Math.max(b,v),C=a?S.shape[1]:S.shape[2],E=null!=o,A=null!=i,R="leakyrelu"===l,_=null!=l?Gw(l,!0):null;let F;if((1===f||1===m)&&C>ck&&!1===(E||A||R||null!=_)){let e=S,t=T;a&&(e=ok({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=ok({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const n=1===m;let o=e;1!==m&&(o=Zw({inputs:{x:e},backend:s,attrs:{shape:[I,C,1]}}),N.push(o));const i=1===m?2:1;let c=t;n&&(c=Zw({inputs:{x:t},backend:s,attrs:{shape:[I,1,C]}}),N.push(c));const l=Kw({inputs:{a:o,b:c},backend:s});F=rk({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),N.push(l)}else{const e=(0,Me.upcastType)(t.dtype,n.dtype),l=new jw(w,k,[I,f,m],a,r,E,_,A,R),u=[S,T];if(null!=o&&u.push(o),A&&u.push(i),R){const e=s.makeTensorInfo([],"float32",Me.util.createScalarValue(c,"float32"));u.push(e),N.push(e)}F=s.runWebGLProgram(l,u,e)}const D=Zw({inputs:{x:F},backend:s,attrs:{shape:x}});N.push(F);for(const O of N)s.disposeIntermediateTensorInfo(O);return D}const uk={kernelName:Me._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return lk({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},dk="return abs(x);";const pk={kernelName:Me.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=zx(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,Me.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xw(a.shape,dk):new ow(a.shape,dk),n.runWebGLProgram(r,[a],a.dtype)}},hk=Vw({opSnippet:iw+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fk={kernelName:Me.Acos,backendName:"webgl",kernelFunc:hk},mk=Vw({opSnippet:iw+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gk={kernelName:Me.Acosh,backendName:"webgl",kernelFunc:mk},yk="return a + b;",bk=Uw({opSnippet:yk,packedOpSnippet:yk,supportsComplex:!0,cpuKernelImpl:ax}),vk={kernelName:Me.Add,backendName:"webgl",kernelFunc:bk};class xk{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class wk{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const kk={kernelName:Me.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return Rw({inputs:{x:r[0]},backend:a});if(r.length>(0,Me.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>(0,Me.upcastType)(e,t))),o=r.map((e=>e.shape)),i=(0,Me.env)().getBool("WEBGL_PACK")?new wk(r[0].shape,o):new xk(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const Sk={kernelName:Me.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Me.util.parseAxisParam(s,r.shape);let l=c;const u=Me.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=ok({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Me.backend_util.getInnerMostAxes(l.length,i)),Me.backend_util.assertAxesAreInnerMostDims("all",l,i);const[p,h]=Me.backend_util.computeOutAndReduceShapes(d.shape,l),f=Zw({inputs:{x:d},backend:n,attrs:{shape:[-1,Me.util.sizeFromShape(h)]}}),m=ek(f,f.dtype,"all",n);let g;if(o){g=Zw({inputs:{x:m},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(p,c)}})}else g=Zw({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}};const Tk={kernelName:Me.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Me.util.parseAxisParam(s,r.shape);let l=c;const u=Me.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=ok({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Me.backend_util.getInnerMostAxes(l.length,i)),Me.backend_util.assertAxesAreInnerMostDims("any",l,i);const[p,h]=Me.backend_util.computeOutAndReduceShapes(d.shape,l),f=Zw({inputs:{x:d},backend:n,attrs:{shape:[-1,Me.util.sizeFromShape(h)]}}),m=ek(f,f.dtype,"any",n);let g;if(o){g=Zw({inputs:{x:m},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(p,c)}})}else g=Zw({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}};class Nk{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Ik{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Me.util.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=_v(i),l=$x("coords",i);let u,d;if(1===s){d=i+1;const e=_v(d);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else d=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map((e=>"int "+e)),m=$x("sourceLocR",d-1).concat("inIdx.r"),g=$x("sourceLocG",d-1).concat("inIdx.g"),y=$x("sourceLocB",d-1).concat("inIdx.b"),b=$x("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(h,", sourceLocG").concat(h,",\n          sourceLocB").concat(h,", sourceLocA").concat(h,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Ck(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=Me.backend_util.computeOptimalWindowSize(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new Nk(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const d=Ck(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function Ek(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=r[r.length-1],o=Me.backend_util.computeOptimalWindowSize(s),i=new Ik(r,o,n,null==a),c=null==a?[t]:[t,a],l=e.runWebGLProgram(i,c,"int32");if(l.shape.length===t.shape.length){const a=Ek(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function Ak(e,t,n,a){const r=[n];if(Me.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,Me.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=Me.backend_util.computeOutAndReduceShapes(o.shape,r),l=Me.util.sizeFromShape(c),u=Zw({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const d=Ck(e,u,a);n.push(d);const p=Zw({inputs:{x:d},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Ek(e,t,a)}const Rk={kernelName:Me.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Me.util.parseAxisParam(s,r.shape);const i=Me.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=ok({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Me.backend_util.getInnerMostAxes(o.length,c.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const u=Ak(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const _k={kernelName:Me.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=Me.util.parseAxisParam(s,r.shape);const i=Me.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=ok({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=Me.backend_util.getInnerMostAxes(o.length,c.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const u=Ak(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},Fk=Vw({opSnippet:iw+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Dk={kernelName:Me.Asin,backendName:"webgl",kernelFunc:Fk},Ok=Vw({opSnippet:iw+"return log(x + sqrt(x * x + 1.0));"}),Mk={kernelName:Me.Asinh,backendName:"webgl",kernelFunc:Ok},zk=Vw({opSnippet:iw+"\n  return atan(x);\n"}),Lk={kernelName:Me.Atan,backendName:"webgl",kernelFunc:zk},Pk=Uw({opSnippet:Iw+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ew+"\n  return result;\n"}),Bk={kernelName:Me.Atan2,backendName:"webgl",kernelFunc:Pk},Wk=Vw({opSnippet:iw+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Vk={kernelName:Me.Atanh,backendName:"webgl",kernelFunc:Wk};class Uk{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(p,", ").concat(h,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class Gk{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(p,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(h,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(h," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(p,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(h,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const jk={kernelName:Me.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;hv(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Me.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&Me.util.arraysEqual(l.inShape,l.outShape))return Rw({inputs:{x:r},backend:n});const u=new Uk(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const Hk={kernelName:Me.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=Me.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],i,c,l),d=new Gk(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};class qk{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Yk{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(h,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(p,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Kk={kernelName:Me.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,d=Me.backend_util.computePool3DInfo(o.shape,i,c,[1,1,1],l,u),p=new Yk(d);return n.runWebGLProgram(p,[r],o.dtype)}};const Xk={kernelName:Me.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;hv([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=Me.backend_util.computePool2DInfo(o.shape,i,c,1,l),d=new qk(u);return n.runWebGLProgram(d,[r],o.dtype)}};const Zk={kernelName:Me.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return lk({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class Qk{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Me.backend_util.assertAndGetBroadcastShape(e,t),Me.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=a&&(Me.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(Me.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class Jk{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Me.backend_util.assertAndGetBroadcastShape(e,t),Me.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=a&&(Me.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(Me.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const $k={kernelName:Me.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:c}=t;Me.util.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Me.util.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Me.util.assert(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let d=null;null!=i&&(d=i.shape,u.push(i));let p=null;null!=c&&(p=c.shape,u.push(c));const h=(0,Me.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Jk(r.shape,s.shape,o.shape,d,p,l):new Qk(r.shape,s.shape,o.shape,d,p,l);return n.runWebGLProgram(h,u,u[0].dtype)}};class eS{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=_v(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return tS.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(tS[t]," = start[").concat(t,"] + coords.").concat(tS[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const tS=["x","y","z","w","u","v"];class nS{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=_v(this.rank),n=$x("coords",this.rank),a=$x("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function aS(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,c]=Me.slice_util.parseSliceParams(r,s,o);if(Me.slice_util.assertParamsValid(r,i,c),0===Me.util.sizeFromShape(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=Lx(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=Me.slice_util.isSliceContinous(r.shape,i,c);if(l||!u){const e=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nS(c):new eS(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Me.slice_util.computeFlatOffset(t,Me.util.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const rS={kernelName:Me.Slice,backendName:"webgl",kernelFunc:aS},sS={kernelName:Me.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;Me.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=Me.backend_util.getReshaped(r.shape,s,i),l=Me.backend_util.getPermuted(c.length,s.length),u=Me.backend_util.getReshapedPermuted(r.shape,s,i),d=Me.backend_util.getSliceBeginCoords(o,s.length),p=Me.backend_util.getSliceSize(u,o,s.length),h=[],f=Zw({inputs:{x:r},backend:n,attrs:{shape:c}}),m=ok({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Zw({inputs:{x:m},backend:n,attrs:{shape:u}}),y=aS({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const oS={kernelName:Me.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=rx(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const iS={kernelName:Me.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,Me.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=ox(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new Aw("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Cw("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const cS={kernelName:Me.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=Me.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},lS=Uw({opSnippet:"return float(a != b);",cpuKernelImpl:Cx,dtype:"bool"}),uS={kernelName:Me.NotEqual,backendName:"webgl",kernelFunc:lS};function dS(e){const{inputs:t,backend:n}=e,{input:a}=t;return Rw({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const pS={kernelName:Me.Real,backendName:"webgl",kernelFunc:dS},hS="return float(int(x));";const fS={kernelName:Me.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return Rw({inputs:{x:s},backend:a});const t=Me.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Fw({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=dS({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!Me.util.hasEncodingLoss(s.dtype,o)){const e=Rw({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=ix(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new ow(e.shape,hS),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",Me.util.getTypedArrayFromDType("bool",1)),t=lS({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},mS="return ceil(x);",gS=Vw({opSnippet:mS,packedOpSnippet:mS,cpuKernelImpl:cx}),yS={kernelName:Me.Ceil,backendName:"webgl",kernelFunc:gS};class bS{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class vS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const xS={kernelName:Me.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=(0,Me.env)().getBool("WEBGL_PACK_CLIP")?new vS(r.shape):new bS(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class wS{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function kS(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const SS={kernelName:Me.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new wS(a.shape),o=[kS(a,r.complexTensorInfos.real),kS(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class TS{constructor(e){this.outputShape=[],this.outputShape=Me.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class NS{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Me.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=_v(a),s=$x("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=o[t],l=o.slice(-2),u=o.join();let d="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];d+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(IS(o,c,e),"),\n            vec2(").concat(IS(l,c,e),"));\n        }")}const p=i.length,h=i[i.length-1];d+="\n        return getChannel(\n          getT".concat(p,"(").concat(IS(o,c,h),"),\n          vec2(").concat(IS(l,c,h),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function IS(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function CS(e){const{inputs:t,backend:n}=e,{input:a}=t;return Rw({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const ES={kernelName:Me.Imag,backendName:"webgl",kernelFunc:CS};function AS(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>dS({inputs:{input:e},backend:n}))),r=e.map((e=>CS({inputs:{input:e},backend:n}))),s=AS(a,t,n),o=AS(r,t,n),i=Fw({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=Me.util.sizeFromShape(e.shape.slice(t));return Zw({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=Me.backend_util.computeOutShape(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=lx(s,o,a,i),l=Me.backend_util.computeOutShape(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const s=e.filter((e=>Me.util.sizeFromShape(e.shape)>0)),o=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new ow(e[0].shape,hw):new xw(e[0].shape,hw);return n.runWebGLProgram(t,e,a)}const i=(0,Me.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(AS(a,t,n))}const a=AS(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new NS(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=Me.backend_util.computeOutShape(e.map((e=>e.shape)),t),r=e.map((e=>Zw({inputs:{x:e},attrs:{shape:[-1,Me.util.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:a}}(s,t,n),u=new TS(c.map((e=>e.shape))),d=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=Zw({inputs:{x:d},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(d),p}function RS(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=Me.util.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));Me.backend_util.assertParamsConsistent(o,s);const i=Me.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===Me.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter((e=>Me.util.sizeFromShape(e.shape)>0));return 1===c.length?Rw({inputs:{x:c[0]},backend:n}):AS(c,s,n)}const _S={kernelName:Me.Concat,backendName:"webgl",kernelFunc:RS};class FS{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(p,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(h,") *\n                    getW(wR, wC, ").concat(h,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(h,", xR, xC) *\n                    getW(wR, wC, ").concat(h,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(h,", d2),\n                getW(wR, wC, ").concat(h," + 1, d2),\n                getW(wR, wC, ").concat(h," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(h,"),\n                  getX(batch, xR, xC, ").concat(h," + 1),\n                  getX(batch, xR, xC, ").concat(h," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(h,", xR, xC),\n                  getX(batch, ").concat(h," + 1, xR, xC),\n                  getX(batch, ").concat(h," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class DS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(p,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(h,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(h,") *\n                  getW(wF, wR, wC, ").concat(h,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(h,"),\n                  getX(batch, xF, xR, xC, ").concat(h," + 1),\n                  getX(batch, xF, xR, xC, ").concat(h," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(h,", d2),\n                  getW(wF, wR, wC, ").concat(h," + 1, d2),\n                  getW(wF, wR, wC, ").concat(h," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class OS{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pv(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)d+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");d+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)d+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const t=2*m;if(d+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(s%2===1?(d+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),d+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):d+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=s%2===0?Me.util.nearestLargerEven(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(d+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),d+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):d+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(s%2===1?(d+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(d+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(d+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(d+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(d+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(d+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",h="";n&&(p=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),h="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(p,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(d,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(h,"\n         setOutput(result);\n       }\n     ")}}class MS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Pv(this.outputShape.length);const{dataFormat:n}=t,a=mv(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function zS(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function LS(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),d=a.inChannels,p=l[0]*l[1]*l[2],h=a.outChannels,f="channelsLast"===a.dataFormat,m=!1;let g;const y=[];if(null!=o){const e=zS(o.shape,f);null!=e&&(o=Zw({inputs:{x:o},backend:r,attrs:{shape:e}}),y.push(o))}if(null!=s){const e=zS(s.shape,f);null!=e&&(s=Zw({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if(!((1===p||1===h)&&d>ck)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&Me.util.arraysEqual(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),d={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Me.util.assert(ov(u.shape,d.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(d.shape," isn't free")));const h=Zw({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});y.push(h);const f=lk({a:d,b:h,backend:r,transposeA:false,transposeB:m,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),b=r.texData.get(f.dataId);Me.util.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=a.outShape,g=Rw({inputs:{x:f},backend:r}),g.shape=a.outShape,y.push(f)}else{const e=a.outHeight*a.outWidth,l=Zw({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=Zw({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=lk({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:m,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});g=Zw({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),y.push(l),y.push(u),y.push(d)}for(const b of y)r.disposeIntermediateTensorInfo(b);return g}function PS(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=a,m="channelsLast"===f,g=l*u*d,y=h*p,b=[a.batchSize,g,y],v=[];if(null!=o){const e=zS(o.shape,m);null!=e&&(o=Zw({inputs:{x:o},backend:r,attrs:{shape:e}}),v.push(o))}if(null!=s){const e=zS(s.shape,m);null!=e&&(s=Zw({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const x=Zw({inputs:{x:n},backend:r,attrs:{shape:[1,g,Me.util.sizeFromShape(n.shape)/g]}});v.push(x);const w=new MS(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],S=r.runWebGLProgram(w,[t],"float32",k),T=Zw({inputs:{x:S},backend:r,attrs:{shape:b}});v.push(S),v.push(T);const N=null!=s,I=null!=o,C="leakyrelu"===c,E=c?Gw(c,!0):null,A=new jw(m?T.shape:x.shape,m?x.shape:T.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,N,E,I,C),R=m?[T,x]:[x,T];if(s&&R.push(s),I&&R.push(o),C){const e=r.makeTensorInfo([],"float32",Me.util.createScalarValue(i,"float32"));R.push(e),v.push(e)}const _=r.runWebGLProgram(A,R,"float32"),F=Zw({inputs:{x:_},backend:r,attrs:{shape:a.outShape}});v.push(_);for(const D of v)r.disposeIntermediateTensorInfo(D);return F}const BS={kernelName:Me.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,d=Me.backend_util.convertConv2DDataFormat(c),p=Me.backend_util.computeConv2DInfo(r.shape,s.shape,o,l,i,u,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===d&&(0,Me.env)().getBool("WEBGL_EXP_CONV")){const e=new OS(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];h=n.runWebGLProgram(e,[r,s],"float32",t)}else if((0,Me.env)().getBool("WEBGL_CONV_IM2COL"))h=PS({x:r,filter:s,convInfo:p,backend:n});else{const e=new FS(p);h=n.runWebGLProgram(e,[r,s],"float32")}else h=LS({x:r,filter:s,convInfo:p,backend:n});const f=Zw({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}};class WS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class VS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class US{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class GS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const jS={kernelName:Me.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,d=Me.backend_util.convertConv2DDataFormat(c),p=Me.backend_util.computeConv2DInfo(r.shape,u,o,1,i,l,!1,d),h=new WS(p);return n.runWebGLProgram(h,[r,s],"float32")}};class HS{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Pv(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const qS={kernelName:Me.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=Me.backend_util.convertConv2DDataFormat(l),p=Me.backend_util.computeConv2DInfo(o,s.shape,i,1,c,u,!1,d);if((0,Me.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[p.strideHeight,p.strideWidth]],t=new HS(p);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new VS(p);return n.runWebGLProgram(e,[r,s],"float32")}}};const YS={kernelName:Me.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=Me.backend_util.computeConv3DInfo(r.shape,s.shape,o,c,i),u=new DS(l);return n.runWebGLProgram(u,[r,s],"float32")}};const KS={kernelName:Me.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a,l=Me.backend_util.computeConv3DInfo(r.shape,c,o,1,i),u=new US(l);return n.runWebGLProgram(u,[r,s],"float32")}};const XS={kernelName:Me.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a,l=Me.backend_util.computeConv3DInfo(c,s.shape,i,1,o),u=new GS(l);return n.runWebGLProgram(u,[r,s],"float32")}},ZS=Vw({opSnippet:Ww+"\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Ew,"\n  return result;\n")}),QS={kernelName:Me.Cos,backendName:"webgl",kernelFunc:ZS},JS=Vw({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$S={kernelName:Me.Cosh,backendName:"webgl",kernelFunc:JS};class eT{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const p="bilinear"===a?1:0,[h,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(h," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(h)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(h," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(p," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const tT={kernelName:Me.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new eT(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var nT;!function(e){e.Prod="*",e.Sum="+"}(nT||(nT={}));class aT{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===nT.Prod?"1.0":"0.0",o=n?s:"getX(".concat(rT(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(_v(r)," coords = getOutputCoords();\n        int end = ").concat(sT(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(sT(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(rT(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function rT(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function sT(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function oT(e,t,n,a,r,s){const o=t.shape.length,i=Me.backend_util.getAxesPermutation([a],o);let c=t;null!=i&&(c=ok({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=Me.backend_util.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let d=Rw({inputs:{x:c},backend:n});for(let p=0;p<=Math.ceil(Math.log2(u))-1;p++){const t=new aT(e,c.shape,!1,s),a=[[p]],r=d;d=n.runWebGLProgram(t,[d],d.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new aT(e,c.shape,r,s),a=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=ok({inputs:{x:d},backend:n,attrs:{perm:Me.backend_util.getUndoAxesPermutation(i)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}const iT={kernelName:Me.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return oT(nT.Prod,r,n,s,o,i)}};const cT={kernelName:Me.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return oT(nT.Sum,r,n,s,o,i)}};const lT={kernelName:Me.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=rx(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=sx(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class uT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const dT={kernelName:Me.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),d=new uT("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class pT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pv(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class hT{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Pv(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)p+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");p+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)p+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(d+1)/2;g++){const e=2*g;if(p+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(p+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),p+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):p+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?Me.util.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(p+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),p+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):p+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(p+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(p+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(p+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(p+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(p+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(p+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}p+="\n    }\n  ",p+="\n      }\n    ";let h="",f="";n&&(h=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(h,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(p,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const fT={kernelName:Me.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const d=Me.backend_util.computeConv2DInfo(r.shape,s.shape,o,u,i,l,!0);let p;p=(0,Me.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new hT(d):new pT(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",h)}};class mT{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class gT{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const yT={kernelName:Me.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,d=Me.backend_util.computeConv2DInfo(r.shape,u,o,i,c,l,!0),p=new mT(d);return n.runWebGLProgram(p,[r,s],"float32")}};const bT={kernelName:Me.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,d=Me.backend_util.computeConv2DInfo(u,s.shape,o,i,c,l,!0),p=new gT(d);return n.runWebGLProgram(p,[r,s],"float32")}};class vT{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const xT={kernelName:Me.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=Me.util.sizeFromShape(a.shape),o=Zw({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new vT(s),c=n.runWebGLProgram(i,[o],o.dtype),l=Zw({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class wT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const kT={kernelName:Me.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=Me.backend_util.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);let u;const d=new wT(l);u=n.runWebGLProgram(d,[r,s],"float32");const p=Zw({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),p}};const ST={kernelName:Me.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=Me.backend_util.decodeEinsumEquation(r,s.length);Me.backend_util.checkEinsumDimSizes(o.length,c,s);const{path:l,steps:u}=Me.backend_util.getEinsumComputePath(i,c),d=u.length;let p=null,h=o.length;const f=[];for(let m=0;m<d;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=Me.backend_util.getEinsumPermutation(h,c[e]);let r;Me.backend_util.isIdentityPermutation(t)?r=s[e]:(r=ok({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);Me.util.arraysEqual(r.shape,o)||(r=Zw({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===p?p=r:(p=Kw({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=rk({inputs:{x:p},backend:n,attrs:{axis:l[m]-(o.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},TT=Vw({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),NT={kernelName:Me.Elu,backendName:"webgl",kernelFunc:TT},IT={kernelName:Me.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=(0,Me.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Aw("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Cw("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},CT=Uw({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:ux}),ET={kernelName:Me.Equal,backendName:"webgl",kernelFunc:CT},AT=Vw({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(Me.backend_util.ERF_P,";\n  float a1 = ").concat(Me.backend_util.ERF_A1,";\n  float a2 = ").concat(Me.backend_util.ERF_A2,";\n  float a3 = ").concat(Me.backend_util.ERF_A3,";\n  float a4 = ").concat(Me.backend_util.ERF_A4,";\n  float a5 = ").concat(Me.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),RT={kernelName:Me.Erf,backendName:"webgl",kernelFunc:AT},_T=Vw({opSnippet:Ww+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:dx,dtype:"float32"}),FT={kernelName:Me.Exp,backendName:"webgl",kernelFunc:_T};function DT(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(Me.util.assert(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),Zw({inputs:{x:s},backend:a,attrs:{shape:i}})}const OT={kernelName:Me.ExpandDims,backendName:"webgl",kernelFunc:DT},MT="return exp(x) - 1.0;",zT=Vw({opSnippet:MT,packedOpSnippet:MT,cpuKernelImpl:px}),LT={kernelName:Me.Expm1,backendName:"webgl",kernelFunc:zT};class PT{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function BT(e,t,n){const a=n.texData.get(e.dataId),r=Me.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=Zw({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new PT("real",i,t),l=new PT("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(c,u,"float32"),p=n.runWebGLProgram(l,u,"float32"),h=Fw({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const f=Zw({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(h),f}const WT={kernelName:Me.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return BT(a,!1,n)}};class VT{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function UT(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||Me.util.inferDtype(r),"string"===s){const e=Me.util.getArrayFromDType(s,Me.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new VT(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const GT={kernelName:Me.Fill,backendName:"webgl",kernelFunc:UT};class jT{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const HT={kernelName:Me.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new jT(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},qT="return floor(x);",YT=Vw({opSnippet:qT,packedOpSnippet:qT,cpuKernelImpl:hx}),KT={kernelName:Me.Floor,backendName:"webgl",kernelFunc:YT},XT=Uw({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),ZT={kernelName:Me.FloorDiv,backendName:"webgl",kernelFunc:XT};class QT{constructor(e){this.variableNames=["A"];const t=mv(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class JT{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=mv(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const $T={kernelName:Me.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],d=[l,c,s];if(i||o){const e=(0,Me.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=eN&&e===tN||(tN=e,eN=document.createElement("canvas").getContext("2d",{willReadFrequently:tN})),eN.canvas.width=c,eN.canvas.height=l,eN.drawImage(r,0,0,c,l),r=eN.canvas}const p=n.makeTensorInfo(u,"int32");n.texData.get(p.dataId).usage=Lb.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const h=(0,Me.env)().getBool("WEBGL_PACK")?new JT(d):new QT(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}};let eN,tN=(0,Me.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const nN={kernelName:Me.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=Me.backend_util.convertConv2DDataFormat(u),g=Me.backend_util.computeConv2DInfo(r.shape,s.shape,c,d,l,p,!1,m);let y;const b=[],v=null!=o,x=null!=i,w="leakyrelu"===h,k=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Zw({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,u)),x&&e.push(t(i,u)),w){const t=n.makeTensorInfo([],"float32",Me.util.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&(0,Me.env)().getBool("WEBGL_EXP_CONV")){const e=h?Gw(h,!0):null,t=new OS(g,v,e,x,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if((0,Me.env)().getBool("WEBGL_CONV_IM2COL"))y=PS({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const e=h?Gw(h,!1):null,t=new FS(g,v,e,x,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=LS({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:f});const S=Zw({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const aN={kernelName:Me.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=a,f=[];let m=u;null==m&&(m=[1,1]),Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=Me.backend_util.computeConv2DInfo(r.shape,s.shape,c,m,l,d,!0),y=(0,Me.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=p?Gw(p,y):null,v=[r,s],x=null!=o,w=null!=i,k="leakyrelu"===p;if(x&&v.push(o),w&&v.push(i),k){const e=n.makeTensorInfo([],"float32",Me.util.createScalarValue(h,"float32"));v.push(e),f.push(e)}let S;S=y?new hT(g,x,b,w,k):new pT(g,x,b,w,k);const T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(S,v,"float32",T);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class rN{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=_v(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const sN={kernelName:Me.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=Me.util.sizeFromShape(a.shape),[c,l,u,d]=Me.backend_util.prepareAndValidate(a,r),p=Zw({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),h=Zw({inputs:{x:a},backend:n,attrs:{shape:[Me.util.sizeFromShape(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=fx(e,t,a.dtype,l,o,u,d,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const f=new rN(o,d,[l,u],a.shape),m=n.runWebGLProgram(f,[h,p],h.dtype),g=Zw({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};class oN{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=_v(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function iN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,c=Me.util.parseAxisParam(o,r.shape)[0];if((0,Me.env)().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];Me.util.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=Me.backend_util.segment_util.collectGatherOpShapeInfo(r,s,c,i),u=Me.util.sizeFromShape(s.shape),d=[],p=Zw({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=Zw({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});d.push(p),d.push(h);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(h),t=n.bufferSync(p),a=mx(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new oN(p.shape,f),g=n.runWebGLProgram(m,[p,h],p.dtype);d.push(g);const y=Zw({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const cN={kernelName:Me.GatherV2,backendName:"webgl",kernelFunc:iN},lN=Uw({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gx,dtype:"bool"}),uN={kernelName:Me.Greater,backendName:"webgl",kernelFunc:lN},dN=Uw({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:yx}),pN={kernelName:Me.GreaterEqual,backendName:"webgl",kernelFunc:dN};const hN={kernelName:Me.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return BT(a,!0,n)}},fN=Vw({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),mN={kernelName:Me.IsFinite,backendName:"webgl",kernelFunc:fN},gN=Vw({opSnippet:"return float(isinf(x));",dtype:"bool"}),yN={kernelName:Me.IsInf,backendName:"webgl",kernelFunc:gN},bN=Vw({opSnippet:"return float(isnan(x));",dtype:"bool"}),vN={kernelName:Me.IsNan,backendName:"webgl",kernelFunc:bN},xN=Uw({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bx,dtype:"bool"}),wN={kernelName:Me.Less,backendName:"webgl",kernelFunc:xN},kN=Uw({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:vx,dtype:"bool"}),SN={kernelName:Me.LessEqual,backendName:"webgl",kernelFunc:kN};const TN={kernelName:Me.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=xx(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},NN=Vw({opSnippet:Ww+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:wx}),IN={kernelName:Me.Log,backendName:"webgl",kernelFunc:NN},CN=Vw({opSnippet:Ww+"\n  return log(1.0 + x);\n"}),EN={kernelName:Me.Log1p,backendName:"webgl",kernelFunc:CN},AN=Uw({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),RN={kernelName:Me.LogicalAnd,backendName:"webgl",kernelFunc:AN},_N=Vw({opSnippet:"return float(!(x >= 1.0));"}),FN={kernelName:Me.LogicalNot,backendName:"webgl",kernelFunc:_N},DN=Uw({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),ON={kernelName:Me.LogicalOr,backendName:"webgl",kernelFunc:DN};class MN{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class zN{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const LN={kernelName:Me.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=(0,Me.env)().getBool("WEBGL_PACK_NORMALIZATION")?new zN(r.shape,s,o,i,c):new MN(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class PN{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const BN={kernelName:Me.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new PN(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function WN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=Me.util.parseAxisParam(s,r.shape);let l=c;const u=Me.backend_util.getAxesPermutation(l,i),d=null!=u,p=n.shouldExecuteOnCPU([r]);let h=r;if(d){if(p){const e=n.texData.get(h.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=Zx(e,r.shape,r.dtype,u,t);h=n.makeTensorInfo(t,r.dtype);n.texData.get(h.dataId).values=a}else h=ak(r,u,n);l=Me.backend_util.getInnerMostAxes(l.length,i)}Me.backend_util.assertAxesAreInnerMostDims("max",l,i);const[f,m]=Me.backend_util.computeOutAndReduceShapes(h.shape,l);let g,y=f;if(o&&(y=Me.backend_util.expandShapeToKeepDim(f,c)),p){const e=n.texData.get(h.dataId).values,t=kx(e,Me.util.sizeFromShape(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=Me.util.sizeFromShape(t),s=Zw({inputs:{x:e},attrs:{shape:[Me.util.sizeFromShape(e.shape)/r,r]},backend:a}),o=ek(s,e.dtype,"max",a),i=Zw({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(h,m,y,n);return d&&n.disposeIntermediateTensorInfo(h),g}const VN={kernelName:Me.Max,backendName:"webgl",kernelFunc:WN},UN=Uw({opSnippet:Iw+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ew+"\n  return result;\n",cpuKernelImpl:Sx}),GN={kernelName:Me.Maximum,backendName:"webgl",kernelFunc:UN};const jN={kernelName:Me.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;hv(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=Me.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&Me.util.arraysEqual(l.inShape,l.outShape))return Rw({inputs:{x:r},backend:n});const u=new Uk(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const HN={kernelName:Me.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=Me.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],i,l,c),d=new Gk(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};class qN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class YN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,p=l-1-e.padInfo.left,h=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(p,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(h," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const KN={kernelName:Me.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,d=Me.backend_util.computePool3DInfo(o.shape,i,c,[1,1,1],l,u),p=new Gk(d,"max",!0),h=n.runWebGLProgram(p,[o],o.dtype),f=new YN(d),m=n.runWebGLProgram(f,[r,h],o.dtype);return n.disposeIntermediateTensorInfo(h),m}};const XN={kernelName:Me.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;hv([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,p=Me.backend_util.computePool2DInfo(i.shape,c,l,1,u,d),h=new Uk(p,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new qN(p),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const ZN={kernelName:Me.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;Me.util.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];Me.util.assert(Me.backend_util.eitherStridesOrDilationsAreOne(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const d=Me.backend_util.computePool2DInfo(r.shape,s,o,u,i),[p,h]=function(e,t,n,a){let r=new Uk(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new Uk(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,c,d,l);return[p,h]}};const QN={kernelName:Me.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=Me.util.parseAxisParam(o,r.shape);let u=l;const d=Me.backend_util.getAxesPermutation(u,c),p=null!=d,h=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[d[a]];const n=Zx(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=ak(r,d,i);f.push(m),u=Me.backend_util.getInnerMostAxes(u.length,c)}Me.backend_util.assertAxesAreInnerMostDims("sum",u,c);const[g,y]=Me.backend_util.computeOutAndReduceShapes(m.shape,u);let b=g;s&&(b=Me.backend_util.expandShapeToKeepDim(g,l));const v=function(e,t,n,a){const r=Me.util.sizeFromShape(t),s=Zw({inputs:{x:e},attrs:{shape:[Me.util.sizeFromShape(e.shape)/r,r]},backend:a}),o=ek(s,"float32","mean",a),i=Zw({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const x of f)i.disposeIntermediateTensorInfo(x);return v}};const JN={kernelName:Me.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=Me.util.parseAxisParam(s,r.shape);let l=c;const u=Me.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=ok({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Me.backend_util.getInnerMostAxes(l.length,r.shape.length)),Me.backend_util.assertAxesAreInnerMostDims("min",l,i);const[p,h]=Me.backend_util.computeOutAndReduceShapes(d.shape,l),f=Zw({inputs:{x:d},backend:n,attrs:{shape:[-1,Me.util.sizeFromShape(h)]}}),m=ek(f,f.dtype,"min",n);let g;if(o){g=Zw({inputs:{x:m},backend:n,attrs:{shape:Me.backend_util.expandShapeToKeepDim(p,c)}})}else g=Zw({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}},$N=Uw({opSnippet:Iw+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+Ew+"\n  return result;\n",cpuKernelImpl:Tx}),eI={kernelName:Me.Minimum,backendName:"webgl",kernelFunc:$N};class tI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=_v(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class nI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=_v(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=$x("rc",a),c=$x("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let p="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");p="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const aI={kernelName:Me.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nI(r.shape,s,o):new tI(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},rI=Uw({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+Ew+"\n  return result;\n"}),sI={kernelName:Me.Mod,backendName:"webgl",kernelFunc:rI};class oI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const iI=Uw({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),cI={kernelName:Me.RealDiv,backendName:"webgl",kernelFunc:iI},lI="return a - b;",uI=Uw({opSnippet:lI,packedOpSnippet:lI,supportsComplex:!0,cpuKernelImpl:Yx}),dI={kernelName:Me.Sub,backendName:"webgl",kernelFunc:uI};function pI(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=Me.util.parseAxisParam([s],r.shape),i=WN({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=Me.backend_util.expandShapeToKeepDim(i.shape,o),l=Zw({inputs:{x:i},backend:n,attrs:{shape:c}}),u=uI({inputs:{a:r,b:l},backend:n}),d=_T({inputs:{x:u},backend:n}),p=rk({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=Zw({inputs:{x:p},backend:n,attrs:{shape:c}}),f=iI({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const hI={kernelName:Me.Softmax,backendName:"webgl",kernelFunc:pI};const fI={kernelName:Me.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:pI({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new oI(l,u,s),p=[[o]],h=n.runWebGLProgram(d,[c],"int32",p);return i||n.disposeIntermediateTensorInfo(c),h}},mI=iw+"\n  return -x;\n";const gI={kernelName:Me.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Ix(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=(0,Me.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new xw(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new ow(a.shape,mI),n.runWebGLProgram(r,[a],a.dtype)}},yI=Me.kernel_impls.nonMaxSuppressionV3Impl;const bI={kernelName:Me.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){Me.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:d}=yI(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},vI=Me.kernel_impls.nonMaxSuppressionV4Impl;const xI={kernelName:Me.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){Me.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=vI(u,d,o,i,c,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},wI=Me.kernel_impls.nonMaxSuppressionV5Impl;const kI={kernelName:Me.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){Me.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),p=o,h=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=wI(u,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class SI{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const TI={kernelName:Me.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=Me.util.sizeFromShape(r.shape),u=new SI(l,o,i,c),d=Zw({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(u,[d],s);n.disposeIntermediateTensorInfo(d);const h=Zw({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(p),h}};function NI(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=dS({inputs:{input:a},backend:n}),t=NI({inputs:{x:e},backend:n}),r=CS({inputs:{input:a},backend:n}),s=NI({inputs:{x:r},backend:n}),o=Fw({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return UT({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const II={kernelName:Me.ZerosLike,backendName:"webgl",kernelFunc:NI};const CI={kernelName:Me.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=dS({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=CS({inputs:{input:r},backend:a}),o=NI({inputs:{x:s},backend:a}),i=Fw({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return UT({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const EI={kernelName:Me.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return DT({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{Me.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),Me.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=RS({inputs:t.map((e=>{const t=DT({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class AI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=_v(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class RI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=_v(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=$x("rc",a),c=$x("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],p=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===a?2:4;f<m;f++)h+="\n        ".concat(d[f],"\n        if (").concat(p,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");h+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const _I=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===Me.util.sizeFromShape(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return UT({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RI(r.shape,s,o):new AI(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},FI={kernelName:Me.PadV2,backendName:"webgl",kernelFunc:_I},DI=Uw({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+Ew+"\n  return result;\n"}),OI={kernelName:Me.Pow,backendName:"webgl",kernelFunc:DI};const MI={kernelName:Me.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=Me.util.parseAxisParam(s,r.shape);let u=l;const d=Me.backend_util.getAxesPermutation(u,i);let p,h=r;if(null!=d&&(h=ok({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Me.backend_util.getInnerMostAxes(u.length,i),c.push(h)),Me.backend_util.assertAxesAreInnerMostDims("prod",u,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:r}=Ex(h.shape,h.dtype,e,u);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=Me.backend_util.computeOutAndReduceShapes(h.shape,u),a=Me.util.sizeFromShape(t),s=Zw({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),o=ek(s,(0,Me.sumOutType)(r.dtype),"prod",n);p=Zw({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(s),c.push(o)}if(o){c.push(p);const e=Me.backend_util.expandShapeToKeepDim(p.shape,l);p=Zw({inputs:{x:p},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const zI={kernelName:Me.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),d=n.readSync(o.dataId),[p,h,f]=Ax(c,l,u,s.shape,s.dtype,d,o.shape,i),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};const LI={kernelName:Me.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Rx(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const PI={kernelName:Me.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(o.dataId),p=i.map((e=>n.readSync(e.dataId))),h=i.map((e=>e.shape)),[f,m]=_x(l,r.shape,u,s.shape,s.dtype,d,o.shape,p,h,c);return n.makeTensorInfo(f,s.dtype,m)}},BI=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=Fx(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},WI={kernelName:Me.Range,backendName:"webgl",kernelFunc:BI},VI=Vw({opSnippet:"return 1.0 / x;"}),UI={kernelName:Me.Reciprocal,backendName:"webgl",kernelFunc:VI},GI=Vw({opSnippet:iw+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jI={kernelName:Me.Relu,backendName:"webgl",kernelFunc:GI},HI=Vw({opSnippet:iw+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),qI={kernelName:Me.Relu6,backendName:"webgl",kernelFunc:HI};class YI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class KI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const XI={kernelName:Me.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=(0,Me.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KI(r.shape,c,l,s,o):new YI(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class ZI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,p=1/u,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const QI={kernelName:Me.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new ZI(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class JI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class $I{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(p,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const eC={kernelName:Me.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=(0,Me.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $I(r.shape,c,l,s,o):new JI(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class tC{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,p=1/u,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(p,");\n\n        const int winHeight = int(").concat(h,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const nC={kernelName:Me.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new tC(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class aC{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=_v(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class rC{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=$x("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=_v(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const sC={kernelName:Me.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=Me.util.parseAxisParam(s,r.shape);if(0===o)return Rw({inputs:{x:r},backend:n});const c=(0,Me.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rC(r.shape,i):new aC(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class oC{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const iC={kernelName:Me.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=new oC(r.shape,o),[u,d]=Me.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),p=[[u,d,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,p)}},cC=Vw({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),lC={kernelName:Me.Round,backendName:"webgl",kernelFunc:cC},uC=Vw({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Dx}),dC={kernelName:Me.Rsqrt,backendName:"webgl",kernelFunc:uC};class pC{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=_v(r.length),c=_v(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let h="";o&&(h="coords[0], coords[1]");const f="getDefaultValue(".concat(h,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(p,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class hC{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=_v(r.length),c=_v(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p="getUpdates(".concat(d,")");let h="";o&&(h="coords[0], coords[1]");const f="getDefaultValue(".concat(h,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(p,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const fC={kernelName:Me.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=Me.backend_util.calculateShapes(s,r,o),p=[d/l,l];if(0===d)return n.makeTensorInfo(o,r.dtype);const h=Zw({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=Zw({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=(0,Me.env)().getBool("WEBGL_PACK")?new hC(c,i,h.shape.length,f.shape.length,u,p):new pC(c,i,h.shape.length,f.shape.length,u,p);const y=n.runWebGLProgram(g,[f,h,m],f.dtype),b=Zw({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class mC{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===(0,Me.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const gC={kernelName:Me.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new mC(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class yC{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=_v(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const bC={kernelName:Me.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new yC(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],(0,Me.upcastType)(r.dtype,s.dtype))}},vC=Vw({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(Me.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(Me.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),xC={kernelName:Me.Selu,backendName:"webgl",kernelFunc:vC},wC=Vw({opSnippet:Ww+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Mx}),kC={kernelName:Me.Sigmoid,backendName:"webgl",kernelFunc:wC},SC=Vw({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),TC={kernelName:Me.Sign,backendName:"webgl",kernelFunc:SC},NC=Vw({opSnippet:Ww+"\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Ew,"\n  return result;\n")}),IC={kernelName:Me.Sin,backendName:"webgl",kernelFunc:NC},CC=Vw({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),EC={kernelName:Me.Sinh,backendName:"webgl",kernelFunc:CC},AC=Vw({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),RC={kernelName:Me.Softplus,backendName:"webgl",kernelFunc:AC},_C={kernelName:Me.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;Me.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=_I({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),d=Me.backend_util.getReshaped(u.shape,s,i,!1),p=Me.backend_util.getPermuted(d.length,s.length,!1),h=Me.backend_util.getReshapedPermuted(u.shape,s,i,!1),f=Zw({inputs:{x:u},backend:n,attrs:{shape:d}}),m=ok({inputs:{x:f},backend:n,attrs:{perm:p}}),g=Zw({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(u),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const FC={kernelName:Me.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[d,p,h,f,m]=Px(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(p,a.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const DC={kernelName:Me.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,d]=Bx(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const OC={kernelName:Me.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Wx(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const MC={kernelName:Me.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Wx(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const zC={kernelName:Me.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Me.backend_util.calculateShapes(s,r,i),h=!1;if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=Me.util.decodeString(n.readSync(o.dataId)[0]),f=Ox(e,t,i,p,u,l,c,d,a,h);return n.makeTensorInfo(i,f.dtype,f.values)}const f=new pC(l,c,r.shape.length,s.shape.length,d,[p,1],h),m=n.runWebGLProgram(f,[s,r,o],s.dtype),g=Zw({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),g}};const LC={kernelName:Me.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=Me.util.parseAxisParam(o,r.shape)[0],c=Me.backend_util.prepareSplitSize(r,s,i),l=r.shape.length,u=new Array(l).fill(0),d=r.shape.slice();return c.map((e=>{const t=[...d];t[i]=e;const a=aS({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},PC="return sqrt(x);",BC=Vw({opSnippet:PC,packedOpSnippet:PC,cpuKernelImpl:Vx}),WC={kernelName:Me.Sqrt,backendName:"webgl",kernelFunc:BC},VC=Vw({opSnippet:"return x * x;"}),UC={kernelName:Me.Square,backendName:"webgl",kernelFunc:VC},GC="return (a - b) * (a - b);",jC=Uw({opSnippet:GC,packedOpSnippet:GC}),HC={kernelName:Me.SquaredDifference,backendName:"webgl",kernelFunc:jC};const qC={kernelName:Me.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=n.readSync(r.dataId),o=Me.backend_util.fromUint8ToStringArray(s),i=Ux(o,"string",a);return n.makeTensorInfo(r.shape,"string",i)}};const YC={kernelName:Me.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=iw+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new ow(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class KC{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=_v(n.length),s=_v(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const XC={kernelName:Me.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=Me.slice_util.sliceInfo(r.shape,s,o,i,c,l,u,d,p);let w;if(m)w=Zw({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){Me.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=Me.slice_util.computeOutShape(b,v,x),t=aS({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=Zw({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,Me.buffer)(r.shape,r.dtype,e),a=Gx(h,t,x,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new KC(b,x,h);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=Zw({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const ZC={kernelName:Me.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,p=n.readSync(u.dataId),h=n.readSync(d.dataId),[f,m]=jx(p,h,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const QC={kernelName:Me.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=Hx(i,c,r),p=u.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const JC={kernelName:Me.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=qx(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},$C=Vw({opSnippet:"return tan(x);"}),eE={kernelName:Me.Tan,backendName:"webgl",kernelFunc:$C},tE=Vw({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nE={kernelName:Me.Tanh,backendName:"webgl",kernelFunc:tE};const aE={kernelName:Me.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=Me.backend_util.calculateShapes(o,s,r.shape),p=[d/l,l];if(0===d)return n.makeTensorInfo(r.shape,s.dtype);const h=Zw({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=Zw({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=Zw({inputs:{x:r},backend:n,attrs:{shape:p}}),g=new pC(c,i,h.shape.length,f.shape.length,u,p,!1,!0),y=n.runWebGLProgram(g,[f,h,m],m.dtype),b=Zw({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class rE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=_v(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function sE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Me.util.decodeString(e))):e,a=(0,Me.buffer)(r.shape,r.dtype,t),o=Kx(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new rE(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const oE={kernelName:Me.Tile,backendName:"webgl",kernelFunc:sE};class iE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class cE{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lE(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function uE(e){let t=1;for(;t<e;)t*=2;return t}const dE={kernelName:Me.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=(0,Me.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=(0,Me.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const e=n.readSync(r.dataId),[t,a]=Xx(e,l,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,UT({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(r):r,f=Me.util.sizeFromShape(l)/u,m=Zw({inputs:{x:h},attrs:{shape:[f,u]},backend:n});p&&lE(n,h);const g=uE(s),y=uE(u);let b=null;const v=()=>null===b?[m,m]:[m,b],x=(e,t,a)=>{const r=v(),s=new iE(a),o=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),lE(n,i)};for(let N=1;N<g;N*=2){const e=2*N;for(let t=N;t>=1;t/=2)x(e,t,[f,y])}for(let N=y;N>g;N/=2){const e=v(),t=new cE([f,N/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),lE(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)x(o,n,b.shape)}let w=b;b=aS({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),lE(n,w);let k=iN({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});lE(n,m);const S=l.slice(0,-1);S.push(s),w=b,b=Zw({inputs:{x:b},attrs:{shape:S},backend:n}),lE(n,w);const T=k;return k=Zw({inputs:{x:k},attrs:{shape:S},backend:n}),lE(n,T),[k,b]}};class pE{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const hE={kernelName:Me.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,p,h]=r.shape,[f,m]=null!=l?l:[d,p],g=new pE(d,p,o,i,c,[u,f,m,h]);return n.runWebGLProgram(g,[r,s],"float32")}};const fE={kernelName:Me.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;hv(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=Qx(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const mE={kernelName:Me.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){p[s]=m;const e=aS({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),t=Zw({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class gE{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const yE={kernelName:Me.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=Me.backend_util.getAxesPermutation([l],i);let d=r;null!=u&&(d=ok({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(d),l=Me.backend_util.getInnerMostAxes(1,i)[0]);const p=Me.backend_util.segment_util.computeOutShape(d.shape,l,o),h=Me.util.sizeFromShape([d.shape[l]]),f=Zw({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});c.push(f);const m=(0,Me.sumOutType)(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],l=Me.backend_util.segment_util.segOpComputeOptimalWindowSize(i,s),u=new gE({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),d=n.compileAndRun(u,[e,a],r);if(c.push(d),d.shape[1]===s)return d;const p=BI({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=sE({inputs:{x:p},backend:n,attrs:{reps:[i/l]}});c.push(p),c.push(h);return g(d,t,h,r,s)},y=Zw({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:p}});let b=y;if(null!=u){c.push(y);const e=Me.backend_util.getUndoAxesPermutation(u);b=ok({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},bE=[uk,pk,fk,gk,vk,kk,Sk,Tk,Rk,_k,Dk,Mk,Lk,Bk,Vk,jk,Hk,Kk,Xk,Zk,$k,sS,oS,iS,cS,fS,yS,xS,Dw,SS,_S,BS,jS,qS,YS,KS,XS,QS,$S,tT,iT,cT,lT,dT,fT,yT,bT,xT,kT,ST,NT,IT,ET,RT,FT,OT,LT,WT,GT,HT,KT,ZT,$T,nN,aN,sN,cN,uN,pN,_w,hN,ES,mN,yN,vN,zw,wN,SN,TN,IN,EN,RN,FN,ON,LN,BN,VN,GN,jN,HN,KN,XN,ZN,QN,JN,eI,aI,sI,fI,Xw,gI,bI,xI,kI,uS,TI,CI,EI,FI,OI,Bw,MI,zI,LI,PI,WI,pS,cI,UI,jI,qI,Qw,XI,QI,eC,nC,sC,iC,lC,dC,fC,gC,bC,xC,kC,TC,IC,EC,rS,hI,RC,_C,FC,DC,OC,MC,zC,LC,WC,UC,HC,qC,YC,XC,ZC,QC,JC,dI,sk,eE,nE,aE,oE,dE,hE,ik,fE,mE,yE,II];for(const n of bE)(0,Me.registerKernel)(n);Me.version_core,vd.version_converter;var vE=n(3915);const xE=()=>{const[e,t]=(0,a.useState)(!1),[n,r]=(0,a.useState)(null),s=(0,a.useRef)(null),o=(0,a.useRef)(null),i=(0,a.useRef)(null);(0,a.useEffect)((()=>{(async()=>{const e=await vE.load();r(e)})()}),[]);const c=()=>{if(s.current&&n){if(0===s.current.videoWidth||0===s.current.videoHeight)return void requestAnimationFrame(c);n.detect(s.current).then((e=>{l(e),e.forEach((e=>{["person","fire","knife","gun"].includes(e.class)&&(u(e.class),"person"===e.class&&d())})),requestAnimationFrame(c)}))}},l=e=>{const t=o.current.getContext("2d");t.clearRect(0,0,t.canvas.width,t.canvas.height),e.forEach((e=>{const[n,a,r,s]=e.bbox;t.strokeStyle="red",t.lineWidth=2,t.strokeRect(n,a,r,s),t.font="18px Arial",t.fillStyle="red",t.fillText(e.class,n,a>10?a-5:a+10)}))},u=e=>{i.current&&i.current.play(),alert("Detected: ".concat(e))},d=()=>{Fe("service_uwspnno","template_25dv8kc",{to_name:"User",message:"A person has been detected in the surveillance area."},"7vxBxQZXleccAfwi-").then((e=>{console.log("Email sent successfully!",e.status,e.text)})).catch((e=>{console.error("Failed to send email.",e)}))};return(0,De.jsxs)("div",{className:"video-page",children:[(0,De.jsx)("h2",{children:"Surveillance Videos Links"}),(0,De.jsx)("div",{className:"card-container",children:[{id:1,title:"Fighting Detection",url:"https://drive.google.com/file/d/1vvKaw9_51aO14WMgW7KE_0mxOXP2V3lL/view?usp=sharing"},{id:2,title:"Gun Shooting Detection",url:"https://drive.google.com/file/d/1rRMpc_wF7gKCjVkY4OrVQ5qJx6HDcr0w/view?usp=sharing"},{id:3,title:"Accident Detection",url:"https://drive.google.com/file/d/1PlSk1im8M6l_2ngNuKqgJ6hRfwuYLRKC/view?usp=sharing"},{id:4,title:"Abuse Detection",url:"https://drive.google.com/file/d/11u-7x5b3x4vGM2ZIFaCDw0Ochz7Zp_Jd/view?usp=sharing"},{id:5,title:"Fire Detection",url:"https://drive.google.com/file/d/1QE-f3V3AE1g_wxX7ydxo25Sv05fCPaEc/view?usp=sharing"},{id:6,title:"Module1 Video",url:"https://drive.google.com/file/d/13cKsPaxWqE4hF1BQ4o4HOdE5X7FVPhLA/view?usp=sharing"}].map((e=>(0,De.jsx)("div",{className:"card",onClick:()=>window.open(e.url,"_blank"),children:(0,De.jsx)("h3",{children:e.title})},e.id)))}),(0,De.jsx)("h2",{children:"Live Recording"}),(0,De.jsxs)("div",{className:"live-section",children:[(0,De.jsx)("video",{ref:s,className:"video-preview"}),(0,De.jsx)("canvas",{ref:o,className:"video-canvas"}),(0,De.jsx)("audio",{ref:i,src:"ambulance-sound-27708(1).mp3",preload:"auto"}),(0,De.jsxs)("div",{className:"controls",children:[!e&&(0,De.jsx)("button",{onClick:()=>{navigator.mediaDevices.getUserMedia({video:!0,audio:!0}).then((e=>{s.current.srcObject=e,s.current.play(),s.current.onloadedmetadata=()=>{t(!0),c()}})).catch((e=>console.error("Error accessing media devices.",e)))},children:"Start Recording"}),e&&(0,De.jsx)("button",{onClick:()=>{s.current.srcObject.getTracks().forEach((e=>e.stop())),t(!1)},children:"Stop Recording"})]})]})]})},wE=()=>"/video-page"===Z().pathname?null:(0,De.jsxs)("nav",{className:"navigation-links",children:[(0,De.jsx)("a",{href:"https://ijsrem.com/download/intelligence-surveillance-system-using-machine-learning/",className:"nav-link",children:"ResearchPaperLink"}),(0,De.jsx)("a",{href:"https://arxiv.org/pdf/2301.03561",className:"nav-link",children:"BasePaper"}),(0,De.jsx)("a",{href:"https://docs.google.com/presentation/d/1WnB6SkX2wB4iZOjSV4DqfRj6u8lYL1hn/edit?usp=sharing&ouid=103637770682511984535&rtpof=true&sd=true",className:"nav-link",children:"ProjectPPT"}),(0,De.jsx)("a",{href:"https://drive.google.com/file/d/1lw5s-O62Q5GPJWzbDDU2oBbu1RlC3I_I/view?usp=sharing",className:"nav-link",children:"ProjectSynopsis"}),(0,De.jsx)("a",{href:"https://drive.google.com/file/d/1s0np2MN_ecK0YROCL6pA4wECcBPUzlP6/view?usp=sharing",className:"nav-link",children:"ProjectReport"}),(0,De.jsx)(Ne,{to:"/video-page",className:"nav-link",children:"ProjectVideo And Live Person Detection"})]}),kE=()=>"/video-page"===Z().pathname?null:(0,De.jsxs)("section",{className:"contact-section",children:[(0,De.jsx)("h2",{children:"Contact Us For Any Query"}),(0,De.jsx)(Oe,{})]});const SE=function(){return(0,De.jsx)(ke,{children:(0,De.jsxs)("div",{className:"container",children:[(0,De.jsxs)("header",{children:[(0,De.jsxs)("h1",{children:["Welcome to Intelligence Surveillance System",(0,De.jsx)("br",{})," Landing Page of Project"]}),(0,De.jsx)(wE,{})]}),(0,De.jsx)("main",{className:"main-content",children:(0,De.jsxs)(fe,{children:[(0,De.jsx)(pe,{path:"/video-page",element:(0,De.jsx)(xE,{})}),(0,De.jsx)(pe,{path:"/",element:(0,De.jsxs)("p",{children:["DEPARTMENT OF COMPUTER SCIENCE AND ENGINEERING",(0,De.jsx)("br",{})," ",(0,De.jsx)("br",{}),"IIMT COLLEGE OF ENGINEERING, GREATER NOIDA."]})})]})}),(0,De.jsxs)("footer",{children:[(0,De.jsx)(kE,{}),(0,De.jsx)("section",{className:"copyright-section",children:(0,De.jsx)("p",{children:"\xa9 2024 Prof.  Badal Bhushan,Suyash Bajpai,Rahul Kumar, Saurabh Vashistha  . All rights reserved."})})]})]})})},TE=e=>{e&&e instanceof Function&&n.e(453).then(n.bind(n,6453)).then((t=>{let{getCLS:n,getFID:a,getFCP:r,getLCP:s,getTTFB:o}=t;n(e),a(e),r(e),s(e),o(e)}))};s.createRoot(document.getElementById("root")).render((0,De.jsx)(a.StrictMode,{children:(0,De.jsx)(SE,{})})),TE()})()})();
//# sourceMappingURL=main.ab680d80.js.map